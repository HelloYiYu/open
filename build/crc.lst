ARM GAS  /tmp/ccO62IFa.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"crc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_CRC_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_CRC_Init
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_CRC_Init:
  25              	.LFB327:
  26              		.file 1 "Core/Src/crc.c"
   1:Core/Src/crc.c **** /* USER CODE BEGIN Header */
   2:Core/Src/crc.c **** /**
   3:Core/Src/crc.c ****   ******************************************************************************
   4:Core/Src/crc.c ****   * @file    crc.c
   5:Core/Src/crc.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/crc.c ****   *          of the CRC instances.
   7:Core/Src/crc.c ****   ******************************************************************************
   8:Core/Src/crc.c ****   * @attention
   9:Core/Src/crc.c ****   *
  10:Core/Src/crc.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/crc.c ****   * All rights reserved.
  12:Core/Src/crc.c ****   *
  13:Core/Src/crc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/crc.c ****   * in the root directory of this software component.
  15:Core/Src/crc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/crc.c ****   *
  17:Core/Src/crc.c ****   ******************************************************************************
  18:Core/Src/crc.c ****   */
  19:Core/Src/crc.c **** /* USER CODE END Header */
  20:Core/Src/crc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/crc.c **** #include "crc.h"
  22:Core/Src/crc.c **** 
  23:Core/Src/crc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/crc.c **** 
  25:Core/Src/crc.c **** /* USER CODE END 0 */
  26:Core/Src/crc.c **** 
  27:Core/Src/crc.c **** CRC_HandleTypeDef hcrc;
  28:Core/Src/crc.c **** 
  29:Core/Src/crc.c **** /* CRC init function */
  30:Core/Src/crc.c **** void MX_CRC_Init(void)
  31:Core/Src/crc.c **** {
  27              		.loc 1 31 1 view -0
ARM GAS  /tmp/ccO62IFa.s 			page 2


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  32:Core/Src/crc.c **** 
  33:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_Init 0 */
  34:Core/Src/crc.c **** 
  35:Core/Src/crc.c ****   /* USER CODE END CRC_Init 0 */
  36:Core/Src/crc.c **** 
  37:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_Init 1 */
  38:Core/Src/crc.c **** 
  39:Core/Src/crc.c ****   /* USER CODE END CRC_Init 1 */
  40:Core/Src/crc.c ****   hcrc.Instance = CRC;
  36              		.loc 1 40 3 view .LVU1
  37              		.loc 1 40 17 is_stmt 0 view .LVU2
  38 0002 0948     		ldr	r0, .L4
  39 0004 094B     		ldr	r3, .L4+4
  40 0006 0360     		str	r3, [r0]
  41:Core/Src/crc.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
  41              		.loc 1 41 3 is_stmt 1 view .LVU3
  42              		.loc 1 41 34 is_stmt 0 view .LVU4
  43 0008 0023     		movs	r3, #0
  44 000a 0371     		strb	r3, [r0, #4]
  42:Core/Src/crc.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
  45              		.loc 1 42 3 is_stmt 1 view .LVU5
  46              		.loc 1 42 33 is_stmt 0 view .LVU6
  47 000c 4371     		strb	r3, [r0, #5]
  43:Core/Src/crc.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
  48              		.loc 1 43 3 is_stmt 1 view .LVU7
  49              		.loc 1 43 36 is_stmt 0 view .LVU8
  50 000e 4361     		str	r3, [r0, #20]
  44:Core/Src/crc.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
  51              		.loc 1 44 3 is_stmt 1 view .LVU9
  52              		.loc 1 44 37 is_stmt 0 view .LVU10
  53 0010 8361     		str	r3, [r0, #24]
  45:Core/Src/crc.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
  54              		.loc 1 45 3 is_stmt 1 view .LVU11
  55              		.loc 1 45 24 is_stmt 0 view .LVU12
  56 0012 0133     		adds	r3, r3, #1
  57 0014 0362     		str	r3, [r0, #32]
  46:Core/Src/crc.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
  58              		.loc 1 46 3 is_stmt 1 view .LVU13
  59              		.loc 1 46 7 is_stmt 0 view .LVU14
  60 0016 FFF7FEFF 		bl	HAL_CRC_Init
  61              	.LVL0:
  62              		.loc 1 46 6 view .LVU15
  63 001a 0028     		cmp	r0, #0
  64 001c 00D1     		bne	.L3
  65              	.L1:
  47:Core/Src/crc.c ****   {
  48:Core/Src/crc.c ****     Error_Handler();
  49:Core/Src/crc.c ****   }
  50:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_Init 2 */
ARM GAS  /tmp/ccO62IFa.s 			page 3


  51:Core/Src/crc.c **** 
  52:Core/Src/crc.c ****   /* USER CODE END CRC_Init 2 */
  53:Core/Src/crc.c **** 
  54:Core/Src/crc.c **** }
  66              		.loc 1 54 1 view .LVU16
  67              		@ sp needed
  68 001e 10BD     		pop	{r4, pc}
  69              	.L3:
  48:Core/Src/crc.c ****   }
  70              		.loc 1 48 5 is_stmt 1 view .LVU17
  71 0020 FFF7FEFF 		bl	Error_Handler
  72              	.LVL1:
  73              		.loc 1 54 1 is_stmt 0 view .LVU18
  74 0024 FBE7     		b	.L1
  75              	.L5:
  76 0026 C046     		.align	2
  77              	.L4:
  78 0028 00000000 		.word	.LANCHOR0
  79 002c 00300240 		.word	1073885184
  80              		.cfi_endproc
  81              	.LFE327:
  83              		.section	.text.HAL_CRC_MspInit,"ax",%progbits
  84              		.align	1
  85              		.global	HAL_CRC_MspInit
  86              		.syntax unified
  87              		.code	16
  88              		.thumb_func
  90              	HAL_CRC_MspInit:
  91              	.LVL2:
  92              	.LFB328:
  55:Core/Src/crc.c **** 
  56:Core/Src/crc.c **** void HAL_CRC_MspInit(CRC_HandleTypeDef* crcHandle)
  57:Core/Src/crc.c **** {
  93              		.loc 1 57 1 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 8
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  98              		.loc 1 57 1 is_stmt 0 view .LVU20
  99 0000 82B0     		sub	sp, sp, #8
 100              	.LCFI1:
 101              		.cfi_def_cfa_offset 8
  58:Core/Src/crc.c **** 
  59:Core/Src/crc.c ****   if(crcHandle->Instance==CRC)
 102              		.loc 1 59 3 is_stmt 1 view .LVU21
 103              		.loc 1 59 15 is_stmt 0 view .LVU22
 104 0002 0268     		ldr	r2, [r0]
 105              		.loc 1 59 5 view .LVU23
 106 0004 074B     		ldr	r3, .L9
 107 0006 9A42     		cmp	r2, r3
 108 0008 01D0     		beq	.L8
 109              	.LVL3:
 110              	.L6:
  60:Core/Src/crc.c ****   {
  61:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_MspInit 0 */
  62:Core/Src/crc.c **** 
  63:Core/Src/crc.c ****   /* USER CODE END CRC_MspInit 0 */
ARM GAS  /tmp/ccO62IFa.s 			page 4


  64:Core/Src/crc.c ****     /* CRC clock enable */
  65:Core/Src/crc.c ****     __HAL_RCC_CRC_CLK_ENABLE();
  66:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_MspInit 1 */
  67:Core/Src/crc.c **** 
  68:Core/Src/crc.c ****   /* USER CODE END CRC_MspInit 1 */
  69:Core/Src/crc.c ****   }
  70:Core/Src/crc.c **** }
 111              		.loc 1 70 1 view .LVU24
 112 000a 02B0     		add	sp, sp, #8
 113              		@ sp needed
 114 000c 7047     		bx	lr
 115              	.LVL4:
 116              	.L8:
  65:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_MspInit 1 */
 117              		.loc 1 65 5 is_stmt 1 view .LVU25
 118              	.LBB2:
  65:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_MspInit 1 */
 119              		.loc 1 65 5 view .LVU26
  65:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_MspInit 1 */
 120              		.loc 1 65 5 view .LVU27
 121 000e 064A     		ldr	r2, .L9+4
 122 0010 916B     		ldr	r1, [r2, #56]
 123 0012 8020     		movs	r0, #128
 124              	.LVL5:
  65:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_MspInit 1 */
 125              		.loc 1 65 5 is_stmt 0 view .LVU28
 126 0014 4001     		lsls	r0, r0, #5
 127 0016 0143     		orrs	r1, r0
 128 0018 9163     		str	r1, [r2, #56]
  65:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_MspInit 1 */
 129              		.loc 1 65 5 is_stmt 1 view .LVU29
 130 001a 936B     		ldr	r3, [r2, #56]
 131 001c 0340     		ands	r3, r0
 132 001e 0193     		str	r3, [sp, #4]
  65:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_MspInit 1 */
 133              		.loc 1 65 5 view .LVU30
 134 0020 019B     		ldr	r3, [sp, #4]
 135              	.LBE2:
  65:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_MspInit 1 */
 136              		.loc 1 65 5 view .LVU31
 137              		.loc 1 70 1 is_stmt 0 view .LVU32
 138 0022 F2E7     		b	.L6
 139              	.L10:
 140              		.align	2
 141              	.L9:
 142 0024 00300240 		.word	1073885184
 143 0028 00100240 		.word	1073876992
 144              		.cfi_endproc
 145              	.LFE328:
 147              		.section	.text.HAL_CRC_MspDeInit,"ax",%progbits
 148              		.align	1
 149              		.global	HAL_CRC_MspDeInit
 150              		.syntax unified
 151              		.code	16
 152              		.thumb_func
 154              	HAL_CRC_MspDeInit:
 155              	.LVL6:
ARM GAS  /tmp/ccO62IFa.s 			page 5


 156              	.LFB329:
  71:Core/Src/crc.c **** 
  72:Core/Src/crc.c **** void HAL_CRC_MspDeInit(CRC_HandleTypeDef* crcHandle)
  73:Core/Src/crc.c **** {
 157              		.loc 1 73 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
  74:Core/Src/crc.c **** 
  75:Core/Src/crc.c ****   if(crcHandle->Instance==CRC)
 162              		.loc 1 75 3 view .LVU34
 163              		.loc 1 75 15 is_stmt 0 view .LVU35
 164 0000 0268     		ldr	r2, [r0]
 165              		.loc 1 75 5 view .LVU36
 166 0002 054B     		ldr	r3, .L14
 167 0004 9A42     		cmp	r2, r3
 168 0006 00D0     		beq	.L13
 169              	.L11:
  76:Core/Src/crc.c ****   {
  77:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_MspDeInit 0 */
  78:Core/Src/crc.c **** 
  79:Core/Src/crc.c ****   /* USER CODE END CRC_MspDeInit 0 */
  80:Core/Src/crc.c ****     /* Peripheral clock disable */
  81:Core/Src/crc.c ****     __HAL_RCC_CRC_CLK_DISABLE();
  82:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_MspDeInit 1 */
  83:Core/Src/crc.c **** 
  84:Core/Src/crc.c ****   /* USER CODE END CRC_MspDeInit 1 */
  85:Core/Src/crc.c ****   }
  86:Core/Src/crc.c **** }
 170              		.loc 1 86 1 view .LVU37
 171              		@ sp needed
 172 0008 7047     		bx	lr
 173              	.L13:
  81:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_MspDeInit 1 */
 174              		.loc 1 81 5 is_stmt 1 view .LVU38
 175 000a 044A     		ldr	r2, .L14+4
 176 000c 936B     		ldr	r3, [r2, #56]
 177 000e 0449     		ldr	r1, .L14+8
 178 0010 0B40     		ands	r3, r1
 179 0012 9363     		str	r3, [r2, #56]
 180              		.loc 1 86 1 is_stmt 0 view .LVU39
 181 0014 F8E7     		b	.L11
 182              	.L15:
 183 0016 C046     		.align	2
 184              	.L14:
 185 0018 00300240 		.word	1073885184
 186 001c 00100240 		.word	1073876992
 187 0020 FFEFFFFF 		.word	-4097
 188              		.cfi_endproc
 189              	.LFE329:
 191              		.global	hcrc
 192              		.section	.bss.hcrc,"aw",%nobits
 193              		.align	2
 194              		.set	.LANCHOR0,. + 0
 197              	hcrc:
 198 0000 00000000 		.space	36
ARM GAS  /tmp/ccO62IFa.s 			page 6


 198      00000000 
 198      00000000 
 198      00000000 
 198      00000000 
 199              		.text
 200              	.Letext0:
 201              		.file 2 "/home/yiyu/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 202              		.file 3 "/home/yiyu/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 203              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 204              		.file 5 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 205              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_crc.h"
 206              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
 207              		.file 8 "Core/Inc/main.h"
 208              		.file 9 "Core/Inc/crc.h"
ARM GAS  /tmp/ccO62IFa.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 crc.c
     /tmp/ccO62IFa.s:18     .text.MX_CRC_Init:0000000000000000 $t
     /tmp/ccO62IFa.s:24     .text.MX_CRC_Init:0000000000000000 MX_CRC_Init
     /tmp/ccO62IFa.s:78     .text.MX_CRC_Init:0000000000000028 $d
     /tmp/ccO62IFa.s:84     .text.HAL_CRC_MspInit:0000000000000000 $t
     /tmp/ccO62IFa.s:90     .text.HAL_CRC_MspInit:0000000000000000 HAL_CRC_MspInit
     /tmp/ccO62IFa.s:142    .text.HAL_CRC_MspInit:0000000000000024 $d
     /tmp/ccO62IFa.s:148    .text.HAL_CRC_MspDeInit:0000000000000000 $t
     /tmp/ccO62IFa.s:154    .text.HAL_CRC_MspDeInit:0000000000000000 HAL_CRC_MspDeInit
     /tmp/ccO62IFa.s:185    .text.HAL_CRC_MspDeInit:0000000000000018 $d
     /tmp/ccO62IFa.s:197    .bss.hcrc:0000000000000000 hcrc
     /tmp/ccO62IFa.s:193    .bss.hcrc:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_CRC_Init
Error_Handler
