ARM GAS  /tmp/ccqcX5vb.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvTaskCheckFreeStackSpace,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  23              	prvTaskCheckFreeStackSpace:
  24              	.LVL0:
  25              	.LFB27:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
  31:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
ARM GAS  /tmp/ccqcX5vb.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  37:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  44:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  45:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** for the header files above, but not in this file, in order to generate the
  46:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** correct privileged Vs unprivileged linkage and placement. */
  47:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  48:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  49:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  73:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  76:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Bits used to recored how a task's stack and TCB were allocated. */
  79:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  80:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  81:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  82:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  83:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
  84:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
  85:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
  86:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
  87:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
  88:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  89:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
ARM GAS  /tmp/ccqcX5vb.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  91:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  93:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
  94:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  95:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
  96:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
  97:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
  98:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
  99:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
ARM GAS  /tmp/ccqcX5vb.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
ARM GAS  /tmp/ccqcX5vb.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle ) )
 232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock 			/* The old naming convention is used to prevent breaking kern
 253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
ARM GAS  /tmp/ccqcX5vb.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks.
 304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
 306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
 307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments in FreeRTOS.h with the definition of
 316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolida
ARM GAS  /tmp/ccqcX5vb.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_POSIX_ERRNO == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		int iTaskErrno;
 327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
 337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------
 340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** xDelayedTaskList1 and xDelayedTaskList2 could be move to function scople but
 341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** doing so breaks some kernel aware debuggers and debuggers that rely on removing
 342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the static qualifier. */
 343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the errno of the currently running task. */
 365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	int FreeRTOS_errno = 0;
 367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xPendedTicks 			= ( TickType_t ) 0U;
ARM GAS  /tmp/ccqcX5vb.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Do not move these variables to function scope as doing so prevents the
 394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	code working with debuggers that need to remove the static qualifier. */
 395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -restore */
 401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void ); /*lint !e526 Symbol not defined as it is an application 
 414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccqcX5vb.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
ARM GAS  /tmp/ccqcX5vb.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
 511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGE
 513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
ARM GAS  /tmp/ccqcX5vb.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * called by the function.
 570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure. */
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
ARM GAS  /tmp/ccqcX5vb.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the structures ar
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consoli
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
ARM GAS  /tmp/ccqcX5vb.s 			page 13


 660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
ARM GAS  /tmp/ccqcX5vb.s 			page 14


 717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079
ARM GAS  /tmp/ccqcX5vb.s 			page 15


 774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returne
 779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
 781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has been consoli
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
ARM GAS  /tmp/ccqcX5vb.s 			page 16


 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			debugging. */
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
ARM GAS  /tmp/ccqcX5vb.s 			page 17


 888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pcName != NULL )
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configMAX_TASK_NAME_LEN characters just in case the memory after the
 900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			string is not accessible (extremely unlikely). */
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pcName[ x ] == ( char ) 0x00 )
 902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				break;
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the name string is terminated in the case that the string length
 912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was greater or equal to configMAX_TASK_NAME_LEN. */
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The task has not been given a name, so just ensure there is a NULL
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		terminator when it is read out. */
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
ARM GAS  /tmp/ccqcX5vb.s 			page 18


 945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure.
1000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
1001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
ARM GAS  /tmp/ccqcX5vb.s 			page 19


1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
1003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
1007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
1009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPriv
1036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
1057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
ARM GAS  /tmp/ccqcX5vb.s 			page 20


1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxCreatedTask != NULL )
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccqcX5vb.s 			page 21


1116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list. */
ARM GAS  /tmp/ccqcX5vb.s 			page 22


1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Call the delete hook before portPRE_TASK_DELETE_HOOK() as
1213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK() does not return in the Win32 port. */
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
1215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
ARM GAS  /tmp/ccqcX5vb.s 			page 23


1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
ARM GAS  /tmp/ccqcX5vb.s 			page 24


1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
ARM GAS  /tmp/ccqcX5vb.s 			page 25


1344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_xTaskAbortDel
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t const * pxStateList, *pxDelayedList, *pxOverflowedDelayedList;
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
1391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccqcX5vb.s 			page 26


1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxDelayedList = pxDelayedTaskList;
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it blocked
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#if( configUSE_TASK_NOTIFICATIONS == 1 )
1425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* The task does not appear on the event list item of
1427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							and of the RTOS objects, but could still be in the
1428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							blocked state if it is waiting on its notification
1429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							rather than waiting on an object. */
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eBlocked;
1433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
1435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eSuspended;
1437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
1440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							eReturn = eSuspended;
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
ARM GAS  /tmp/ccqcX5vb.s 			page 27


1458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the task
1486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			that called uxTaskPriorityGet() that is being queried. */
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
ARM GAS  /tmp/ccqcX5vb.s 			page 28


1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccqcX5vb.s 			page 29


1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
ARM GAS  /tmp/ccqcX5vb.s 			page 30


1629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccqcX5vb.s 			page 31


1686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccqcX5vb.s 			page 32


1743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Rig
1781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccqcX5vb.s 			page 33


1800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
1809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
1825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
ARM GAS  /tmp/ccqcX5vb.s 			page 34


1857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
1861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
ARM GAS  /tmp/ccqcX5vb.s 			page 35


1914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccqcX5vb.s 			page 36


1971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_P
1994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
2000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
2007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
2010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
2011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
2013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_PRIOR
2014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
2015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
2017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccqcX5vb.s 			page 37


2028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
2030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
2034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
2036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
2048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first.
2053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
2054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for additional information. */
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
2062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
2064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
2067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
2070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
2074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccqcX5vb.s 			page 38


2085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* portSOFRWARE_BARRIER() is only implemented for emulated/simulated ports that
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	do not otherwise exhibit real time behaviour. */
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSOFTWARE_BARRIER();
2120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
2122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is used to allow calls to vTaskSuspendAll() to nest. */
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Enforces ordering for ports and optimised compilers that may otherwise place
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the above increment elsewhere. */
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portMEMORY_BARRIER();
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
ARM GAS  /tmp/ccqcX5vb.s 			page 39


2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccqcX5vb.s 			page 40


2199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xPendedCounts > ( TickType_t ) 0U )
ARM GAS  /tmp/ccqcX5vb.s 			page 41


2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--xPendedCounts;
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( xPendedCounts > ( TickType_t ) 0U );
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xPendedTicks = 0;
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
2299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccqcX5vb.s 			page 42


2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: https://www.freertos.org/RTOS-Cortex-M3-M4.html */
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccqcX5vb.s 			page 43


2370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xBreakLoop;
2378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );  /*lint !e9079 void * is used as this macro i
2384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
2388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xBreakLoop = pdFALSE;
2392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == ( char ) 0x00 )
2402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xBreakLoop != pdFALSE )
2414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccqcX5vb.s 			page 44


2427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
ARM GAS  /tmp/ccqcX5vb.s 			page 45


2484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxTCB;
2498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
ARM GAS  /tmp/ccqcX5vb.s 			page 46


2541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
2572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccqcX5vb.s 			page 47


2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
2612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Must not be called with the scheduler suspended as the implementation
2614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	relies on xPendedTicks being wound down to 0 in xTaskResumeAll(). */
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended == 0 );
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Use xPendedTicks to mimic xTicksToCatchUp number of ticks occurring when
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the scheduler is suspended so the ticks are executed in xTaskResumeAll(). */
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vTaskSuspendAll();
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xPendedTicks += xTicksToCatchUp;
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
2622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xYieldRequired;
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = xTask;
2632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccqcX5vb.s 			page 48


2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This lets the task know it was forcibly removed from the
2660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						blocked state so it should not re-evaluate its block time and
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						then block again. */
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
2697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
ARM GAS  /tmp/ccqcX5vb.s 			page 49


2712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
2749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
ARM GAS  /tmp/ccqcX5vb.s 			page 50


2769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
ARM GAS  /tmp/ccqcX5vb.s 			page 51


2826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xPendedTicks == ( TickType_t ) 0 )
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 1 )
2850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xYieldPending != pdFALSE )
2852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
2861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++xPendedTicks;
2865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccqcX5vb.s 			page 52


2883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )
2935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccqcX5vb.s 			page 53


2940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = pxCurrentTCB;
2968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccqcX5vb.s 			page 54


2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
3001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
3005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
3006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the amount of time the task has been running to the
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			accumulated time so far.  The time the task started running was
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			stored in ulTaskSwitchedInTime.  Note that there is no overflow
3013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protection here so count values are only valid until the timer
3014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			overflows.  The guard against negative values is to protect
3015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			against suspect run time stat counter implementations - which
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			are provided by the application, not the kernel. */
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalRunTime > ulTaskSwitchedInTime )
3018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTaskSwitchedInTime = ulTotalRunTime;
3026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
3028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Before the currently running task is switched out, save its errno. */
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
3036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
3040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timer
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* After the new task is switched in, update the global errno. */
3045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
3046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
ARM GAS  /tmp/ccqcX5vb.s 			page 55


3054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task.
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for additional information. */
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
3074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
3090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
3091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
3098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
3106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
3108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccqcX5vb.s 			page 56


3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
3115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
3120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
3121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
3124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
3126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
3127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
3129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
3133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
3136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
3145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this 
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TICKLESS_IDLE != 0 )
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If a task is blocked on a kernel object then xNextTaskUnblockTime
ARM GAS  /tmp/ccqcX5vb.s 			page 57


3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			might be set to the blocked task's time out time.  If the task is
3169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked for a reason other than a timeout xNextTaskUnblockTime is
3170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			normally left unchanged, because it is automatically reset to a new
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			value when the tick count equals xNextTaskUnblockTime.  However if
3172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			tickless idling is used it might be more important to enter sleep mode
3173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			at the earliest possible time - so reset xNextTaskUnblockTime here to
3174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ensure it is updated at the earliest possible time. */
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvResetNextTaskUnblockTime();
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
3192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as this 
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccqcX5vb.s 			page 58


3225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
3236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
ARM GAS  /tmp/ccqcX5vb.s 			page 59


3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
3324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
ARM GAS  /tmp/ccqcX5vb.s 			page 60


3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
3349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
3371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
ARM GAS  /tmp/ccqcX5vb.s 			page 61


3396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	any. */
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portALLOCATE_SECURE_CONTEXT( configMINIMAL_SECURE_STACK_SIZE );
3404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
3435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
ARM GAS  /tmp/ccqcX5vb.s 			page 62


3453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if the application does not want
3483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
ARM GAS  /tmp/ccqcX5vb.s 			page 63


3510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function must be called from a critical section. */
3518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB != NULL );
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccqcX5vb.s 			page 64


3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccqcX5vb.s 			page 65


3624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is u
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
3660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
ARM GAS  /tmp/ccqcX5vb.s 			page 66


3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
3727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
3729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
3731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccqcX5vb.s 			page 67


3738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this macro is
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
3782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
3784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
3792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
ARM GAS  /tmp/ccqcX5vb.s 			page 68


3795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
  27              		.loc 1 3800 2 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
  32              		.loc 1 3801 2 view .LVU1
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
  33              		.loc 1 3803 3 view .LVU2
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
  34              		.loc 1 3801 11 is_stmt 0 view .LVU3
  35 0000 0023     		movs	r3, #0
  36              		.loc 1 3803 8 view .LVU4
  37 0002 01E0     		b	.L2
  38              	.LVL1:
  39              	.L3:
3804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
  40              		.loc 1 3805 4 is_stmt 1 view .LVU5
  41              		.loc 1 3805 17 is_stmt 0 view .LVU6
  42 0004 0130     		adds	r0, r0, #1
  43              	.LVL2:
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
  44              		.loc 1 3806 4 is_stmt 1 view .LVU7
  45              		.loc 1 3806 11 is_stmt 0 view .LVU8
  46 0006 0133     		adds	r3, r3, #1
  47              	.LVL3:
  48              	.L2:
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
  49              		.loc 1 3803 8 is_stmt 1 view .LVU9
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
  50              		.loc 1 3803 10 is_stmt 0 view .LVU10
  51 0008 0278     		ldrb	r2, [r0]
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
  52              		.loc 1 3803 8 view .LVU11
  53 000a A52A     		cmp	r2, #165
  54 000c FAD0     		beq	.L3
3807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
  55              		.loc 1 3809 3 is_stmt 1 view .LVU12
  56              		.loc 1 3809 11 is_stmt 0 view .LVU13
  57 000e 9808     		lsrs	r0, r3, #2
  58              	.LVL4:
3810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( configSTACK_DEPTH_TYPE ) ulCount;
  59              		.loc 1 3811 3 is_stmt 1 view .LVU14
  60              		.loc 1 3811 10 is_stmt 0 view .LVU15
  61 0010 80B2     		uxth	r0, r0
  62              	.LVL5:
ARM GAS  /tmp/ccqcX5vb.s 			page 69


3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
  63              		.loc 1 3812 2 view .LVU16
  64              		@ sp needed
  65 0012 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE27:
  69              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
  70              		.align	1
  71              		.syntax unified
  72              		.code	16
  73              		.thumb_func
  75              	prvResetNextTaskUnblockTime:
  76              	.LFB29:
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( 
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are the
3820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	same except for their return type.  Using configSTACK_DEPTH_TYPE allows the
3821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	user to determine the return type.  It gets around the problem of the value
3822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	overflowing on 8-bit types without breaking backward compatibility for
3823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	applications that expect an 8-bit return type. */
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )
3825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxReturn;
3829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the same except for their return type.  Using configSTACK_DEPTH_TYPE
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		allows the user to determine the return type.  It gets around the
3833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		problem of the value overflowing on 8-bit types without breaking
3834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		backward compatibility for applications that expect an 8-bit return
3835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		type. */
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = prvTaskCheckFreeStackSpace( pucEndOfStack );
3850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark2 */
3855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccqcX5vb.s 			page 70


3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level.
3896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consol
3912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
ARM GAS  /tmp/ccqcX5vb.s 			page 71


3914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
  77              		.loc 1 3944 1 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
3945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
  82              		.loc 1 3945 1 view .LVU18
3946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
  83              		.loc 1 3947 2 view .LVU19
  84              		.loc 1 3947 6 is_stmt 0 view .LVU20
  85 0000 084B     		ldr	r3, .L7
  86 0002 1B68     		ldr	r3, [r3]
  87 0004 1B68     		ldr	r3, [r3]
  88              		.loc 1 3947 4 view .LVU21
  89 0006 002B     		cmp	r3, #0
  90 0008 04D1     		bne	.L5
3948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
  91              		.loc 1 3953 3 is_stmt 1 view .LVU22
  92              		.loc 1 3953 24 is_stmt 0 view .LVU23
  93 000a 074B     		ldr	r3, .L7+4
ARM GAS  /tmp/ccqcX5vb.s 			page 72


  94 000c 0122     		movs	r2, #1
  95 000e 5242     		rsbs	r2, r2, #0
  96 0010 1A60     		str	r2, [r3]
  97              	.L4:
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as thi
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
  98              		.loc 1 3964 1 view .LVU24
  99              		@ sp needed
 100 0012 7047     		bx	lr
 101              	.L5:
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 102              		.loc 1 3961 3 is_stmt 1 view .LVU25
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 103              		.loc 1 3961 15 is_stmt 0 view .LVU26
 104 0014 034B     		ldr	r3, .L7
 105 0016 1B68     		ldr	r3, [r3]
 106 0018 DB68     		ldr	r3, [r3, #12]
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 107              		.loc 1 3961 13 view .LVU27
 108 001a DB68     		ldr	r3, [r3, #12]
 109              	.LVL6:
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 110              		.loc 1 3962 3 is_stmt 1 view .LVU28
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 111              		.loc 1 3962 26 is_stmt 0 view .LVU29
 112 001c 5A68     		ldr	r2, [r3, #4]
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 113              		.loc 1 3962 24 view .LVU30
 114 001e 024B     		ldr	r3, .L7+4
 115              	.LVL7:
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 116              		.loc 1 3962 24 view .LVU31
 117 0020 1A60     		str	r2, [r3]
 118              		.loc 1 3964 1 view .LVU32
 119 0022 F6E7     		b	.L4
 120              	.L8:
 121              		.align	2
 122              	.L7:
 123 0024 00000000 		.word	.LANCHOR0
 124 0028 00000000 		.word	.LANCHOR1
 125              		.cfi_endproc
 126              	.LFE29:
 128              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 129              		.align	1
 130              		.syntax unified
 131              		.code	16
 132              		.thumb_func
 134              	prvInitialiseNewTask:
ARM GAS  /tmp/ccqcX5vb.s 			page 73


 135              	.LVL8:
 136              	.LFB1:
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 137              		.loc 1 832 1 is_stmt 1 view -0
 138              		.cfi_startproc
 139              		@ args = 16, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 141              		.loc 1 832 1 is_stmt 0 view .LVU34
 142 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 143              	.LCFI0:
 144              		.cfi_def_cfa_offset 24
 145              		.cfi_offset 3, -24
 146              		.cfi_offset 4, -20
 147              		.cfi_offset 5, -16
 148              		.cfi_offset 6, -12
 149              		.cfi_offset 7, -8
 150              		.cfi_offset 14, -4
 151 0002 DE46     		mov	lr, fp
 152 0004 5746     		mov	r7, r10
 153 0006 80B5     		push	{r7, lr}
 154              	.LCFI1:
 155              		.cfi_def_cfa_offset 32
 156              		.cfi_offset 10, -32
 157              		.cfi_offset 11, -28
 158 0008 8246     		mov	r10, r0
 159 000a 0E00     		movs	r6, r1
 160 000c 1500     		movs	r5, r2
 161 000e 9B46     		mov	fp, r3
 162 0010 0A9C     		ldr	r4, [sp, #40]
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 163              		.loc 1 833 1 is_stmt 1 view .LVU35
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 164              		.loc 1 834 1 view .LVU36
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 165              		.loc 1 854 3 view .LVU37
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 166              		.loc 1 854 12 is_stmt 0 view .LVU38
 167 0012 9200     		lsls	r2, r2, #2
 168              	.LVL9:
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 169              		.loc 1 854 12 view .LVU39
 170 0014 A521     		movs	r1, #165
 171              	.LVL10:
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 172              		.loc 1 854 12 view .LVU40
 173 0016 206B     		ldr	r0, [r4, #48]
 174              	.LVL11:
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 175              		.loc 1 854 12 view .LVU41
 176 0018 FFF7FEFF 		bl	memset
 177              	.LVL12:
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 178              		.loc 1 864 3 is_stmt 1 view .LVU42
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 179              		.loc 1 864 38 is_stmt 0 view .LVU43
 180 001c 3B4B     		ldr	r3, .L21
ARM GAS  /tmp/ccqcX5vb.s 			page 74


 181 001e 9C46     		mov	ip, r3
 182 0020 6544     		add	r5, r5, ip
 183              	.LVL13:
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 184              		.loc 1 864 38 view .LVU44
 185 0022 AD00     		lsls	r5, r5, #2
 186              	.LVL14:
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 187              		.loc 1 864 16 view .LVU45
 188 0024 236B     		ldr	r3, [r4, #48]
 189 0026 9C46     		mov	ip, r3
 190 0028 6544     		add	r5, r5, ip
 191              	.LVL15:
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 192              		.loc 1 865 3 is_stmt 1 view .LVU46
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 193              		.loc 1 865 81 is_stmt 0 view .LVU47
 194 002a 0723     		movs	r3, #7
 195 002c 9D43     		bics	r5, r3
 196              	.LVL16:
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 197              		.loc 1 865 81 view .LVU48
 198 002e 2F00     		movs	r7, r5
 199              	.LVL17:
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 200              		.loc 1 868 3 is_stmt 1 view .LVU49
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 201              		.loc 1 868 124 view .LVU50
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 202              		.loc 1 874 4 view .LVU51
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 203              		.loc 1 874 27 is_stmt 0 view .LVU52
 204 0030 6564     		str	r5, [r4, #68]
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 205              		.loc 1 892 2 is_stmt 1 view .LVU53
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 206              		.loc 1 892 4 is_stmt 0 view .LVU54
 207 0032 002E     		cmp	r6, #0
 208 0034 66D0     		beq	.L20
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 209              		.loc 1 894 10 view .LVU55
 210 0036 0025     		movs	r5, #0
 211              	.LVL18:
 212              	.L10:
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 213              		.loc 1 894 31 is_stmt 1 discriminator 1 view .LVU56
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 214              		.loc 1 894 3 is_stmt 0 discriminator 1 view .LVU57
 215 0038 0F2D     		cmp	r5, #15
 216 003a 08D8     		bhi	.L12
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 217              		.loc 1 896 4 is_stmt 1 view .LVU58
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 218              		.loc 1 896 38 is_stmt 0 view .LVU59
 219 003c 725D     		ldrb	r2, [r6, r5]
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 220              		.loc 1 896 30 view .LVU60
ARM GAS  /tmp/ccqcX5vb.s 			page 75


 221 003e 6319     		adds	r3, r4, r5
 222 0040 3433     		adds	r3, r3, #52
 223 0042 1A70     		strb	r2, [r3]
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 224              		.loc 1 901 4 is_stmt 1 view .LVU61
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 225              		.loc 1 901 14 is_stmt 0 view .LVU62
 226 0044 735D     		ldrb	r3, [r6, r5]
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 227              		.loc 1 901 6 view .LVU63
 228 0046 002B     		cmp	r3, #0
 229 0048 01D0     		beq	.L12
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 230              		.loc 1 907 29 is_stmt 1 discriminator 2 view .LVU64
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 231              		.loc 1 894 76 discriminator 2 view .LVU65
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 232              		.loc 1 894 77 is_stmt 0 discriminator 2 view .LVU66
 233 004a 0135     		adds	r5, r5, #1
 234              	.LVL19:
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 235              		.loc 1 894 77 discriminator 2 view .LVU67
 236 004c F4E7     		b	.L10
 237              	.L12:
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 238              		.loc 1 913 3 is_stmt 1 view .LVU68
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 239              		.loc 1 913 55 is_stmt 0 view .LVU69
 240 004e 4323     		movs	r3, #67
 241 0050 0022     		movs	r2, #0
 242 0052 E254     		strb	r2, [r4, r3]
 243              	.LVL20:
 244              	.L14:
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 245              		.loc 1 924 2 is_stmt 1 view .LVU70
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 246              		.loc 1 924 4 is_stmt 0 view .LVU71
 247 0054 089B     		ldr	r3, [sp, #32]
 248 0056 062B     		cmp	r3, #6
 249 0058 01D9     		bls	.L15
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 250              		.loc 1 926 14 view .LVU72
 251 005a 0623     		movs	r3, #6
 252 005c 0893     		str	r3, [sp, #32]
 253              	.LVL21:
 254              	.L15:
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 255              		.loc 1 930 27 is_stmt 1 view .LVU73
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 256              		.loc 1 933 2 view .LVU74
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 257              		.loc 1 933 23 is_stmt 0 view .LVU75
 258 005e 089B     		ldr	r3, [sp, #32]
 259 0060 E362     		str	r3, [r4, #44]
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 260              		.loc 1 936 3 is_stmt 1 view .LVU76
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
ARM GAS  /tmp/ccqcX5vb.s 			page 76


 261              		.loc 1 936 28 is_stmt 0 view .LVU77
 262 0062 A364     		str	r3, [r4, #72]
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 263              		.loc 1 937 3 is_stmt 1 view .LVU78
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 264              		.loc 1 937 27 is_stmt 0 view .LVU79
 265 0064 0025     		movs	r5, #0
 266 0066 E564     		str	r5, [r4, #76]
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 267              		.loc 1 941 2 is_stmt 1 view .LVU80
 268 0068 201D     		adds	r0, r4, #4
 269 006a FFF7FEFF 		bl	vListInitialiseItem
 270              	.LVL22:
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 271              		.loc 1 942 2 view .LVU81
 272 006e 2000     		movs	r0, r4
 273 0070 1830     		adds	r0, r0, #24
 274 0072 FFF7FEFF 		bl	vListInitialiseItem
 275              	.LVL23:
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 276              		.loc 1 946 2 view .LVU82
 277 0076 2461     		str	r4, [r4, #16]
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 278              		.loc 1 949 2 view .LVU83
 279 0078 0723     		movs	r3, #7
 280 007a 089A     		ldr	r2, [sp, #32]
 281 007c 9E1A     		subs	r6, r3, r2
 282              	.LVL24:
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 283              		.loc 1 949 2 is_stmt 0 view .LVU84
 284 007e A661     		str	r6, [r4, #24]
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 285              		.loc 1 950 2 is_stmt 1 view .LVU85
 286 0080 6462     		str	r4, [r4, #36]
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 287              		.loc 1 977 3 view .LVU86
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 288              		.loc 1 992 3 view .LVU87
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 289              		.loc 1 992 29 is_stmt 0 view .LVU88
 290 0082 8F23     		movs	r3, #143
 291 0084 DB00     		lsls	r3, r3, #3
 292 0086 E550     		str	r5, [r4, r3]
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 293              		.loc 1 993 3 is_stmt 1 view .LVU89
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 294              		.loc 1 993 27 is_stmt 0 view .LVU90
 295 0088 214B     		ldr	r3, .L21+4
 296 008a E554     		strb	r5, [r4, r3]
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 297              		.loc 1 1002 3 is_stmt 1 view .LVU91
 298 008c 2000     		movs	r0, r4
 299 008e 5030     		adds	r0, r0, #80
 300 0090 8522     		movs	r2, #133
 301 0092 D200     		lsls	r2, r2, #3
 302 0094 0021     		movs	r1, #0
 303 0096 FFF7FEFF 		bl	memset
ARM GAS  /tmp/ccqcX5vb.s 			page 77


 304              	.LVL25:
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 305              		.loc 1 1002 3 view .LVU92
 306 009a CF23     		movs	r3, #207
 307 009c 9B00     		lsls	r3, r3, #2
 308 009e E318     		adds	r3, r4, r3
 309 00a0 6365     		str	r3, [r4, #84]
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 310              		.loc 1 1002 3 view .LVU93
 311 00a2 E923     		movs	r3, #233
 312 00a4 9B00     		lsls	r3, r3, #2
 313 00a6 E318     		adds	r3, r4, r3
 314 00a8 A365     		str	r3, [r4, #88]
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 315              		.loc 1 1002 3 view .LVU94
 316 00aa 1A4B     		ldr	r3, .L21+8
 317 00ac E318     		adds	r3, r4, r3
 318 00ae E365     		str	r3, [r4, #92]
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 319              		.loc 1 1002 3 view .LVU95
 320 00b0 2300     		movs	r3, r4
 321 00b2 F833     		adds	r3, r3, #248
 322 00b4 0120     		movs	r0, #1
 323 00b6 0021     		movs	r1, #0
 324 00b8 1860     		str	r0, [r3]
 325 00ba 5960     		str	r1, [r3, #4]
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 326              		.loc 1 1002 3 view .LVU96
 327 00bc 8023     		movs	r3, #128
 328 00be 5B00     		lsls	r3, r3, #1
 329 00c0 154A     		ldr	r2, .L21+12
 330 00c2 E252     		strh	r2, [r4, r3]
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 331              		.loc 1 1002 3 view .LVU97
 332 00c4 0233     		adds	r3, r3, #2
 333 00c6 154A     		ldr	r2, .L21+16
 334 00c8 E252     		strh	r2, [r4, r3]
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 335              		.loc 1 1002 3 view .LVU98
 336 00ca 0233     		adds	r3, r3, #2
 337 00cc 144A     		ldr	r2, .L21+20
 338 00ce E252     		strh	r2, [r4, r3]
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 339              		.loc 1 1002 3 view .LVU99
 340 00d0 0233     		adds	r3, r3, #2
 341 00d2 144A     		ldr	r2, .L21+24
 342 00d4 E252     		strh	r2, [r4, r3]
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 343              		.loc 1 1002 3 view .LVU100
 344 00d6 0233     		adds	r3, r3, #2
 345 00d8 134A     		ldr	r2, .L21+28
 346 00da E252     		strh	r2, [r4, r3]
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 347              		.loc 1 1002 3 view .LVU101
 348 00dc 0233     		adds	r3, r3, #2
 349 00de 0522     		movs	r2, #5
 350 00e0 E252     		strh	r2, [r4, r3]
ARM GAS  /tmp/ccqcX5vb.s 			page 78


1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 351              		.loc 1 1002 3 view .LVU102
 352 00e2 0233     		adds	r3, r3, #2
 353 00e4 0632     		adds	r2, r2, #6
 354 00e6 E252     		strh	r2, [r4, r3]
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 355              		.loc 1 1002 3 view .LVU103
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 356              		.loc 1 1002 54 view .LVU104
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 357              		.loc 1 1058 4 view .LVU105
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 358              		.loc 1 1058 29 is_stmt 0 view .LVU106
 359 00e8 5A46     		mov	r2, fp
 360 00ea 5146     		mov	r1, r10
 361 00ec 3800     		movs	r0, r7
 362 00ee FFF7FEFF 		bl	pxPortInitialiseStack
 363              	.LVL26:
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 364              		.loc 1 1058 27 view .LVU107
 365 00f2 2060     		str	r0, [r4]
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 366              		.loc 1 1064 2 is_stmt 1 view .LVU108
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 367              		.loc 1 1064 4 is_stmt 0 view .LVU109
 368 00f4 099B     		ldr	r3, [sp, #36]
 369 00f6 002B     		cmp	r3, #0
 370 00f8 00D0     		beq	.L9
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 371              		.loc 1 1068 3 is_stmt 1 view .LVU110
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 372              		.loc 1 1068 18 is_stmt 0 view .LVU111
 373 00fa 1C60     		str	r4, [r3]
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 374              		.loc 1 1072 27 is_stmt 1 view .LVU112
 375              	.L9:
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 376              		.loc 1 1074 1 is_stmt 0 view .LVU113
 377              		@ sp needed
 378              	.LVL27:
 379              	.LVL28:
 380              	.LVL29:
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 381              		.loc 1 1074 1 view .LVU114
 382 00fc C0BC     		pop	{r6, r7}
 383 00fe BB46     		mov	fp, r7
 384 0100 B246     		mov	r10, r6
 385 0102 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 386              	.LVL30:
 387              	.L20:
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 388              		.loc 1 919 3 is_stmt 1 view .LVU115
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 389              		.loc 1 919 29 is_stmt 0 view .LVU116
 390 0104 3423     		movs	r3, #52
 391 0106 0022     		movs	r2, #0
 392 0108 E254     		strb	r2, [r4, r3]
ARM GAS  /tmp/ccqcX5vb.s 			page 79


 393 010a A3E7     		b	.L14
 394              	.L22:
 395              		.align	2
 396              	.L21:
 397 010c FFFFFF3F 		.word	1073741823
 398 0110 7C040000 		.word	1148
 399 0114 0C040000 		.word	1036
 400 0118 0E330000 		.word	13070
 401 011c CDABFFFF 		.word	-21555
 402 0120 34120000 		.word	4660
 403 0124 6DE6FFFF 		.word	-6547
 404 0128 ECDEFFFF 		.word	-8468
 405              		.cfi_endproc
 406              	.LFE1:
 408              		.section	.text.prvIdleTask,"ax",%progbits
 409              		.align	1
 410              		.syntax unified
 411              		.code	16
 412              		.thumb_func
 414              	prvIdleTask:
 415              	.LFB24:
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 416              		.loc 1 3393 1 is_stmt 1 view -0
 417              		.cfi_startproc
 418              		@ Volatile: function does not return.
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              	.LVL31:
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 422              		.loc 1 3393 1 is_stmt 0 view .LVU118
 423 0000 10B5     		push	{r4, lr}
 424              	.LCFI2:
 425              		.cfi_def_cfa_offset 8
 426              		.cfi_offset 4, -8
 427              		.cfi_offset 14, -4
 428              	.LVL32:
 429              	.L24:
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 430              		.loc 1 3395 2 is_stmt 1 view .LVU119
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 431              		.loc 1 3403 64 view .LVU120
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 432              		.loc 1 3405 2 view .LVU121
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 433              		.loc 1 3409 3 view .LVU122
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 434              		.loc 1 3432 4 view .LVU123
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 435              		.loc 1 3432 8 is_stmt 0 view .LVU124
 436 0002 034B     		ldr	r3, .L26
 437 0004 1B68     		ldr	r3, [r3]
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 438              		.loc 1 3432 6 view .LVU125
 439 0006 012B     		cmp	r3, #1
 440 0008 FBD9     		bls	.L24
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 441              		.loc 1 3434 5 is_stmt 1 view .LVU126
ARM GAS  /tmp/ccqcX5vb.s 			page 80


 442 000a FFF7FEFF 		bl	vPortYield
 443              	.LVL33:
 444 000e F8E7     		b	.L24
 445              	.L27:
 446              		.align	2
 447              	.L26:
 448 0010 00000000 		.word	pxReadyTasksLists
 449              		.cfi_endproc
 450              	.LFE24:
 452              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 453              		.align	1
 454              		.syntax unified
 455              		.code	16
 456              		.thumb_func
 458              	prvInitialiseTaskLists:
 459              	.LFB25:
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
 460              		.loc 1 3608 1 view -0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464 0000 70B5     		push	{r4, r5, r6, lr}
 465              	.LCFI3:
 466              		.cfi_def_cfa_offset 16
 467              		.cfi_offset 4, -16
 468              		.cfi_offset 5, -12
 469              		.cfi_offset 6, -8
 470              		.cfi_offset 14, -4
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 471              		.loc 1 3609 1 view .LVU128
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 472              		.loc 1 3611 2 view .LVU129
 473              	.LVL34:
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 474              		.loc 1 3611 18 is_stmt 0 view .LVU130
 475 0002 0024     		movs	r4, #0
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 476              		.loc 1 3611 2 view .LVU131
 477 0004 07E0     		b	.L29
 478              	.LVL35:
 479              	.L30:
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 480              		.loc 1 3613 3 is_stmt 1 discriminator 3 view .LVU132
 481 0006 A300     		lsls	r3, r4, #2
 482 0008 1B19     		adds	r3, r3, r4
 483 000a 9800     		lsls	r0, r3, #2
 484 000c 0B4B     		ldr	r3, .L31
 485 000e C018     		adds	r0, r0, r3
 486 0010 FFF7FEFF 		bl	vListInitialise
 487              	.LVL36:
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 488              		.loc 1 3611 91 discriminator 3 view .LVU133
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 489              		.loc 1 3611 101 is_stmt 0 discriminator 3 view .LVU134
 490 0014 0134     		adds	r4, r4, #1
 491              	.LVL37:
 492              	.L29:
ARM GAS  /tmp/ccqcX5vb.s 			page 81


3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 493              		.loc 1 3611 40 is_stmt 1 discriminator 1 view .LVU135
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 494              		.loc 1 3611 2 is_stmt 0 discriminator 1 view .LVU136
 495 0016 062C     		cmp	r4, #6
 496 0018 F5D9     		bls	.L30
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 497              		.loc 1 3616 2 is_stmt 1 view .LVU137
 498 001a 094D     		ldr	r5, .L31+4
 499 001c 2800     		movs	r0, r5
 500 001e FFF7FEFF 		bl	vListInitialise
 501              	.LVL38:
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 502              		.loc 1 3617 2 view .LVU138
 503 0022 084C     		ldr	r4, .L31+8
 504              	.LVL39:
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 505              		.loc 1 3617 2 is_stmt 0 view .LVU139
 506 0024 2000     		movs	r0, r4
 507 0026 FFF7FEFF 		bl	vListInitialise
 508              	.LVL40:
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 509              		.loc 1 3618 2 is_stmt 1 view .LVU140
 510 002a 0748     		ldr	r0, .L31+12
 511 002c FFF7FEFF 		bl	vListInitialise
 512              	.LVL41:
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 513              		.loc 1 3634 2 view .LVU141
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 514              		.loc 1 3634 20 is_stmt 0 view .LVU142
 515 0030 064B     		ldr	r3, .L31+16
 516 0032 1D60     		str	r5, [r3]
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 517              		.loc 1 3635 2 is_stmt 1 view .LVU143
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 518              		.loc 1 3635 28 is_stmt 0 view .LVU144
 519 0034 064B     		ldr	r3, .L31+20
 520 0036 1C60     		str	r4, [r3]
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 521              		.loc 1 3636 1 view .LVU145
 522              		@ sp needed
 523 0038 70BD     		pop	{r4, r5, r6, pc}
 524              	.L32:
 525 003a C046     		.align	2
 526              	.L31:
 527 003c 00000000 		.word	pxReadyTasksLists
 528 0040 00000000 		.word	.LANCHOR2
 529 0044 00000000 		.word	.LANCHOR3
 530 0048 00000000 		.word	.LANCHOR4
 531 004c 00000000 		.word	.LANCHOR0
 532 0050 00000000 		.word	.LANCHOR5
 533              		.cfi_endproc
 534              	.LFE25:
 536              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 537              		.align	1
 538              		.syntax unified
 539              		.code	16
ARM GAS  /tmp/ccqcX5vb.s 			page 82


 540              		.thumb_func
 542              	prvAddNewTaskToReadyList:
 543              	.LVL42:
 544              	.LFB2:
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 545              		.loc 1 1078 1 is_stmt 1 view -0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 549              		.loc 1 1078 1 is_stmt 0 view .LVU147
 550 0000 10B5     		push	{r4, lr}
 551              	.LCFI4:
 552              		.cfi_def_cfa_offset 8
 553              		.cfi_offset 4, -8
 554              		.cfi_offset 14, -4
 555 0002 0400     		movs	r4, r0
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 556              		.loc 1 1081 2 is_stmt 1 view .LVU148
 557 0004 FFF7FEFF 		bl	vPortEnterCritical
 558              	.LVL43:
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 559              		.loc 1 1083 3 view .LVU149
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 560              		.loc 1 1083 25 is_stmt 0 view .LVU150
 561 0008 1F4A     		ldr	r2, .L41
 562 000a 1368     		ldr	r3, [r2]
 563 000c 0133     		adds	r3, r3, #1
 564 000e 1360     		str	r3, [r2]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 565              		.loc 1 1084 3 is_stmt 1 view .LVU151
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 566              		.loc 1 1084 20 is_stmt 0 view .LVU152
 567 0010 1E4B     		ldr	r3, .L41+4
 568 0012 1B68     		ldr	r3, [r3]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 569              		.loc 1 1084 5 view .LVU153
 570 0014 002B     		cmp	r3, #0
 571 0016 0CD0     		beq	.L38
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 572              		.loc 1 1107 4 is_stmt 1 view .LVU154
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 573              		.loc 1 1107 26 is_stmt 0 view .LVU155
 574 0018 1D4B     		ldr	r3, .L41+8
 575 001a 1B68     		ldr	r3, [r3]
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 576              		.loc 1 1107 6 view .LVU156
 577 001c 002B     		cmp	r3, #0
 578 001e 0DD1     		bne	.L35
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 579              		.loc 1 1109 5 is_stmt 1 view .LVU157
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 580              		.loc 1 1109 21 is_stmt 0 view .LVU158
 581 0020 1A4B     		ldr	r3, .L41+4
 582 0022 1B68     		ldr	r3, [r3]
 583 0024 DB6A     		ldr	r3, [r3, #44]
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccqcX5vb.s 			page 83


 584              		.loc 1 1109 7 view .LVU159
 585 0026 E26A     		ldr	r2, [r4, #44]
 586 0028 9342     		cmp	r3, r2
 587 002a 07D8     		bhi	.L35
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 588              		.loc 1 1111 6 is_stmt 1 view .LVU160
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 589              		.loc 1 1111 19 is_stmt 0 view .LVU161
 590 002c 174B     		ldr	r3, .L41+4
 591 002e 1C60     		str	r4, [r3]
 592 0030 04E0     		b	.L35
 593              	.L38:
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 594              		.loc 1 1088 4 is_stmt 1 view .LVU162
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 595              		.loc 1 1088 17 is_stmt 0 view .LVU163
 596 0032 164B     		ldr	r3, .L41+4
 597 0034 1C60     		str	r4, [r3]
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 598              		.loc 1 1090 4 is_stmt 1 view .LVU164
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 599              		.loc 1 1090 31 is_stmt 0 view .LVU165
 600 0036 1368     		ldr	r3, [r2]
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 601              		.loc 1 1090 6 view .LVU166
 602 0038 012B     		cmp	r3, #1
 603 003a 1FD0     		beq	.L39
 604              	.L35:
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 605              		.loc 1 1120 29 is_stmt 1 view .LVU167
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 606              		.loc 1 1124 3 view .LVU168
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607              		.loc 1 1124 15 is_stmt 0 view .LVU169
 608 003c 154A     		ldr	r2, .L41+12
 609 003e 1368     		ldr	r3, [r2]
 610 0040 0133     		adds	r3, r3, #1
 611 0042 1360     		str	r3, [r2]
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 612              		.loc 1 1132 31 is_stmt 1 view .LVU170
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 613              		.loc 1 1134 3 view .LVU171
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 614              		.loc 1 1134 3 view .LVU172
 615 0044 E36A     		ldr	r3, [r4, #44]
 616 0046 144A     		ldr	r2, .L41+16
 617 0048 1268     		ldr	r2, [r2]
 618 004a 9342     		cmp	r3, r2
 619 004c 01D9     		bls	.L36
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 620              		.loc 1 1134 3 discriminator 1 view .LVU173
 621 004e 124A     		ldr	r2, .L41+16
 622 0050 1360     		str	r3, [r2]
 623              	.L36:
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 624              		.loc 1 1134 3 discriminator 3 view .LVU174
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccqcX5vb.s 			page 84


 625              		.loc 1 1134 3 discriminator 3 view .LVU175
 626 0052 211D     		adds	r1, r4, #4
 627 0054 9800     		lsls	r0, r3, #2
 628 0056 C018     		adds	r0, r0, r3
 629 0058 8000     		lsls	r0, r0, #2
 630 005a 104B     		ldr	r3, .L41+20
 631 005c C018     		adds	r0, r0, r3
 632 005e FFF7FEFF 		bl	vListInsertEnd
 633              	.LVL44:
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 634              		.loc 1 1134 36 discriminator 3 view .LVU176
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 635              		.loc 1 1136 3 discriminator 3 view .LVU177
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636              		.loc 1 1138 2 discriminator 3 view .LVU178
 637 0062 FFF7FEFF 		bl	vPortExitCritical
 638              	.LVL45:
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 639              		.loc 1 1140 2 discriminator 3 view .LVU179
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 640              		.loc 1 1140 24 is_stmt 0 discriminator 3 view .LVU180
 641 0066 0A4B     		ldr	r3, .L41+8
 642 0068 1B68     		ldr	r3, [r3]
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 643              		.loc 1 1140 4 discriminator 3 view .LVU181
 644 006a 002B     		cmp	r3, #0
 645 006c 05D0     		beq	.L33
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 646              		.loc 1 1144 3 is_stmt 1 view .LVU182
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 647              		.loc 1 1144 19 is_stmt 0 view .LVU183
 648 006e 074B     		ldr	r3, .L41+4
 649 0070 1B68     		ldr	r3, [r3]
 650 0072 DA6A     		ldr	r2, [r3, #44]
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 651              		.loc 1 1144 42 view .LVU184
 652 0074 E36A     		ldr	r3, [r4, #44]
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 653              		.loc 1 1144 5 view .LVU185
 654 0076 9A42     		cmp	r2, r3
 655 0078 03D3     		bcc	.L40
 656              	.L33:
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 657              		.loc 1 1157 1 view .LVU186
 658              		@ sp needed
 659              	.LVL46:
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 660              		.loc 1 1157 1 view .LVU187
 661 007a 10BD     		pop	{r4, pc}
 662              	.LVL47:
 663              	.L39:
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 664              		.loc 1 1095 5 is_stmt 1 view .LVU188
 665 007c FFF7FEFF 		bl	prvInitialiseTaskLists
 666              	.LVL48:
 667 0080 DCE7     		b	.L35
 668              	.L40:
ARM GAS  /tmp/ccqcX5vb.s 			page 85


1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 669              		.loc 1 1146 4 view .LVU189
 670 0082 FFF7FEFF 		bl	vPortYield
 671              	.LVL49:
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 672              		.loc 1 1155 27 view .LVU190
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 673              		.loc 1 1157 1 is_stmt 0 view .LVU191
 674 0086 F8E7     		b	.L33
 675              	.L42:
 676              		.align	2
 677              	.L41:
 678 0088 00000000 		.word	.LANCHOR6
 679 008c 00000000 		.word	.LANCHOR7
 680 0090 00000000 		.word	.LANCHOR8
 681 0094 00000000 		.word	.LANCHOR9
 682 0098 00000000 		.word	.LANCHOR10
 683 009c 00000000 		.word	pxReadyTasksLists
 684              		.cfi_endproc
 685              	.LFE2:
 687              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 688              		.align	1
 689              		.syntax unified
 690              		.code	16
 691              		.thumb_func
 693              	prvAddCurrentTaskToDelayedList:
 694              	.LVL50:
 695              	.LFB44:
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccqcX5vb.s 			page 86


3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
4003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
4018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
4020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
4021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
4026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
4028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
4035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
4042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
4044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
4048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority, uxTopReadyPriority );
ARM GAS  /tmp/ccqcX5vb.s 			page 87


4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
4060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
4068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
4075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
4078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
4079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
4080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
4081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					not been the case. */
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
ARM GAS  /tmp/ccqcX5vb.s 			page 88


4108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
4112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
4113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
4114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
4118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
4125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
4127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
4129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
4130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the holding task from the ready/delayed list. */
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
4141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
4146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
4147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
4152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
4153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
4154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
4156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
4157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
4158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccqcX5vb.s 			page 89


4165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
4193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			one mutex. */
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
4198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
4201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
4203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
4219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					its own priority. */
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
ARM GAS  /tmp/ccqcX5vb.s 			page 90


4222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* It is known that the task is in its ready list so
4252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							there is no need to check again and the port level
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							reset macro can be called directly. */
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
4257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
ARM GAS  /tmp/ccqcX5vb.s 			page 91


4279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
4290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
4320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccqcX5vb.s 			page 92


4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
4355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = ( char ) 0x00;
4368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
4383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
ARM GAS  /tmp/ccqcX5vb.s 			page 93


4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eInvalid:		/* Fall through. */
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = ( char ) 0x00;
ARM GAS  /tmp/ccqcX5vb.s 			page 94


4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers 
4460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
ARM GAS  /tmp/ccqcX5vb.s 			page 95


4507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0UL )
4536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccqcX5vb.s 			page 96


4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers
4582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
ARM GAS  /tmp/ccqcX5vb.s 			page 97


4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
ARM GAS  /tmp/ccqcX5vb.s 			page 98


4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccqcX5vb.s 			page 99


4735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccqcX5vb.s 			page 100


4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccqcX5vb.s 			page 101


4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccqcX5vb.s 			page 102


4906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
ARM GAS  /tmp/ccqcX5vb.s 			page 103


4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter to an ISR
5007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
5009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccqcX5vb.s 			page 104


5020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
5029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
5030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
5031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
5033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
5035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
5036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
5037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
5038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
5039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
5040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
5041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
5042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
5043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
5044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
5045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
5046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
5047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
5048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
5049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
5050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
5051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
5053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
5055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
5058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
5060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
5062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
5064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
5066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
5076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccqcX5vb.s 			page 105


5077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
5080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
5087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
5089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
5091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter in an ISR
5095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
5097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
5116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
5120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
5122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
5124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
5127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
5131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
ARM GAS  /tmp/ccqcX5vb.s 			page 106


5134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
5136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyValueClear( TaskHandle_t xTask, uint32_t ulBitsToClear )
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
5147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
5151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
5153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Return the notification as it was before the bits were cleared,
5155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then clear the bit mask. */
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
5158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
5160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
5162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskGetIdleRunTimeCounter( void )
5170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle->ulRunTimeCounter;
5172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
5175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
5178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 696              		.loc 1 5178 1 is_stmt 1 view -0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700              		.loc 1 5178 1 is_stmt 0 view .LVU193
 701 0000 70B5     		push	{r4, r5, r6, lr}
 702              	.LCFI5:
 703              		.cfi_def_cfa_offset 16
 704              		.cfi_offset 4, -16
 705              		.cfi_offset 5, -12
 706              		.cfi_offset 6, -8
 707              		.cfi_offset 14, -4
ARM GAS  /tmp/ccqcX5vb.s 			page 107


 708 0002 0400     		movs	r4, r0
5179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 709              		.loc 1 5179 1 is_stmt 1 view .LVU194
5180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 710              		.loc 1 5180 1 view .LVU195
 711              		.loc 1 5180 18 is_stmt 0 view .LVU196
 712 0004 104B     		ldr	r3, .L46
 713 0006 1D68     		ldr	r5, [r3]
 714              	.LVL51:
5181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
5183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
5185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
5186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
5187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
5188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
5190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
5192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
5193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 715              		.loc 1 5193 2 is_stmt 1 view .LVU197
 716              		.loc 1 5193 35 is_stmt 0 view .LVU198
 717 0008 104E     		ldr	r6, .L46+4
 718 000a 3068     		ldr	r0, [r6]
 719              	.LVL52:
 720              		.loc 1 5193 6 view .LVU199
 721 000c 0430     		adds	r0, r0, #4
 722 000e FFF7FEFF 		bl	uxListRemove
 723              	.LVL53:
5194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
5196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
5197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentT
5198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
5200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 724              		.loc 1 5201 27 is_stmt 1 view .LVU200
5202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
5205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
5207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
5209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
5210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
5212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
5216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
5217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
5218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
ARM GAS  /tmp/ccqcX5vb.s 			page 108


5219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
5221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
5224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
5226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
5227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
5232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
5236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
5237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
5239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
5241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
5250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
5252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
5253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
5254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
 725              		.loc 1 5254 3 view .LVU201
 726              		.loc 1 5254 15 is_stmt 0 view .LVU202
 727 0012 2C19     		adds	r4, r5, r4
 728              	.LVL54:
5255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
5257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 729              		.loc 1 5257 3 is_stmt 1 view .LVU203
 730 0014 3368     		ldr	r3, [r6]
 731 0016 5C60     		str	r4, [r3, #4]
5258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
 732              		.loc 1 5259 3 view .LVU204
 733              		.loc 1 5259 5 is_stmt 0 view .LVU205
 734 0018 A542     		cmp	r5, r4
 735 001a 07D9     		bls	.L44
5260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
5262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 736              		.loc 1 5262 4 is_stmt 1 view .LVU206
 737 001c 0C4B     		ldr	r3, .L46+8
ARM GAS  /tmp/ccqcX5vb.s 			page 109


 738 001e 1868     		ldr	r0, [r3]
 739              		.loc 1 5262 59 is_stmt 0 view .LVU207
 740 0020 0A4B     		ldr	r3, .L46+4
 741 0022 1968     		ldr	r1, [r3]
 742              		.loc 1 5262 4 view .LVU208
 743 0024 0431     		adds	r1, r1, #4
 744 0026 FFF7FEFF 		bl	vListInsert
 745              	.LVL55:
 746              	.L43:
5263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
5267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
5270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
5271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
5272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
5273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
5275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
5279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
5284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
5286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 747              		.loc 1 5286 1 view .LVU209
 748              		@ sp needed
 749              	.LVL56:
 750              	.LVL57:
 751              		.loc 1 5286 1 view .LVU210
 752 002a 70BD     		pop	{r4, r5, r6, pc}
 753              	.LVL58:
 754              	.L44:
5267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 755              		.loc 1 5267 4 is_stmt 1 view .LVU211
 756 002c 094B     		ldr	r3, .L46+12
 757 002e 1868     		ldr	r0, [r3]
5267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 758              		.loc 1 5267 51 is_stmt 0 view .LVU212
 759 0030 064B     		ldr	r3, .L46+4
 760 0032 1968     		ldr	r1, [r3]
5267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 761              		.loc 1 5267 4 view .LVU213
 762 0034 0431     		adds	r1, r1, #4
 763 0036 FFF7FEFF 		bl	vListInsert
 764              	.LVL59:
5272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 765              		.loc 1 5272 4 is_stmt 1 view .LVU214
5272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccqcX5vb.s 			page 110


 766              		.loc 1 5272 20 is_stmt 0 view .LVU215
 767 003a 074B     		ldr	r3, .L46+16
 768 003c 1B68     		ldr	r3, [r3]
5272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 769              		.loc 1 5272 6 view .LVU216
 770 003e A342     		cmp	r3, r4
 771 0040 F3D9     		bls	.L43
5274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 772              		.loc 1 5274 5 is_stmt 1 view .LVU217
5274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 773              		.loc 1 5274 26 is_stmt 0 view .LVU218
 774 0042 054B     		ldr	r3, .L46+16
 775 0044 1C60     		str	r4, [r3]
5278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 776              		.loc 1 5278 29 is_stmt 1 view .LVU219
5283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 777              		.loc 1 5283 3 view .LVU220
 778              		.loc 1 5286 1 is_stmt 0 view .LVU221
 779 0046 F0E7     		b	.L43
 780              	.L47:
 781              		.align	2
 782              	.L46:
 783 0048 00000000 		.word	.LANCHOR11
 784 004c 00000000 		.word	.LANCHOR7
 785 0050 00000000 		.word	.LANCHOR5
 786 0054 00000000 		.word	.LANCHOR0
 787 0058 00000000 		.word	.LANCHOR1
 788              		.cfi_endproc
 789              	.LFE44:
 791              		.section	.text.xTaskCreate,"ax",%progbits
 792              		.align	1
 793              		.global	xTaskCreate
 794              		.syntax unified
 795              		.code	16
 796              		.thumb_func
 798              	xTaskCreate:
 799              	.LVL60:
 800              	.LFB0:
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 801              		.loc 1 739 2 is_stmt 1 view -0
 802              		.cfi_startproc
 803              		@ args = 8, pretend = 0, frame = 8
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 805              		.loc 1 739 2 is_stmt 0 view .LVU223
 806 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 807              	.LCFI6:
 808              		.cfi_def_cfa_offset 20
 809              		.cfi_offset 4, -20
 810              		.cfi_offset 5, -16
 811              		.cfi_offset 6, -12
 812              		.cfi_offset 7, -8
 813              		.cfi_offset 14, -4
 814 0002 87B0     		sub	sp, sp, #28
 815              	.LCFI7:
 816              		.cfi_def_cfa_offset 48
 817 0004 0490     		str	r0, [sp, #16]
ARM GAS  /tmp/ccqcX5vb.s 			page 111


 818 0006 0591     		str	r1, [sp, #20]
 819 0008 1600     		movs	r6, r2
 820 000a 1F00     		movs	r7, r3
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 821              		.loc 1 740 2 is_stmt 1 view .LVU224
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 822              		.loc 1 741 2 view .LVU225
 823              	.LBB2:
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 824              		.loc 1 770 3 view .LVU226
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 825              		.loc 1 773 4 view .LVU227
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 826              		.loc 1 773 14 is_stmt 0 view .LVU228
 827 000c 9000     		lsls	r0, r2, #2
 828              	.LVL61:
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 829              		.loc 1 773 14 view .LVU229
 830 000e FFF7FEFF 		bl	pvPortMalloc
 831              	.LVL62:
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 832              		.loc 1 773 14 view .LVU230
 833 0012 041E     		subs	r4, r0, #0
 834              	.LVL63:
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 835              		.loc 1 775 4 is_stmt 1 view .LVU231
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 836              		.loc 1 775 6 is_stmt 0 view .LVU232
 837 0014 1ED0     		beq	.L52
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 838              		.loc 1 778 5 is_stmt 1 view .LVU233
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 839              		.loc 1 778 28 is_stmt 0 view .LVU234
 840 0016 9020     		movs	r0, #144
 841              	.LVL64:
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 842              		.loc 1 778 28 view .LVU235
 843 0018 C000     		lsls	r0, r0, #3
 844 001a FFF7FEFF 		bl	pvPortMalloc
 845              	.LVL65:
 846 001e 051E     		subs	r5, r0, #0
 847              	.LVL66:
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 848              		.loc 1 780 5 is_stmt 1 view .LVU236
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 849              		.loc 1 780 7 is_stmt 0 view .LVU237
 850 0020 14D0     		beq	.L50
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 851              		.loc 1 783 6 is_stmt 1 view .LVU238
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 852              		.loc 1 783 24 is_stmt 0 view .LVU239
 853 0022 0463     		str	r4, [r0, #48]
 854              	.LVL67:
 855              	.L51:
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 856              		.loc 1 783 24 view .LVU240
 857              	.LBE2:
ARM GAS  /tmp/ccqcX5vb.s 			page 112


 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 858              		.loc 1 799 3 is_stmt 1 view .LVU241
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 859              		.loc 1 799 5 is_stmt 0 view .LVU242
 860 0024 002D     		cmp	r5, #0
 861 0026 19D0     		beq	.L53
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 862              		.loc 1 809 4 is_stmt 1 view .LVU243
 863 0028 0023     		movs	r3, #0
 864 002a 0393     		str	r3, [sp, #12]
 865 002c 0295     		str	r5, [sp, #8]
 866 002e 0D9B     		ldr	r3, [sp, #52]
 867 0030 0193     		str	r3, [sp, #4]
 868 0032 0C9B     		ldr	r3, [sp, #48]
 869 0034 0093     		str	r3, [sp]
 870 0036 3B00     		movs	r3, r7
 871 0038 3200     		movs	r2, r6
 872 003a 0599     		ldr	r1, [sp, #20]
 873 003c 0498     		ldr	r0, [sp, #16]
 874 003e FFF7FEFF 		bl	prvInitialiseNewTask
 875              	.LVL68:
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 876              		.loc 1 810 4 view .LVU244
 877 0042 2800     		movs	r0, r5
 878 0044 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 879              	.LVL69:
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 880              		.loc 1 811 4 view .LVU245
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 881              		.loc 1 811 12 is_stmt 0 view .LVU246
 882 0048 0120     		movs	r0, #1
 883 004a 05E0     		b	.L48
 884              	.LVL70:
 885              	.L50:
 886              	.LBB3:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 887              		.loc 1 789 6 is_stmt 1 view .LVU247
 888 004c 2000     		movs	r0, r4
 889              	.LVL71:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 890              		.loc 1 789 6 is_stmt 0 view .LVU248
 891 004e FFF7FEFF 		bl	vPortFree
 892              	.LVL72:
 893 0052 E7E7     		b	.L51
 894              	.LVL73:
 895              	.L52:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 896              		.loc 1 789 6 view .LVU249
 897              	.LBE3:
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 898              		.loc 1 815 12 view .LVU250
 899 0054 0120     		movs	r0, #1
 900              	.LVL74:
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 901              		.loc 1 815 12 view .LVU251
 902 0056 4042     		rsbs	r0, r0, #0
 903              	.L48:
ARM GAS  /tmp/ccqcX5vb.s 			page 113


 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 904              		.loc 1 819 2 view .LVU252
 905 0058 07B0     		add	sp, sp, #28
 906              		@ sp needed
 907              	.LVL75:
 908              	.LVL76:
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 909              		.loc 1 819 2 view .LVU253
 910 005a F0BD     		pop	{r4, r5, r6, r7, pc}
 911              	.LVL77:
 912              	.L53:
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 913              		.loc 1 815 12 view .LVU254
 914 005c 0120     		movs	r0, #1
 915 005e 4042     		rsbs	r0, r0, #0
 916              	.LVL78:
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 917              		.loc 1 818 3 is_stmt 1 view .LVU255
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 918              		.loc 1 818 10 is_stmt 0 view .LVU256
 919 0060 FAE7     		b	.L48
 920              		.cfi_endproc
 921              	.LFE0:
 923              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 924              		.align	2
 925              	.LC20:
 926 0000 49444C45 		.ascii	"IDLE\000"
 926      00
 927              		.section	.text.vTaskStartScheduler,"ax",%progbits
 928              		.align	1
 929              		.global	vTaskStartScheduler
 930              		.syntax unified
 931              		.code	16
 932              		.thumb_func
 934              	vTaskStartScheduler:
 935              	.LFB5:
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 936              		.loc 1 1976 1 is_stmt 1 view -0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940 0000 00B5     		push	{lr}
 941              	.LCFI8:
 942              		.cfi_def_cfa_offset 4
 943              		.cfi_offset 14, -4
 944 0002 83B0     		sub	sp, sp, #12
 945              	.LCFI9:
 946              		.cfi_def_cfa_offset 16
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 947              		.loc 1 1977 1 view .LVU258
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
 948              		.loc 1 2009 3 view .LVU259
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
 949              		.loc 1 2009 13 is_stmt 0 view .LVU260
 950 0004 114B     		ldr	r3, .L60
 951 0006 0193     		str	r3, [sp, #4]
 952 0008 0023     		movs	r3, #0
ARM GAS  /tmp/ccqcX5vb.s 			page 114


 953 000a 0093     		str	r3, [sp]
 954 000c 8022     		movs	r2, #128
 955 000e 1049     		ldr	r1, .L60+4
 956 0010 1048     		ldr	r0, .L60+8
 957 0012 FFF7FEFF 		bl	xTaskCreate
 958              	.LVL79:
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 959              		.loc 1 2031 2 is_stmt 1 view .LVU261
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 960              		.loc 1 2031 4 is_stmt 0 view .LVU262
 961 0016 0128     		cmp	r0, #1
 962 0018 03D0     		beq	.L58
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 963              		.loc 1 2090 3 is_stmt 1 view .LVU263
 964 001a 431C     		adds	r3, r0, #1
 965 001c 14D0     		beq	.L59
 966              	.LVL80:
 967              	.L54:
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 968              		.loc 1 2096 1 is_stmt 0 view .LVU264
 969 001e 03B0     		add	sp, sp, #12
 970              		@ sp needed
 971 0020 00BD     		pop	{pc}
 972              	.LVL81:
 973              	.L58:
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 974              		.loc 1 2047 3 is_stmt 1 view .LVU265
 975              		.syntax divided
 976              	@ 2047 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 977 0022 72B6     		 cpsid i 
 978              	@ 0 "" 2
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 979              		.loc 1 2055 4 view .LVU266
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 980              		.loc 1 2055 33 is_stmt 0 view .LVU267
 981              		.thumb
 982              		.syntax unified
 983 0024 0C4B     		ldr	r3, .L60+12
 984 0026 1B68     		ldr	r3, [r3]
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 985              		.loc 1 2055 18 view .LVU268
 986 0028 5033     		adds	r3, r3, #80
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 987              		.loc 1 2055 16 view .LVU269
 988 002a 0C4A     		ldr	r2, .L60+16
 989 002c 1360     		str	r3, [r2]
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 990              		.loc 1 2059 3 is_stmt 1 view .LVU270
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 991              		.loc 1 2059 24 is_stmt 0 view .LVU271
 992 002e 0C4B     		ldr	r3, .L60+20
 993 0030 0122     		movs	r2, #1
 994 0032 5242     		rsbs	r2, r2, #0
 995 0034 1A60     		str	r2, [r3]
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 996              		.loc 1 2060 3 is_stmt 1 view .LVU272
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
ARM GAS  /tmp/ccqcX5vb.s 			page 115


 997              		.loc 1 2060 21 is_stmt 0 view .LVU273
 998 0036 0B4B     		ldr	r3, .L60+24
 999 0038 0232     		adds	r2, r2, #2
 1000 003a 1A60     		str	r2, [r3]
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1001              		.loc 1 2061 3 is_stmt 1 view .LVU274
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1002              		.loc 1 2061 14 is_stmt 0 view .LVU275
 1003 003c 0A4B     		ldr	r3, .L60+28
 1004 003e 0022     		movs	r2, #0
 1005 0040 1A60     		str	r2, [r3]
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1006              		.loc 1 2069 43 is_stmt 1 view .LVU276
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1007              		.loc 1 2071 26 view .LVU277
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1008              		.loc 1 2075 3 view .LVU278
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1009              		.loc 1 2075 7 is_stmt 0 view .LVU279
 1010 0042 FFF7FEFF 		bl	xPortStartScheduler
 1011              	.LVL82:
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1012              		.loc 1 2075 7 view .LVU280
 1013 0046 EAE7     		b	.L54
 1014              	.LVL83:
 1015              	.L59:
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1016              		.loc 1 2090 3 is_stmt 1 discriminator 1 view .LVU281
 1017              		.syntax divided
 1018              	@ 2090 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1019 0048 72B6     		 cpsid i 
 1020              	@ 0 "" 2
 1021              		.thumb
 1022              		.syntax unified
 1023              	.L57:
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1024              		.loc 1 2090 3 discriminator 2 view .LVU282
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1025              		.loc 1 2090 3 discriminator 2 view .LVU283
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1026              		.loc 1 2090 3 discriminator 2 view .LVU284
 1027 004a FEE7     		b	.L57
 1028              	.L61:
 1029              		.align	2
 1030              	.L60:
 1031 004c 00000000 		.word	.LANCHOR12
 1032 0050 00000000 		.word	.LC20
 1033 0054 00000000 		.word	prvIdleTask
 1034 0058 00000000 		.word	.LANCHOR7
 1035 005c 00000000 		.word	_impure_ptr
 1036 0060 00000000 		.word	.LANCHOR1
 1037 0064 00000000 		.word	.LANCHOR8
 1038 0068 00000000 		.word	.LANCHOR11
 1039              		.cfi_endproc
 1040              	.LFE5:
 1042              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1043              		.align	1
ARM GAS  /tmp/ccqcX5vb.s 			page 116


 1044              		.global	vTaskEndScheduler
 1045              		.syntax unified
 1046              		.code	16
 1047              		.thumb_func
 1049              	vTaskEndScheduler:
 1050              	.LFB6:
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1051              		.loc 1 2100 1 view -0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 0
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 1055 0000 10B5     		push	{r4, lr}
 1056              	.LCFI10:
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 4, -8
 1059              		.cfi_offset 14, -4
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 1060              		.loc 1 2104 2 view .LVU286
 1061              		.syntax divided
 1062              	@ 2104 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1063 0002 72B6     		 cpsid i 
 1064              	@ 0 "" 2
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 1065              		.loc 1 2105 2 view .LVU287
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 1066              		.loc 1 2105 20 is_stmt 0 view .LVU288
 1067              		.thumb
 1068              		.syntax unified
 1069 0004 024B     		ldr	r3, .L63
 1070 0006 0022     		movs	r2, #0
 1071 0008 1A60     		str	r2, [r3]
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1072              		.loc 1 2106 2 is_stmt 1 view .LVU289
 1073 000a FFF7FEFF 		bl	vPortEndScheduler
 1074              	.LVL84:
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 1075              		.loc 1 2107 1 is_stmt 0 view .LVU290
 1076              		@ sp needed
 1077 000e 10BD     		pop	{r4, pc}
 1078              	.L64:
 1079              		.align	2
 1080              	.L63:
 1081 0010 00000000 		.word	.LANCHOR8
 1082              		.cfi_endproc
 1083              	.LFE6:
 1085              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1086              		.align	1
 1087              		.global	vTaskSuspendAll
 1088              		.syntax unified
 1089              		.code	16
 1090              		.thumb_func
 1092              	vTaskSuspendAll:
 1093              	.LFB7:
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 1094              		.loc 1 2111 1 is_stmt 1 view -0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccqcX5vb.s 			page 117


 1097              		@ frame_needed = 0, uses_anonymous_args = 0
 1098              		@ link register save eliminated.
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1099              		.loc 1 2119 24 view .LVU292
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1100              		.loc 1 2123 2 view .LVU293
 1101 0000 024A     		ldr	r2, .L66
 1102 0002 1368     		ldr	r3, [r2]
 1103 0004 0133     		adds	r3, r3, #1
 1104 0006 1360     		str	r3, [r2]
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1105              		.loc 1 2127 2 view .LVU294
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 1106              		.loc 1 2128 1 is_stmt 0 view .LVU295
 1107              		@ sp needed
 1108 0008 7047     		bx	lr
 1109              	.L67:
 1110 000a C046     		.align	2
 1111              	.L66:
 1112 000c 00000000 		.word	.LANCHOR13
 1113              		.cfi_endproc
 1114              	.LFE7:
 1116              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1117              		.align	1
 1118              		.global	xTaskGetTickCount
 1119              		.syntax unified
 1120              		.code	16
 1121              		.thumb_func
 1123              	xTaskGetTickCount:
 1124              	.LFB9:
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 1125              		.loc 1 2305 1 is_stmt 1 view -0
 1126              		.cfi_startproc
 1127              		@ args = 0, pretend = 0, frame = 0
 1128              		@ frame_needed = 0, uses_anonymous_args = 0
 1129              		@ link register save eliminated.
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1130              		.loc 1 2306 1 view .LVU297
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1131              		.loc 1 2309 32 view .LVU298
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1132              		.loc 1 2311 3 view .LVU299
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1133              		.loc 1 2311 10 is_stmt 0 view .LVU300
 1134 0000 014B     		ldr	r3, .L69
 1135 0002 1868     		ldr	r0, [r3]
 1136              	.LVL85:
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1137              		.loc 1 2313 31 is_stmt 1 view .LVU301
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1138              		.loc 1 2315 2 view .LVU302
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1139              		.loc 1 2316 1 is_stmt 0 view .LVU303
 1140              		@ sp needed
 1141 0004 7047     		bx	lr
 1142              	.L70:
 1143 0006 C046     		.align	2
ARM GAS  /tmp/ccqcX5vb.s 			page 118


 1144              	.L69:
 1145 0008 00000000 		.word	.LANCHOR11
 1146              		.cfi_endproc
 1147              	.LFE9:
 1149              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1150              		.align	1
 1151              		.global	xTaskGetTickCountFromISR
 1152              		.syntax unified
 1153              		.code	16
 1154              		.thumb_func
 1156              	xTaskGetTickCountFromISR:
 1157              	.LFB10:
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 1158              		.loc 1 2320 1 is_stmt 1 view -0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 0
 1161              		@ frame_needed = 0, uses_anonymous_args = 0
 1162              		@ link register save eliminated.
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
 1163              		.loc 1 2321 1 view .LVU305
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1164              		.loc 1 2322 1 view .LVU306
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1165              		.loc 1 2338 44 view .LVU307
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1166              		.loc 1 2340 2 view .LVU308
 1167              	.LVL86:
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1168              		.loc 1 2342 3 view .LVU309
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1169              		.loc 1 2342 11 is_stmt 0 view .LVU310
 1170 0000 014B     		ldr	r3, .L72
 1171 0002 1868     		ldr	r0, [r3]
 1172              	.LVL87:
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1173              		.loc 1 2344 2 is_stmt 1 view .LVU311
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1174              		.loc 1 2346 2 view .LVU312
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1175              		.loc 1 2347 1 is_stmt 0 view .LVU313
 1176              		@ sp needed
 1177 0004 7047     		bx	lr
 1178              	.L73:
 1179 0006 C046     		.align	2
 1180              	.L72:
 1181 0008 00000000 		.word	.LANCHOR11
 1182              		.cfi_endproc
 1183              	.LFE10:
 1185              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1186              		.align	1
 1187              		.global	uxTaskGetNumberOfTasks
 1188              		.syntax unified
 1189              		.code	16
 1190              		.thumb_func
 1192              	uxTaskGetNumberOfTasks:
 1193              	.LFB11:
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
ARM GAS  /tmp/ccqcX5vb.s 			page 119


 1194              		.loc 1 2351 1 is_stmt 1 view -0
 1195              		.cfi_startproc
 1196              		@ args = 0, pretend = 0, frame = 0
 1197              		@ frame_needed = 0, uses_anonymous_args = 0
 1198              		@ link register save eliminated.
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1199              		.loc 1 2354 2 view .LVU315
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1200              		.loc 1 2354 9 is_stmt 0 view .LVU316
 1201 0000 014B     		ldr	r3, .L75
 1202 0002 1868     		ldr	r0, [r3]
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1203              		.loc 1 2355 1 view .LVU317
 1204              		@ sp needed
 1205 0004 7047     		bx	lr
 1206              	.L76:
 1207 0006 C046     		.align	2
 1208              	.L75:
 1209 0008 00000000 		.word	.LANCHOR6
 1210              		.cfi_endproc
 1211              	.LFE11:
 1213              		.section	.text.pcTaskGetName,"ax",%progbits
 1214              		.align	1
 1215              		.global	pcTaskGetName
 1216              		.syntax unified
 1217              		.code	16
 1218              		.thumb_func
 1220              	pcTaskGetName:
 1221              	.LVL88:
 1222              	.LFB12:
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 1223              		.loc 1 2359 1 is_stmt 1 view -0
 1224              		.cfi_startproc
 1225              		@ args = 0, pretend = 0, frame = 0
 1226              		@ frame_needed = 0, uses_anonymous_args = 0
 1227              		@ link register save eliminated.
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1228              		.loc 1 2360 1 view .LVU319
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 1229              		.loc 1 2364 2 view .LVU320
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 1230              		.loc 1 2364 10 is_stmt 0 view .LVU321
 1231 0000 0028     		cmp	r0, #0
 1232 0002 03D0     		beq	.L81
 1233              	.LVL89:
 1234              	.L78:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1235              		.loc 1 2365 2 is_stmt 1 discriminator 4 view .LVU322
 1236 0004 0028     		cmp	r0, #0
 1237 0006 04D0     		beq	.L82
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1238              		.loc 1 2365 23 discriminator 2 view .LVU323
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1239              		.loc 1 2366 2 discriminator 2 view .LVU324
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1240              		.loc 1 2366 9 is_stmt 0 discriminator 2 view .LVU325
 1241 0008 3430     		adds	r0, r0, #52
ARM GAS  /tmp/ccqcX5vb.s 			page 120


 1242              	.LVL90:
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1243              		.loc 1 2367 1 discriminator 2 view .LVU326
 1244              		@ sp needed
 1245 000a 7047     		bx	lr
 1246              	.LVL91:
 1247              	.L81:
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 1248              		.loc 1 2364 10 discriminator 1 view .LVU327
 1249 000c 024B     		ldr	r3, .L83
 1250 000e 1868     		ldr	r0, [r3]
 1251              	.LVL92:
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 1252              		.loc 1 2364 10 discriminator 1 view .LVU328
 1253 0010 F8E7     		b	.L78
 1254              	.LVL93:
 1255              	.L82:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1256              		.loc 1 2365 2 is_stmt 1 discriminator 1 view .LVU329
 1257              		.syntax divided
 1258              	@ 2365 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1259 0012 72B6     		 cpsid i 
 1260              	@ 0 "" 2
 1261              		.thumb
 1262              		.syntax unified
 1263              	.L80:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1264              		.loc 1 2365 2 discriminator 1 view .LVU330
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1265              		.loc 1 2365 2 discriminator 1 view .LVU331
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1266              		.loc 1 2365 2 discriminator 1 view .LVU332
 1267 0014 FEE7     		b	.L80
 1268              	.L84:
 1269 0016 C046     		.align	2
 1270              	.L83:
 1271 0018 00000000 		.word	.LANCHOR7
 1272              		.cfi_endproc
 1273              	.LFE12:
 1275              		.section	.text.xTaskIncrementTick,"ax",%progbits
 1276              		.align	1
 1277              		.global	xTaskIncrementTick
 1278              		.syntax unified
 1279              		.code	16
 1280              		.thumb_func
 1282              	xTaskIncrementTick:
 1283              	.LFB14:
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 1284              		.loc 1 2708 1 view -0
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 0
 1287              		@ frame_needed = 0, uses_anonymous_args = 0
 1288 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1289              	.LCFI11:
 1290              		.cfi_def_cfa_offset 24
 1291              		.cfi_offset 3, -24
 1292              		.cfi_offset 4, -20
ARM GAS  /tmp/ccqcX5vb.s 			page 121


 1293              		.cfi_offset 5, -16
 1294              		.cfi_offset 6, -12
 1295              		.cfi_offset 7, -8
 1296              		.cfi_offset 14, -4
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 1297              		.loc 1 2709 1 view .LVU334
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 1298              		.loc 1 2710 1 view .LVU335
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1299              		.loc 1 2711 1 view .LVU336
 1300              	.LVL94:
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 1301              		.loc 1 2716 40 view .LVU337
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1302              		.loc 1 2717 2 view .LVU338
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1303              		.loc 1 2717 27 is_stmt 0 view .LVU339
 1304 0002 394B     		ldr	r3, .L106
 1305 0004 1B68     		ldr	r3, [r3]
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1306              		.loc 1 2717 4 view .LVU340
 1307 0006 002B     		cmp	r3, #0
 1308 0008 66D1     		bne	.L86
 1309              	.LBB4:
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1310              		.loc 1 2721 3 is_stmt 1 view .LVU341
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1311              		.loc 1 2721 49 is_stmt 0 view .LVU342
 1312 000a 384B     		ldr	r3, .L106+4
 1313 000c 1D68     		ldr	r5, [r3]
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1314              		.loc 1 2721 20 view .LVU343
 1315 000e 0135     		adds	r5, r5, #1
 1316              	.LVL95:
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1317              		.loc 1 2725 3 is_stmt 1 view .LVU344
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1318              		.loc 1 2725 14 is_stmt 0 view .LVU345
 1319 0010 1D60     		str	r5, [r3]
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1320              		.loc 1 2727 3 is_stmt 1 view .LVU346
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1321              		.loc 1 2727 5 is_stmt 0 view .LVU347
 1322 0012 002D     		cmp	r5, #0
 1323 0014 12D1     		bne	.L87
 1324              	.LBB5:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1325              		.loc 1 2729 4 is_stmt 1 view .LVU348
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1326              		.loc 1 2729 4 view .LVU349
 1327 0016 364B     		ldr	r3, .L106+8
 1328 0018 1B68     		ldr	r3, [r3]
 1329 001a 1B68     		ldr	r3, [r3]
 1330 001c 002B     		cmp	r3, #0
 1331 001e 01D0     		beq	.L88
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1332              		.loc 1 2729 4 discriminator 1 view .LVU350
ARM GAS  /tmp/ccqcX5vb.s 			page 122


 1333              		.syntax divided
 1334              	@ 2729 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1335 0020 72B6     		 cpsid i 
 1336              	@ 0 "" 2
 1337              		.thumb
 1338              		.syntax unified
 1339              	.L89:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1340              		.loc 1 2729 4 discriminator 1 view .LVU351
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1341              		.loc 1 2729 4 discriminator 1 view .LVU352
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1342              		.loc 1 2729 4 discriminator 1 view .LVU353
 1343 0022 FEE7     		b	.L89
 1344              	.L88:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1345              		.loc 1 2729 4 discriminator 2 view .LVU354
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1346              		.loc 1 2729 4 discriminator 2 view .LVU355
 1347 0024 324A     		ldr	r2, .L106+8
 1348 0026 1168     		ldr	r1, [r2]
 1349              	.LVL96:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1350              		.loc 1 2729 4 discriminator 2 view .LVU356
 1351 0028 324B     		ldr	r3, .L106+12
 1352 002a 1868     		ldr	r0, [r3]
 1353 002c 1060     		str	r0, [r2]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1354              		.loc 1 2729 4 discriminator 2 view .LVU357
 1355 002e 1960     		str	r1, [r3]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1356              		.loc 1 2729 4 discriminator 2 view .LVU358
 1357 0030 314A     		ldr	r2, .L106+16
 1358 0032 1368     		ldr	r3, [r2]
 1359 0034 0133     		adds	r3, r3, #1
 1360 0036 1360     		str	r3, [r2]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1361              		.loc 1 2729 4 discriminator 2 view .LVU359
 1362 0038 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1363              	.LVL97:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1364              		.loc 1 2729 4 is_stmt 0 discriminator 2 view .LVU360
 1365              	.LBE5:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1366              		.loc 1 2729 30 is_stmt 1 discriminator 2 view .LVU361
 1367              	.L87:
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1368              		.loc 1 2733 28 view .LVU362
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1369              		.loc 1 2740 3 view .LVU363
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1370              		.loc 1 2740 23 is_stmt 0 view .LVU364
 1371 003c 2F4B     		ldr	r3, .L106+20
 1372 003e 1B68     		ldr	r3, [r3]
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1373              		.loc 1 2740 5 view .LVU365
 1374 0040 AB42     		cmp	r3, r5
ARM GAS  /tmp/ccqcX5vb.s 			page 123


 1375 0042 3FD9     		bls	.L100
 1376              	.LBE4:
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1377              		.loc 1 2711 12 view .LVU366
 1378 0044 0027     		movs	r7, #0
 1379              	.LVL98:
 1380              	.L91:
 1381              	.LBB6:
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1382              		.loc 1 2823 4 is_stmt 1 view .LVU367
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1383              		.loc 1 2823 8 is_stmt 0 view .LVU368
 1384 0046 2E4B     		ldr	r3, .L106+24
 1385 0048 1B68     		ldr	r3, [r3]
 1386 004a DA6A     		ldr	r2, [r3, #44]
 1387 004c 9300     		lsls	r3, r2, #2
 1388 004e 9B18     		adds	r3, r3, r2
 1389 0050 9A00     		lsls	r2, r3, #2
 1390 0052 2C4B     		ldr	r3, .L106+28
 1391 0054 D358     		ldr	r3, [r2, r3]
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1392              		.loc 1 2823 6 view .LVU369
 1393 0056 012B     		cmp	r3, #1
 1394 0058 00D9     		bls	.L98
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1395              		.loc 1 2825 21 view .LVU370
 1396 005a 0127     		movs	r7, #1
 1397              	.LVL99:
 1398              	.L98:
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1399              		.loc 1 2829 29 is_stmt 1 view .LVU371
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1400              		.loc 1 2851 4 view .LVU372
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1401              		.loc 1 2851 22 is_stmt 0 view .LVU373
 1402 005c 2A4B     		ldr	r3, .L106+32
 1403 005e 1B68     		ldr	r3, [r3]
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1404              		.loc 1 2851 6 view .LVU374
 1405 0060 002B     		cmp	r3, #0
 1406 0062 3ED0     		beq	.L85
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1407              		.loc 1 2853 21 view .LVU375
 1408 0064 0127     		movs	r7, #1
 1409              	.LVL100:
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1410              		.loc 1 2853 21 view .LVU376
 1411              	.LBE6:
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1412              		.loc 1 2875 2 is_stmt 1 view .LVU377
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1413              		.loc 1 2875 9 is_stmt 0 view .LVU378
 1414 0066 3CE0     		b	.L85
 1415              	.LVL101:
 1416              	.L101:
 1417              	.LBB7:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
ARM GAS  /tmp/ccqcX5vb.s 			page 124


 1418              		.loc 1 2806 24 view .LVU379
 1419 0068 0127     		movs	r7, #1
 1420              	.LVL102:
 1421              	.L90:
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1422              		.loc 1 2742 4 is_stmt 1 view .LVU380
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1423              		.loc 1 2744 5 view .LVU381
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1424              		.loc 1 2744 9 is_stmt 0 view .LVU382
 1425 006a 214B     		ldr	r3, .L106+8
 1426 006c 1B68     		ldr	r3, [r3]
 1427 006e 1B68     		ldr	r3, [r3]
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1428              		.loc 1 2744 7 view .LVU383
 1429 0070 002B     		cmp	r3, #0
 1430 0072 29D0     		beq	.L104
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1431              		.loc 1 2760 6 is_stmt 1 view .LVU384
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1432              		.loc 1 2760 14 is_stmt 0 view .LVU385
 1433 0074 1E4B     		ldr	r3, .L106+8
 1434 0076 1B68     		ldr	r3, [r3]
 1435 0078 DB68     		ldr	r3, [r3, #12]
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1436              		.loc 1 2760 12 view .LVU386
 1437 007a DC68     		ldr	r4, [r3, #12]
 1438              	.LVL103:
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1439              		.loc 1 2761 6 is_stmt 1 view .LVU387
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1440              		.loc 1 2761 17 is_stmt 0 view .LVU388
 1441 007c 6368     		ldr	r3, [r4, #4]
 1442              	.LVL104:
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1443              		.loc 1 2763 6 is_stmt 1 view .LVU389
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1444              		.loc 1 2763 8 is_stmt 0 view .LVU390
 1445 007e 9D42     		cmp	r5, r3
 1446 0080 27D3     		bcc	.L105
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1447              		.loc 1 2775 31 is_stmt 1 view .LVU391
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1448              		.loc 1 2779 6 view .LVU392
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1449              		.loc 1 2779 15 is_stmt 0 view .LVU393
 1450 0082 261D     		adds	r6, r4, #4
 1451 0084 3000     		movs	r0, r6
 1452 0086 FFF7FEFF 		bl	uxListRemove
 1453              	.LVL105:
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1454              		.loc 1 2783 6 is_stmt 1 view .LVU394
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1455              		.loc 1 2783 8 is_stmt 0 view .LVU395
 1456 008a A36A     		ldr	r3, [r4, #40]
 1457 008c 002B     		cmp	r3, #0
 1458 008e 03D0     		beq	.L94
ARM GAS  /tmp/ccqcX5vb.s 			page 125


2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1459              		.loc 1 2785 7 is_stmt 1 view .LVU396
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1460              		.loc 1 2785 16 is_stmt 0 view .LVU397
 1461 0090 2000     		movs	r0, r4
 1462 0092 1830     		adds	r0, r0, #24
 1463 0094 FFF7FEFF 		bl	uxListRemove
 1464              	.LVL106:
 1465              	.L94:
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1466              		.loc 1 2789 31 is_stmt 1 view .LVU398
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1467              		.loc 1 2794 6 view .LVU399
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1468              		.loc 1 2794 6 view .LVU400
 1469 0098 E26A     		ldr	r2, [r4, #44]
 1470 009a 1C4B     		ldr	r3, .L106+36
 1471 009c 1B68     		ldr	r3, [r3]
 1472 009e 9A42     		cmp	r2, r3
 1473 00a0 01D9     		bls	.L95
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1474              		.loc 1 2794 6 discriminator 1 view .LVU401
 1475 00a2 1A4B     		ldr	r3, .L106+36
 1476 00a4 1A60     		str	r2, [r3]
 1477              	.L95:
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1478              		.loc 1 2794 6 discriminator 3 view .LVU402
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1479              		.loc 1 2794 6 discriminator 3 view .LVU403
 1480 00a6 9300     		lsls	r3, r2, #2
 1481 00a8 9B18     		adds	r3, r3, r2
 1482 00aa 9800     		lsls	r0, r3, #2
 1483 00ac 154B     		ldr	r3, .L106+28
 1484 00ae C018     		adds	r0, r0, r3
 1485 00b0 3100     		movs	r1, r6
 1486 00b2 FFF7FEFF 		bl	vListInsertEnd
 1487              	.LVL107:
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1488              		.loc 1 2794 36 discriminator 3 view .LVU404
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1489              		.loc 1 2804 7 discriminator 3 view .LVU405
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1490              		.loc 1 2804 16 is_stmt 0 discriminator 3 view .LVU406
 1491 00b6 E26A     		ldr	r2, [r4, #44]
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1492              		.loc 1 2804 44 discriminator 3 view .LVU407
 1493 00b8 114B     		ldr	r3, .L106+24
 1494 00ba 1B68     		ldr	r3, [r3]
 1495 00bc DB6A     		ldr	r3, [r3, #44]
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1496              		.loc 1 2804 9 discriminator 3 view .LVU408
 1497 00be 9A42     		cmp	r2, r3
 1498 00c0 D2D2     		bcs	.L101
 1499 00c2 D2E7     		b	.L90
 1500              	.LVL108:
 1501              	.L100:
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
ARM GAS  /tmp/ccqcX5vb.s 			page 126


 1502              		.loc 1 2804 9 discriminator 3 view .LVU409
 1503              	.LBE7:
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1504              		.loc 1 2711 12 view .LVU410
 1505 00c4 0027     		movs	r7, #0
 1506 00c6 D0E7     		b	.L90
 1507              	.LVL109:
 1508              	.L104:
 1509              	.LBB8:
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 1510              		.loc 1 2751 6 is_stmt 1 view .LVU411
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 1511              		.loc 1 2751 27 is_stmt 0 view .LVU412
 1512 00c8 0C4B     		ldr	r3, .L106+20
 1513 00ca 0122     		movs	r2, #1
 1514 00cc 5242     		rsbs	r2, r2, #0
 1515 00ce 1A60     		str	r2, [r3]
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1516              		.loc 1 2752 6 is_stmt 1 view .LVU413
 1517 00d0 B9E7     		b	.L91
 1518              	.LVL110:
 1519              	.L105:
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 1520              		.loc 1 2770 7 view .LVU414
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 1521              		.loc 1 2770 28 is_stmt 0 view .LVU415
 1522 00d2 0A4A     		ldr	r2, .L106+20
 1523 00d4 1360     		str	r3, [r2]
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1524              		.loc 1 2771 7 is_stmt 1 view .LVU416
 1525 00d6 B6E7     		b	.L91
 1526              	.LVL111:
 1527              	.L86:
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1528              		.loc 1 2771 7 is_stmt 0 view .LVU417
 1529              	.LBE8:
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1530              		.loc 1 2864 3 is_stmt 1 view .LVU418
 1531 00d8 0D4A     		ldr	r2, .L106+40
 1532 00da 1368     		ldr	r3, [r2]
 1533 00dc 0133     		adds	r3, r3, #1
 1534 00de 1360     		str	r3, [r2]
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1535              		.loc 1 2711 12 is_stmt 0 view .LVU419
 1536 00e0 0027     		movs	r7, #0
 1537              	.LVL112:
 1538              	.L85:
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1539              		.loc 1 2876 1 view .LVU420
 1540 00e2 3800     		movs	r0, r7
 1541              		@ sp needed
 1542 00e4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1543              	.L107:
 1544 00e6 C046     		.align	2
 1545              	.L106:
 1546 00e8 00000000 		.word	.LANCHOR13
 1547 00ec 00000000 		.word	.LANCHOR11
ARM GAS  /tmp/ccqcX5vb.s 			page 127


 1548 00f0 00000000 		.word	.LANCHOR0
 1549 00f4 00000000 		.word	.LANCHOR5
 1550 00f8 00000000 		.word	.LANCHOR14
 1551 00fc 00000000 		.word	.LANCHOR1
 1552 0100 00000000 		.word	.LANCHOR7
 1553 0104 00000000 		.word	pxReadyTasksLists
 1554 0108 00000000 		.word	.LANCHOR15
 1555 010c 00000000 		.word	.LANCHOR10
 1556 0110 00000000 		.word	.LANCHOR16
 1557              		.cfi_endproc
 1558              	.LFE14:
 1560              		.section	.text.xTaskResumeAll,"ax",%progbits
 1561              		.align	1
 1562              		.global	xTaskResumeAll
 1563              		.syntax unified
 1564              		.code	16
 1565              		.thumb_func
 1567              	xTaskResumeAll:
 1568              	.LFB8:
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 1569              		.loc 1 2195 1 is_stmt 1 view -0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 0
 1572              		@ frame_needed = 0, uses_anonymous_args = 0
 1573 0000 70B5     		push	{r4, r5, r6, lr}
 1574              	.LCFI12:
 1575              		.cfi_def_cfa_offset 16
 1576              		.cfi_offset 4, -16
 1577              		.cfi_offset 5, -12
 1578              		.cfi_offset 6, -8
 1579              		.cfi_offset 14, -4
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 1580              		.loc 1 2196 1 view .LVU422
 1581              	.LVL113:
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1582              		.loc 1 2197 1 view .LVU423
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1583              		.loc 1 2201 2 view .LVU424
 1584 0002 314B     		ldr	r3, .L124
 1585 0004 1B68     		ldr	r3, [r3]
 1586 0006 002B     		cmp	r3, #0
 1587 0008 01D1     		bne	.L109
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1588              		.loc 1 2201 2 discriminator 1 view .LVU425
 1589              		.syntax divided
 1590              	@ 2201 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1591 000a 72B6     		 cpsid i 
 1592              	@ 0 "" 2
 1593              		.thumb
 1594              		.syntax unified
 1595              	.L110:
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1596              		.loc 1 2201 2 discriminator 1 view .LVU426
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1597              		.loc 1 2201 2 discriminator 1 view .LVU427
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1598              		.loc 1 2201 2 discriminator 1 view .LVU428
ARM GAS  /tmp/ccqcX5vb.s 			page 128


 1599 000c FEE7     		b	.L110
 1600              	.L109:
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1601              		.loc 1 2201 38 discriminator 2 view .LVU429
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1602              		.loc 1 2208 2 discriminator 2 view .LVU430
 1603 000e FFF7FEFF 		bl	vPortEnterCritical
 1604              	.LVL114:
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1605              		.loc 1 2210 3 discriminator 2 view .LVU431
 1606 0012 2D4B     		ldr	r3, .L124
 1607 0014 1A68     		ldr	r2, [r3]
 1608 0016 013A     		subs	r2, r2, #1
 1609 0018 1A60     		str	r2, [r3]
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1610              		.loc 1 2212 3 discriminator 2 view .LVU432
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1611              		.loc 1 2212 28 is_stmt 0 discriminator 2 view .LVU433
 1612 001a 1B68     		ldr	r3, [r3]
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1613              		.loc 1 2212 5 discriminator 2 view .LVU434
 1614 001c 002B     		cmp	r3, #0
 1615 001e 4DD1     		bne	.L120
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1616              		.loc 1 2214 4 is_stmt 1 view .LVU435
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1617              		.loc 1 2214 31 is_stmt 0 view .LVU436
 1618 0020 2A4B     		ldr	r3, .L124+4
 1619 0022 1B68     		ldr	r3, [r3]
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1620              		.loc 1 2214 6 view .LVU437
 1621 0024 002B     		cmp	r3, #0
 1622 0026 01D1     		bne	.L121
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1623              		.loc 1 2197 12 view .LVU438
 1624 0028 0024     		movs	r4, #0
 1625 002a 48E0     		b	.L111
 1626              	.L121:
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 1627              		.loc 1 2196 8 view .LVU439
 1628 002c 0024     		movs	r4, #0
 1629              	.LVL115:
 1630              	.L112:
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1631              		.loc 1 2233 31 is_stmt 1 view .LVU440
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1632              		.loc 1 2218 10 view .LVU441
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1633              		.loc 1 2218 12 is_stmt 0 view .LVU442
 1634 002e 284B     		ldr	r3, .L124+8
 1635 0030 1B68     		ldr	r3, [r3]
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1636              		.loc 1 2218 10 view .LVU443
 1637 0032 002B     		cmp	r3, #0
 1638 0034 23D0     		beq	.L122
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 1639              		.loc 1 2220 6 is_stmt 1 view .LVU444
ARM GAS  /tmp/ccqcX5vb.s 			page 129


2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 1640              		.loc 1 2220 14 is_stmt 0 view .LVU445
 1641 0036 264B     		ldr	r3, .L124+8
 1642 0038 DB68     		ldr	r3, [r3, #12]
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 1643              		.loc 1 2220 12 view .LVU446
 1644 003a DC68     		ldr	r4, [r3, #12]
 1645              	.LVL116:
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 1646              		.loc 1 2221 6 is_stmt 1 view .LVU447
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 1647              		.loc 1 2221 15 is_stmt 0 view .LVU448
 1648 003c 2000     		movs	r0, r4
 1649 003e 1830     		adds	r0, r0, #24
 1650 0040 FFF7FEFF 		bl	uxListRemove
 1651              	.LVL117:
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1652              		.loc 1 2222 6 is_stmt 1 view .LVU449
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1653              		.loc 1 2222 15 is_stmt 0 view .LVU450
 1654 0044 251D     		adds	r5, r4, #4
 1655 0046 2800     		movs	r0, r5
 1656 0048 FFF7FEFF 		bl	uxListRemove
 1657              	.LVL118:
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1658              		.loc 1 2223 6 is_stmt 1 view .LVU451
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1659              		.loc 1 2223 6 view .LVU452
 1660 004c E36A     		ldr	r3, [r4, #44]
 1661 004e 214A     		ldr	r2, .L124+12
 1662 0050 1268     		ldr	r2, [r2]
 1663 0052 9342     		cmp	r3, r2
 1664 0054 01D9     		bls	.L113
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1665              		.loc 1 2223 6 discriminator 1 view .LVU453
 1666 0056 1F4A     		ldr	r2, .L124+12
 1667 0058 1360     		str	r3, [r2]
 1668              	.L113:
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1669              		.loc 1 2223 6 discriminator 3 view .LVU454
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1670              		.loc 1 2223 6 discriminator 3 view .LVU455
 1671 005a 9800     		lsls	r0, r3, #2
 1672 005c C018     		adds	r0, r0, r3
 1673 005e 8000     		lsls	r0, r0, #2
 1674 0060 1D4B     		ldr	r3, .L124+16
 1675 0062 C018     		adds	r0, r0, r3
 1676 0064 2900     		movs	r1, r5
 1677 0066 FFF7FEFF 		bl	vListInsertEnd
 1678              	.LVL119:
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1679              		.loc 1 2223 36 discriminator 3 view .LVU456
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1680              		.loc 1 2227 6 discriminator 3 view .LVU457
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1681              		.loc 1 2227 43 is_stmt 0 discriminator 3 view .LVU458
 1682 006a 1C4B     		ldr	r3, .L124+20
ARM GAS  /tmp/ccqcX5vb.s 			page 130


 1683 006c 1B68     		ldr	r3, [r3]
 1684 006e DB6A     		ldr	r3, [r3, #44]
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1685              		.loc 1 2227 8 discriminator 3 view .LVU459
 1686 0070 E26A     		ldr	r2, [r4, #44]
 1687 0072 9A42     		cmp	r2, r3
 1688 0074 DBD3     		bcc	.L112
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1689              		.loc 1 2229 7 is_stmt 1 view .LVU460
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1690              		.loc 1 2229 21 is_stmt 0 view .LVU461
 1691 0076 1A4B     		ldr	r3, .L124+24
 1692 0078 0122     		movs	r2, #1
 1693 007a 1A60     		str	r2, [r3]
 1694 007c D7E7     		b	.L112
 1695              	.L122:
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1696              		.loc 1 2237 5 is_stmt 1 view .LVU462
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1697              		.loc 1 2237 7 is_stmt 0 view .LVU463
 1698 007e 002C     		cmp	r4, #0
 1699 0080 01D0     		beq	.L116
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1700              		.loc 1 2245 6 is_stmt 1 view .LVU464
 1701 0082 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1702              	.LVL120:
 1703              	.L116:
 1704              	.LBB9:
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1705              		.loc 1 2253 6 view .LVU465
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1706              		.loc 1 2253 17 is_stmt 0 view .LVU466
 1707 0086 174B     		ldr	r3, .L124+28
 1708 0088 1C68     		ldr	r4, [r3]
 1709              	.LVL121:
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1710              		.loc 1 2255 6 is_stmt 1 view .LVU467
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1711              		.loc 1 2255 8 is_stmt 0 view .LVU468
 1712 008a 002C     		cmp	r4, #0
 1713 008c 0AD1     		bne	.L119
 1714              	.L117:
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1715              		.loc 1 2274 31 is_stmt 1 view .LVU469
 1716              	.LBE9:
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1717              		.loc 1 2278 5 view .LVU470
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1718              		.loc 1 2278 23 is_stmt 0 view .LVU471
 1719 008e 144B     		ldr	r3, .L124+24
 1720 0090 1C68     		ldr	r4, [r3]
 1721              	.LVL122:
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1722              		.loc 1 2278 7 view .LVU472
 1723 0092 002C     		cmp	r4, #0
 1724 0094 13D0     		beq	.L111
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccqcX5vb.s 			page 131


 1725              		.loc 1 2282 7 is_stmt 1 view .LVU473
 1726              	.LVL123:
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1727              		.loc 1 2285 6 view .LVU474
 1728 0096 FFF7FEFF 		bl	vPortYield
 1729              	.LVL124:
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1730              		.loc 1 2282 23 is_stmt 0 view .LVU475
 1731 009a 0124     		movs	r4, #1
 1732 009c 0FE0     		b	.L111
 1733              	.LVL125:
 1734              	.L118:
 1735              	.LBB10:
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 1736              		.loc 1 2265 33 is_stmt 1 view .LVU476
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( xPendedCounts > ( TickType_t ) 0U );
 1737              		.loc 1 2267 8 view .LVU477
 1738 009e 013C     		subs	r4, r4, #1
 1739              	.LVL126:
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1740              		.loc 1 2268 14 view .LVU478
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1741              		.loc 1 2268 7 is_stmt 0 view .LVU479
 1742 00a0 002C     		cmp	r4, #0
 1743 00a2 07D0     		beq	.L123
 1744              	.L119:
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1745              		.loc 1 2257 7 is_stmt 1 view .LVU480
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 1746              		.loc 1 2259 8 view .LVU481
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 1747              		.loc 1 2259 12 is_stmt 0 view .LVU482
 1748 00a4 FFF7FEFF 		bl	xTaskIncrementTick
 1749              	.LVL127:
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 1750              		.loc 1 2259 10 view .LVU483
 1751 00a8 0028     		cmp	r0, #0
 1752 00aa F8D0     		beq	.L118
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 1753              		.loc 1 2261 9 is_stmt 1 view .LVU484
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 1754              		.loc 1 2261 23 is_stmt 0 view .LVU485
 1755 00ac 0C4B     		ldr	r3, .L124+24
 1756 00ae 0122     		movs	r2, #1
 1757 00b0 1A60     		str	r2, [r3]
 1758 00b2 F4E7     		b	.L118
 1759              	.L123:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1760              		.loc 1 2270 7 is_stmt 1 view .LVU486
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1761              		.loc 1 2270 20 is_stmt 0 view .LVU487
 1762 00b4 0B4B     		ldr	r3, .L124+28
 1763 00b6 0022     		movs	r2, #0
 1764 00b8 1A60     		str	r2, [r3]
 1765 00ba E8E7     		b	.L117
 1766              	.LVL128:
 1767              	.L120:
ARM GAS  /tmp/ccqcX5vb.s 			page 132


2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1768              		.loc 1 2270 20 view .LVU488
 1769              	.LBE10:
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1770              		.loc 1 2197 12 view .LVU489
 1771 00bc 0024     		movs	r4, #0
 1772              	.LVL129:
 1773              	.L111:
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1774              		.loc 1 2295 28 is_stmt 1 view .LVU490
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1775              		.loc 1 2298 2 view .LVU491
 1776 00be FFF7FEFF 		bl	vPortExitCritical
 1777              	.LVL130:
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1778              		.loc 1 2300 2 view .LVU492
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1779              		.loc 1 2301 1 is_stmt 0 view .LVU493
 1780 00c2 2000     		movs	r0, r4
 1781              		@ sp needed
 1782              	.LVL131:
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1783              		.loc 1 2301 1 view .LVU494
 1784 00c4 70BD     		pop	{r4, r5, r6, pc}
 1785              	.L125:
 1786 00c6 C046     		.align	2
 1787              	.L124:
 1788 00c8 00000000 		.word	.LANCHOR13
 1789 00cc 00000000 		.word	.LANCHOR6
 1790 00d0 00000000 		.word	.LANCHOR4
 1791 00d4 00000000 		.word	.LANCHOR10
 1792 00d8 00000000 		.word	pxReadyTasksLists
 1793 00dc 00000000 		.word	.LANCHOR7
 1794 00e0 00000000 		.word	.LANCHOR15
 1795 00e4 00000000 		.word	.LANCHOR16
 1796              		.cfi_endproc
 1797              	.LFE8:
 1799              		.section	.text.vTaskDelayUntil,"ax",%progbits
 1800              		.align	1
 1801              		.global	vTaskDelayUntil
 1802              		.syntax unified
 1803              		.code	16
 1804              		.thumb_func
 1806              	vTaskDelayUntil:
 1807              	.LVL132:
 1808              	.LFB3:
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
 1809              		.loc 1 1258 2 is_stmt 1 view -0
 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 0
 1812              		@ frame_needed = 0, uses_anonymous_args = 0
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
 1813              		.loc 1 1258 2 is_stmt 0 view .LVU496
 1814 0000 70B5     		push	{r4, r5, r6, lr}
 1815              	.LCFI13:
 1816              		.cfi_def_cfa_offset 16
 1817              		.cfi_offset 4, -16
ARM GAS  /tmp/ccqcX5vb.s 			page 133


 1818              		.cfi_offset 5, -12
 1819              		.cfi_offset 6, -8
 1820              		.cfi_offset 14, -4
 1821 0002 0500     		movs	r5, r0
 1822 0004 0C00     		movs	r4, r1
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
 1823              		.loc 1 1259 2 is_stmt 1 view .LVU497
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1824              		.loc 1 1260 2 view .LVU498
 1825              	.LVL133:
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 1826              		.loc 1 1262 3 view .LVU499
 1827 0006 0028     		cmp	r0, #0
 1828 0008 03D0     		beq	.L141
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 1829              		.loc 1 1262 37 discriminator 2 view .LVU500
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 1830              		.loc 1 1263 3 discriminator 2 view .LVU501
 1831 000a 0029     		cmp	r1, #0
 1832 000c 03D1     		bne	.L129
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 1833              		.loc 1 1263 3 discriminator 1 view .LVU502
 1834              		.syntax divided
 1835              	@ 1263 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1836 000e 72B6     		 cpsid i 
 1837              	@ 0 "" 2
 1838              		.thumb
 1839              		.syntax unified
 1840              	.L130:
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 1841              		.loc 1 1263 3 discriminator 2 view .LVU503
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 1842              		.loc 1 1263 3 discriminator 2 view .LVU504
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 1843              		.loc 1 1263 3 discriminator 2 view .LVU505
 1844 0010 FEE7     		b	.L130
 1845              	.L141:
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 1846              		.loc 1 1262 3 discriminator 1 view .LVU506
 1847              		.syntax divided
 1848              	@ 1262 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1849 0012 72B6     		 cpsid i 
 1850              	@ 0 "" 2
 1851              		.thumb
 1852              		.syntax unified
 1853              	.L128:
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 1854              		.loc 1 1262 3 discriminator 1 view .LVU507
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 1855              		.loc 1 1262 3 discriminator 1 view .LVU508
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 1856              		.loc 1 1262 3 discriminator 1 view .LVU509
 1857 0014 FEE7     		b	.L128
 1858              	.L129:
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 1859              		.loc 1 1263 42 discriminator 2 view .LVU510
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccqcX5vb.s 			page 134


 1860              		.loc 1 1264 3 discriminator 2 view .LVU511
 1861 0016 154B     		ldr	r3, .L143
 1862 0018 1B68     		ldr	r3, [r3]
 1863 001a 002B     		cmp	r3, #0
 1864 001c 01D0     		beq	.L131
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1865              		.loc 1 1264 3 discriminator 1 view .LVU512
 1866              		.syntax divided
 1867              	@ 1264 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1868 001e 72B6     		 cpsid i 
 1869              	@ 0 "" 2
 1870              		.thumb
 1871              		.syntax unified
 1872              	.L132:
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1873              		.loc 1 1264 3 discriminator 3 view .LVU513
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1874              		.loc 1 1264 3 discriminator 3 view .LVU514
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1875              		.loc 1 1264 3 discriminator 3 view .LVU515
 1876 0020 FEE7     		b	.L132
 1877              	.L131:
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1878              		.loc 1 1264 44 discriminator 2 view .LVU516
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1879              		.loc 1 1266 3 discriminator 2 view .LVU517
 1880 0022 FFF7FEFF 		bl	vTaskSuspendAll
 1881              	.LVL134:
 1882              	.LBB11:
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1883              		.loc 1 1270 4 discriminator 2 view .LVU518
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1884              		.loc 1 1270 21 is_stmt 0 discriminator 2 view .LVU519
 1885 0026 124B     		ldr	r3, .L143+4
 1886 0028 1868     		ldr	r0, [r3]
 1887              	.LVL135:
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1888              		.loc 1 1273 4 is_stmt 1 discriminator 2 view .LVU520
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1889              		.loc 1 1273 18 is_stmt 0 discriminator 2 view .LVU521
 1890 002a 2B68     		ldr	r3, [r5]
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1891              		.loc 1 1273 16 discriminator 2 view .LVU522
 1892 002c 1C19     		adds	r4, r3, r4
 1893              	.LVL136:
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1894              		.loc 1 1275 4 is_stmt 1 discriminator 2 view .LVU523
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1895              		.loc 1 1275 6 is_stmt 0 discriminator 2 view .LVU524
 1896 002e 8342     		cmp	r3, r0
 1897 0030 09D9     		bls	.L133
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1898              		.loc 1 1282 5 is_stmt 1 view .LVU525
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1899              		.loc 1 1282 7 is_stmt 0 view .LVU526
 1900 0032 A342     		cmp	r3, r4
 1901 0034 01D8     		bhi	.L134
ARM GAS  /tmp/ccqcX5vb.s 			page 135


1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1902              		.loc 1 1307 4 is_stmt 1 view .LVU527
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1903              		.loc 1 1307 24 is_stmt 0 view .LVU528
 1904 0036 2C60     		str	r4, [r5]
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1905              		.loc 1 1309 4 is_stmt 1 view .LVU529
 1906 0038 0EE0     		b	.L135
 1907              	.L134:
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1908              		.loc 1 1282 47 is_stmt 0 discriminator 1 view .LVU530
 1909 003a A042     		cmp	r0, r4
 1910 003c 01D3     		bcc	.L136
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1911              		.loc 1 1307 4 is_stmt 1 view .LVU531
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1912              		.loc 1 1307 24 is_stmt 0 view .LVU532
 1913 003e 2C60     		str	r4, [r5]
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1914              		.loc 1 1309 4 is_stmt 1 view .LVU533
 1915 0040 0AE0     		b	.L135
 1916              	.L136:
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1917              		.loc 1 1284 6 view .LVU534
 1918              	.LVL137:
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1919              		.loc 1 1307 4 view .LVU535
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1920              		.loc 1 1307 24 is_stmt 0 view .LVU536
 1921 0042 2C60     		str	r4, [r5]
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1922              		.loc 1 1309 4 is_stmt 1 view .LVU537
 1923 0044 04E0     		b	.L137
 1924              	.LVL138:
 1925              	.L133:
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1926              		.loc 1 1296 5 view .LVU538
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1927              		.loc 1 1296 7 is_stmt 0 view .LVU539
 1928 0046 A342     		cmp	r3, r4
 1929 0048 01D8     		bhi	.L138
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1930              		.loc 1 1296 47 discriminator 1 view .LVU540
 1931 004a A042     		cmp	r0, r4
 1932 004c 09D2     		bcs	.L139
 1933              	.L138:
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1934              		.loc 1 1298 6 is_stmt 1 view .LVU541
 1935              	.LVL139:
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1936              		.loc 1 1307 4 view .LVU542
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1937              		.loc 1 1307 24 is_stmt 0 view .LVU543
 1938 004e 2C60     		str	r4, [r5]
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1939              		.loc 1 1309 4 is_stmt 1 view .LVU544
 1940              	.L137:
ARM GAS  /tmp/ccqcX5vb.s 			page 136


1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1941              		.loc 1 1311 41 view .LVU545
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1942              		.loc 1 1315 5 view .LVU546
 1943 0050 201A     		subs	r0, r4, r0
 1944              	.LVL140:
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1945              		.loc 1 1315 5 is_stmt 0 view .LVU547
 1946 0052 0021     		movs	r1, #0
 1947 0054 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 1948              	.LVL141:
 1949              	.L135:
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1950              		.loc 1 1319 29 is_stmt 1 view .LVU548
 1951              	.LBE11:
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1952              		.loc 1 1322 3 view .LVU549
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1953              		.loc 1 1322 21 is_stmt 0 view .LVU550
 1954 0058 FFF7FEFF 		bl	xTaskResumeAll
 1955              	.LVL142:
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1956              		.loc 1 1326 3 is_stmt 1 view .LVU551
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1957              		.loc 1 1326 5 is_stmt 0 view .LVU552
 1958 005c 0028     		cmp	r0, #0
 1959 005e 02D0     		beq	.L142
 1960              	.LVL143:
 1961              	.L126:
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1962              		.loc 1 1334 2 view .LVU553
 1963              		@ sp needed
 1964              	.LVL144:
 1965              	.LVL145:
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1966              		.loc 1 1334 2 view .LVU554
 1967 0060 70BD     		pop	{r4, r5, r6, pc}
 1968              	.LVL146:
 1969              	.L139:
 1970              	.LBB12:
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1971              		.loc 1 1307 4 is_stmt 1 view .LVU555
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1972              		.loc 1 1307 24 is_stmt 0 view .LVU556
 1973 0062 2C60     		str	r4, [r5]
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1974              		.loc 1 1309 4 is_stmt 1 view .LVU557
 1975 0064 F8E7     		b	.L135
 1976              	.LVL147:
 1977              	.L142:
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1978              		.loc 1 1309 4 is_stmt 0 view .LVU558
 1979              	.LBE12:
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1980              		.loc 1 1328 4 is_stmt 1 view .LVU559
 1981 0066 FFF7FEFF 		bl	vPortYield
 1982              	.LVL148:
ARM GAS  /tmp/ccqcX5vb.s 			page 137


1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1983              		.loc 1 1332 28 view .LVU560
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1984              		.loc 1 1334 2 is_stmt 0 view .LVU561
 1985 006a F9E7     		b	.L126
 1986              	.L144:
 1987              		.align	2
 1988              	.L143:
 1989 006c 00000000 		.word	.LANCHOR13
 1990 0070 00000000 		.word	.LANCHOR11
 1991              		.cfi_endproc
 1992              	.LFE3:
 1994              		.section	.text.vTaskDelay,"ax",%progbits
 1995              		.align	1
 1996              		.global	vTaskDelay
 1997              		.syntax unified
 1998              		.code	16
 1999              		.thumb_func
 2001              	vTaskDelay:
 2002              	.LVL149:
 2003              	.LFB4:
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2004              		.loc 1 1342 2 is_stmt 1 view -0
 2005              		.cfi_startproc
 2006              		@ args = 0, pretend = 0, frame = 0
 2007              		@ frame_needed = 0, uses_anonymous_args = 0
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2008              		.loc 1 1342 2 is_stmt 0 view .LVU563
 2009 0000 10B5     		push	{r4, lr}
 2010              	.LCFI14:
 2011              		.cfi_def_cfa_offset 8
 2012              		.cfi_offset 4, -8
 2013              		.cfi_offset 14, -4
 2014 0002 041E     		subs	r4, r0, #0
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2015              		.loc 1 1343 2 is_stmt 1 view .LVU564
 2016              	.LVL150:
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2017              		.loc 1 1346 3 view .LVU565
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2018              		.loc 1 1346 5 is_stmt 0 view .LVU566
 2019 0004 0FD0     		beq	.L146
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2020              		.loc 1 1348 4 is_stmt 1 view .LVU567
 2021 0006 094B     		ldr	r3, .L150
 2022 0008 1B68     		ldr	r3, [r3]
 2023 000a 002B     		cmp	r3, #0
 2024 000c 01D0     		beq	.L147
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2025              		.loc 1 1348 4 discriminator 1 view .LVU568
 2026              		.syntax divided
 2027              	@ 1348 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2028 000e 72B6     		 cpsid i 
 2029              	@ 0 "" 2
 2030              		.thumb
 2031              		.syntax unified
 2032              	.L148:
ARM GAS  /tmp/ccqcX5vb.s 			page 138


1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2033              		.loc 1 1348 4 discriminator 1 view .LVU569
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2034              		.loc 1 1348 4 discriminator 1 view .LVU570
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2035              		.loc 1 1348 4 discriminator 1 view .LVU571
 2036 0010 FEE7     		b	.L148
 2037              	.L147:
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2038              		.loc 1 1348 45 discriminator 2 view .LVU572
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2039              		.loc 1 1349 4 discriminator 2 view .LVU573
 2040 0012 FFF7FEFF 		bl	vTaskSuspendAll
 2041              	.LVL151:
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2042              		.loc 1 1351 22 discriminator 2 view .LVU574
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2043              		.loc 1 1360 5 discriminator 2 view .LVU575
 2044 0016 0021     		movs	r1, #0
 2045 0018 2000     		movs	r0, r4
 2046 001a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2047              	.LVL152:
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2048              		.loc 1 1362 4 discriminator 2 view .LVU576
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2049              		.loc 1 1362 22 is_stmt 0 discriminator 2 view .LVU577
 2050 001e FFF7FEFF 		bl	xTaskResumeAll
 2051              	.LVL153:
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2052              		.loc 1 1366 28 is_stmt 1 discriminator 2 view .LVU578
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2053              		.loc 1 1371 3 discriminator 2 view .LVU579
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2054              		.loc 1 1371 5 is_stmt 0 discriminator 2 view .LVU580
 2055 0022 0028     		cmp	r0, #0
 2056 0024 01D1     		bne	.L145
 2057              	.LVL154:
 2058              	.L146:
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2059              		.loc 1 1373 4 is_stmt 1 view .LVU581
 2060 0026 FFF7FEFF 		bl	vPortYield
 2061              	.LVL155:
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2062              		.loc 1 1377 28 view .LVU582
 2063              	.L145:
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2064              		.loc 1 1379 2 is_stmt 0 view .LVU583
 2065              		@ sp needed
 2066              	.LVL156:
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2067              		.loc 1 1379 2 view .LVU584
 2068 002a 10BD     		pop	{r4, pc}
 2069              	.L151:
 2070              		.align	2
 2071              	.L150:
 2072 002c 00000000 		.word	.LANCHOR13
 2073              		.cfi_endproc
ARM GAS  /tmp/ccqcX5vb.s 			page 139


 2074              	.LFE4:
 2076              		.section	.text.xTaskCatchUpTicks,"ax",%progbits
 2077              		.align	1
 2078              		.global	xTaskCatchUpTicks
 2079              		.syntax unified
 2080              		.code	16
 2081              		.thumb_func
 2083              	xTaskCatchUpTicks:
 2084              	.LVL157:
 2085              	.LFB13:
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
 2086              		.loc 1 2610 1 is_stmt 1 view -0
 2087              		.cfi_startproc
 2088              		@ args = 0, pretend = 0, frame = 0
 2089              		@ frame_needed = 0, uses_anonymous_args = 0
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
 2090              		.loc 1 2610 1 is_stmt 0 view .LVU586
 2091 0000 10B5     		push	{r4, lr}
 2092              	.LCFI15:
 2093              		.cfi_def_cfa_offset 8
 2094              		.cfi_offset 4, -8
 2095              		.cfi_offset 14, -4
 2096 0002 0400     		movs	r4, r0
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2097              		.loc 1 2611 1 is_stmt 1 view .LVU587
 2098              	.LVL158:
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2099              		.loc 1 2615 2 view .LVU588
 2100 0004 074B     		ldr	r3, .L155
 2101 0006 1B68     		ldr	r3, [r3]
 2102 0008 002B     		cmp	r3, #0
 2103 000a 01D0     		beq	.L153
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2104              		.loc 1 2615 2 discriminator 1 view .LVU589
 2105              		.syntax divided
 2106              	@ 2615 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2107 000c 72B6     		 cpsid i 
 2108              	@ 0 "" 2
 2109              		.thumb
 2110              		.syntax unified
 2111              	.L154:
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2112              		.loc 1 2615 2 discriminator 1 view .LVU590
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2113              		.loc 1 2615 2 discriminator 1 view .LVU591
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2114              		.loc 1 2615 2 discriminator 1 view .LVU592
 2115 000e FEE7     		b	.L154
 2116              	.L153:
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2117              		.loc 1 2615 43 discriminator 2 view .LVU593
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xPendedTicks += xTicksToCatchUp;
 2118              		.loc 1 2619 2 discriminator 2 view .LVU594
 2119 0010 FFF7FEFF 		bl	vTaskSuspendAll
 2120              	.LVL159:
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
 2121              		.loc 1 2620 2 discriminator 2 view .LVU595
ARM GAS  /tmp/ccqcX5vb.s 			page 140


2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
 2122              		.loc 1 2620 15 is_stmt 0 discriminator 2 view .LVU596
 2123 0014 044B     		ldr	r3, .L155+4
 2124 0016 1868     		ldr	r0, [r3]
 2125 0018 0019     		adds	r0, r0, r4
 2126 001a 1860     		str	r0, [r3]
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2127              		.loc 1 2621 2 is_stmt 1 discriminator 2 view .LVU597
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2128              		.loc 1 2621 19 is_stmt 0 discriminator 2 view .LVU598
 2129 001c FFF7FEFF 		bl	xTaskResumeAll
 2130              	.LVL160:
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2131              		.loc 1 2623 2 is_stmt 1 discriminator 2 view .LVU599
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2132              		.loc 1 2624 1 is_stmt 0 discriminator 2 view .LVU600
 2133              		@ sp needed
 2134              	.LVL161:
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2135              		.loc 1 2624 1 discriminator 2 view .LVU601
 2136 0020 10BD     		pop	{r4, pc}
 2137              	.L156:
 2138 0022 C046     		.align	2
 2139              	.L155:
 2140 0024 00000000 		.word	.LANCHOR13
 2141 0028 00000000 		.word	.LANCHOR16
 2142              		.cfi_endproc
 2143              	.LFE13:
 2145              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2146              		.align	1
 2147              		.global	vTaskSwitchContext
 2148              		.syntax unified
 2149              		.code	16
 2150              		.thumb_func
 2152              	vTaskSwitchContext:
 2153              	.LFB15:
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2154              		.loc 1 2990 1 is_stmt 1 view -0
 2155              		.cfi_startproc
 2156              		@ args = 0, pretend = 0, frame = 0
 2157              		@ frame_needed = 0, uses_anonymous_args = 0
 2158 0000 70B5     		push	{r4, r5, r6, lr}
 2159              	.LCFI16:
 2160              		.cfi_def_cfa_offset 16
 2161              		.cfi_offset 4, -16
 2162              		.cfi_offset 5, -12
 2163              		.cfi_offset 6, -8
 2164              		.cfi_offset 14, -4
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2165              		.loc 1 2991 2 view .LVU603
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2166              		.loc 1 2991 27 is_stmt 0 view .LVU604
 2167 0002 2A4B     		ldr	r3, .L171
 2168 0004 1B68     		ldr	r3, [r3]
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2169              		.loc 1 2991 4 view .LVU605
 2170 0006 002B     		cmp	r3, #0
ARM GAS  /tmp/ccqcX5vb.s 			page 141


 2171 0008 03D0     		beq	.L158
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2172              		.loc 1 2995 3 is_stmt 1 view .LVU606
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2173              		.loc 1 2995 17 is_stmt 0 view .LVU607
 2174 000a 294B     		ldr	r3, .L171+4
 2175 000c 0122     		movs	r2, #1
 2176 000e 1A60     		str	r2, [r3]
 2177              	.L157:
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2178              		.loc 1 3061 1 view .LVU608
 2179              		@ sp needed
 2180 0010 70BD     		pop	{r4, r5, r6, pc}
 2181              	.L158:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2182              		.loc 1 2999 3 is_stmt 1 view .LVU609
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2183              		.loc 1 2999 17 is_stmt 0 view .LVU610
 2184 0012 274B     		ldr	r3, .L171+4
 2185 0014 0022     		movs	r2, #0
 2186 0016 1A60     		str	r2, [r3]
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2187              		.loc 1 3000 27 is_stmt 1 view .LVU611
 2188              	.LBB13:
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2189              		.loc 1 3030 3 view .LVU612
 2190 0018 264B     		ldr	r3, .L171+8
 2191 001a 1B68     		ldr	r3, [r3]
 2192 001c 1B6B     		ldr	r3, [r3, #48]
 2193              	.LVL162:
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2194              		.loc 1 3030 3 view .LVU613
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2195              		.loc 1 3030 3 view .LVU614
 2196 001e 264A     		ldr	r2, .L171+12
 2197 0020 1968     		ldr	r1, [r3]
 2198 0022 9142     		cmp	r1, r2
 2199 0024 02D1     		bne	.L160
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2200              		.loc 1 3030 3 is_stmt 0 discriminator 2 view .LVU615
 2201 0026 5968     		ldr	r1, [r3, #4]
 2202 0028 9142     		cmp	r1, r2
 2203 002a 12D0     		beq	.L167
 2204              	.LVL163:
 2205              	.L160:
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2206              		.loc 1 3030 3 is_stmt 1 discriminator 7 view .LVU616
 2207 002c 214B     		ldr	r3, .L171+8
 2208 002e 1868     		ldr	r0, [r3]
 2209 0030 1968     		ldr	r1, [r3]
 2210 0032 3431     		adds	r1, r1, #52
 2211 0034 FFF7FEFF 		bl	vApplicationStackOverflowHook
 2212              	.LVL164:
 2213              	.L161:
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2214              		.loc 1 3030 3 is_stmt 0 discriminator 7 view .LVU617
 2215              	.LBE13:
ARM GAS  /tmp/ccqcX5vb.s 			page 142


3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2216              		.loc 1 3030 33 is_stmt 1 discriminator 9 view .LVU618
 2217              	.LBB14:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2218              		.loc 1 3041 3 discriminator 9 view .LVU619
 2219 0038 204B     		ldr	r3, .L171+16
 2220 003a 1B68     		ldr	r3, [r3]
 2221              	.LVL165:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2222              		.loc 1 3041 3 discriminator 9 view .LVU620
 2223              	.L162:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2224              		.loc 1 3041 3 discriminator 5 view .LVU621
 2225 003c 9A00     		lsls	r2, r3, #2
 2226 003e D218     		adds	r2, r2, r3
 2227 0040 9100     		lsls	r1, r2, #2
 2228 0042 1F4A     		ldr	r2, .L171+20
 2229 0044 8A58     		ldr	r2, [r1, r2]
 2230 0046 002A     		cmp	r2, #0
 2231 0048 0DD1     		bne	.L168
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2232              		.loc 1 3041 3 discriminator 6 view .LVU622
 2233 004a 002B     		cmp	r3, #0
 2234 004c 09D0     		beq	.L169
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2235              		.loc 1 3041 3 discriminator 3 view .LVU623
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2236              		.loc 1 3041 3 discriminator 3 view .LVU624
 2237 004e 013B     		subs	r3, r3, #1
 2238              	.LVL166:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2239              		.loc 1 3041 3 is_stmt 0 discriminator 3 view .LVU625
 2240 0050 F4E7     		b	.L162
 2241              	.LVL167:
 2242              	.L167:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2243              		.loc 1 3041 3 discriminator 3 view .LVU626
 2244              	.LBE14:
 2245              	.LBB17:
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2246              		.loc 1 3030 3 discriminator 4 view .LVU627
 2247 0052 9968     		ldr	r1, [r3, #8]
 2248 0054 9142     		cmp	r1, r2
 2249 0056 E9D1     		bne	.L160
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2250              		.loc 1 3030 3 discriminator 6 view .LVU628
 2251 0058 DA68     		ldr	r2, [r3, #12]
 2252 005a 174B     		ldr	r3, .L171+12
 2253              	.LVL168:
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2254              		.loc 1 3030 3 discriminator 6 view .LVU629
 2255 005c 9A42     		cmp	r2, r3
 2256 005e E5D1     		bne	.L160
 2257 0060 EAE7     		b	.L161
 2258              	.LVL169:
 2259              	.L169:
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccqcX5vb.s 			page 143


 2260              		.loc 1 3030 3 discriminator 6 view .LVU630
 2261              	.LBE17:
 2262              	.LBB18:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2263              		.loc 1 3041 3 is_stmt 1 discriminator 2 view .LVU631
 2264              		.syntax divided
 2265              	@ 3041 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2266 0062 72B6     		 cpsid i 
 2267              	@ 0 "" 2
 2268              		.thumb
 2269              		.syntax unified
 2270              	.L164:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2271              		.loc 1 3041 3 discriminator 1 view .LVU632
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2272              		.loc 1 3041 3 discriminator 1 view .LVU633
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2273              		.loc 1 3041 3 discriminator 1 view .LVU634
 2274 0064 FEE7     		b	.L164
 2275              	.L168:
 2276              	.LBB15:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2277              		.loc 1 3041 3 discriminator 7 view .LVU635
 2278              	.LVL170:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2279              		.loc 1 3041 3 discriminator 7 view .LVU636
 2280 0066 164D     		ldr	r5, .L171+20
 2281 0068 9900     		lsls	r1, r3, #2
 2282 006a CA18     		adds	r2, r1, r3
 2283 006c 9000     		lsls	r0, r2, #2
 2284 006e 2818     		adds	r0, r5, r0
 2285 0070 4268     		ldr	r2, [r0, #4]
 2286 0072 5468     		ldr	r4, [r2, #4]
 2287 0074 4460     		str	r4, [r0, #4]
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2288              		.loc 1 3041 3 discriminator 7 view .LVU637
 2289 0076 C918     		adds	r1, r1, r3
 2290 0078 8A00     		lsls	r2, r1, #2
 2291 007a 0832     		adds	r2, r2, #8
 2292 007c 5219     		adds	r2, r2, r5
 2293 007e 9442     		cmp	r4, r2
 2294 0080 0FD0     		beq	.L170
 2295              	.L166:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2296              		.loc 1 3041 3 discriminator 10 view .LVU638
 2297 0082 9A00     		lsls	r2, r3, #2
 2298 0084 D218     		adds	r2, r2, r3
 2299 0086 9100     		lsls	r1, r2, #2
 2300 0088 0D4A     		ldr	r2, .L171+20
 2301 008a 5218     		adds	r2, r2, r1
 2302 008c 5268     		ldr	r2, [r2, #4]
 2303 008e D168     		ldr	r1, [r2, #12]
 2304 0090 084A     		ldr	r2, .L171+8
 2305 0092 1160     		str	r1, [r2]
 2306              	.LBE15:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2307              		.loc 1 3041 3 discriminator 10 view .LVU639
ARM GAS  /tmp/ccqcX5vb.s 			page 144


3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2308              		.loc 1 3041 3 discriminator 10 view .LVU640
 2309 0094 0949     		ldr	r1, .L171+16
 2310 0096 0B60     		str	r3, [r1]
 2311              	.LBE18:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2312              		.loc 1 3041 37 discriminator 10 view .LVU641
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2313              		.loc 1 3042 26 discriminator 10 view .LVU642
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2314              		.loc 1 3057 4 discriminator 10 view .LVU643
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2315              		.loc 1 3057 33 is_stmt 0 discriminator 10 view .LVU644
 2316 0098 1368     		ldr	r3, [r2]
 2317              	.LVL171:
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2318              		.loc 1 3057 18 discriminator 10 view .LVU645
 2319 009a 5033     		adds	r3, r3, #80
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2320              		.loc 1 3057 16 discriminator 10 view .LVU646
 2321 009c 094A     		ldr	r2, .L171+24
 2322 009e 1360     		str	r3, [r2]
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2323              		.loc 1 3061 1 discriminator 10 view .LVU647
 2324 00a0 B6E7     		b	.L157
 2325              	.LVL172:
 2326              	.L170:
 2327              	.LBB19:
 2328              	.LBB16:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2329              		.loc 1 3041 3 is_stmt 1 discriminator 8 view .LVU648
 2330 00a2 6068     		ldr	r0, [r4, #4]
 2331 00a4 8900     		lsls	r1, r1, #2
 2332 00a6 6A18     		adds	r2, r5, r1
 2333 00a8 5060     		str	r0, [r2, #4]
 2334 00aa EAE7     		b	.L166
 2335              	.L172:
 2336              		.align	2
 2337              	.L171:
 2338 00ac 00000000 		.word	.LANCHOR13
 2339 00b0 00000000 		.word	.LANCHOR15
 2340 00b4 00000000 		.word	.LANCHOR7
 2341 00b8 A5A5A5A5 		.word	-1515870811
 2342 00bc 00000000 		.word	.LANCHOR10
 2343 00c0 00000000 		.word	pxReadyTasksLists
 2344 00c4 00000000 		.word	_impure_ptr
 2345              	.LBE16:
 2346              	.LBE19:
 2347              		.cfi_endproc
 2348              	.LFE15:
 2350              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2351              		.align	1
 2352              		.global	vTaskPlaceOnEventList
 2353              		.syntax unified
 2354              		.code	16
 2355              		.thumb_func
 2357              	vTaskPlaceOnEventList:
ARM GAS  /tmp/ccqcX5vb.s 			page 145


 2358              	.LVL173:
 2359              	.LFB16:
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 2360              		.loc 1 3065 1 view -0
 2361              		.cfi_startproc
 2362              		@ args = 0, pretend = 0, frame = 0
 2363              		@ frame_needed = 0, uses_anonymous_args = 0
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 2364              		.loc 1 3065 1 is_stmt 0 view .LVU650
 2365 0000 10B5     		push	{r4, lr}
 2366              	.LCFI17:
 2367              		.cfi_def_cfa_offset 8
 2368              		.cfi_offset 4, -8
 2369              		.cfi_offset 14, -4
 2370 0002 0C00     		movs	r4, r1
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2371              		.loc 1 3066 2 is_stmt 1 view .LVU651
 2372 0004 0028     		cmp	r0, #0
 2373 0006 09D0     		beq	.L176
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2374              		.loc 1 3066 29 discriminator 2 view .LVU652
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2375              		.loc 1 3075 2 discriminator 2 view .LVU653
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2376              		.loc 1 3075 43 is_stmt 0 discriminator 2 view .LVU654
 2377 0008 054B     		ldr	r3, .L177
 2378 000a 1968     		ldr	r1, [r3]
 2379              	.LVL174:
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2380              		.loc 1 3075 2 discriminator 2 view .LVU655
 2381 000c 1831     		adds	r1, r1, #24
 2382 000e FFF7FEFF 		bl	vListInsert
 2383              	.LVL175:
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2384              		.loc 1 3077 2 is_stmt 1 discriminator 2 view .LVU656
 2385 0012 0121     		movs	r1, #1
 2386 0014 2000     		movs	r0, r4
 2387 0016 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2388              	.LVL176:
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2389              		.loc 1 3078 1 is_stmt 0 discriminator 2 view .LVU657
 2390              		@ sp needed
 2391              	.LVL177:
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2392              		.loc 1 3078 1 discriminator 2 view .LVU658
 2393 001a 10BD     		pop	{r4, pc}
 2394              	.LVL178:
 2395              	.L176:
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2396              		.loc 1 3066 2 is_stmt 1 discriminator 1 view .LVU659
 2397              		.syntax divided
 2398              	@ 3066 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2399 001c 72B6     		 cpsid i 
 2400              	@ 0 "" 2
 2401              		.thumb
 2402              		.syntax unified
 2403              	.L175:
ARM GAS  /tmp/ccqcX5vb.s 			page 146


3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2404              		.loc 1 3066 2 discriminator 1 view .LVU660
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2405              		.loc 1 3066 2 discriminator 1 view .LVU661
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2406              		.loc 1 3066 2 discriminator 1 view .LVU662
 2407 001e FEE7     		b	.L175
 2408              	.L178:
 2409              		.align	2
 2410              	.L177:
 2411 0020 00000000 		.word	.LANCHOR7
 2412              		.cfi_endproc
 2413              	.LFE16:
 2415              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 2416              		.align	1
 2417              		.global	vTaskPlaceOnUnorderedEventList
 2418              		.syntax unified
 2419              		.code	16
 2420              		.thumb_func
 2422              	vTaskPlaceOnUnorderedEventList:
 2423              	.LVL179:
 2424              	.LFB17:
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 2425              		.loc 1 3082 1 view -0
 2426              		.cfi_startproc
 2427              		@ args = 0, pretend = 0, frame = 0
 2428              		@ frame_needed = 0, uses_anonymous_args = 0
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 2429              		.loc 1 3082 1 is_stmt 0 view .LVU664
 2430 0000 70B5     		push	{r4, r5, r6, lr}
 2431              	.LCFI18:
 2432              		.cfi_def_cfa_offset 16
 2433              		.cfi_offset 4, -16
 2434              		.cfi_offset 5, -12
 2435              		.cfi_offset 6, -8
 2436              		.cfi_offset 14, -4
 2437 0002 1400     		movs	r4, r2
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2438              		.loc 1 3083 2 is_stmt 1 view .LVU665
 2439 0004 0028     		cmp	r0, #0
 2440 0006 05D0     		beq	.L184
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2441              		.loc 1 3083 29 discriminator 2 view .LVU666
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2442              		.loc 1 3087 2 discriminator 2 view .LVU667
 2443 0008 0B4B     		ldr	r3, .L185
 2444 000a 1B68     		ldr	r3, [r3]
 2445 000c 002B     		cmp	r3, #0
 2446 000e 03D1     		bne	.L182
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2447              		.loc 1 3087 2 discriminator 1 view .LVU668
 2448              		.syntax divided
 2449              	@ 3087 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2450 0010 72B6     		 cpsid i 
 2451              	@ 0 "" 2
 2452              		.thumb
 2453              		.syntax unified
ARM GAS  /tmp/ccqcX5vb.s 			page 147


 2454              	.L183:
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2455              		.loc 1 3087 2 discriminator 2 view .LVU669
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2456              		.loc 1 3087 2 discriminator 2 view .LVU670
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2457              		.loc 1 3087 2 discriminator 2 view .LVU671
 2458 0012 FEE7     		b	.L183
 2459              	.L184:
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2460              		.loc 1 3083 2 discriminator 1 view .LVU672
 2461              		.syntax divided
 2462              	@ 3083 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2463 0014 72B6     		 cpsid i 
 2464              	@ 0 "" 2
 2465              		.thumb
 2466              		.syntax unified
 2467              	.L181:
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2468              		.loc 1 3083 2 discriminator 1 view .LVU673
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2469              		.loc 1 3083 2 discriminator 1 view .LVU674
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2470              		.loc 1 3083 2 discriminator 1 view .LVU675
 2471 0016 FEE7     		b	.L181
 2472              	.L182:
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2473              		.loc 1 3087 43 discriminator 2 view .LVU676
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2474              		.loc 1 3092 2 discriminator 2 view .LVU677
 2475 0018 084A     		ldr	r2, .L185+4
 2476              	.LVL180:
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2477              		.loc 1 3092 2 is_stmt 0 discriminator 2 view .LVU678
 2478 001a 1568     		ldr	r5, [r2]
 2479 001c 8023     		movs	r3, #128
 2480 001e 1B06     		lsls	r3, r3, #24
 2481 0020 1943     		orrs	r1, r3
 2482              	.LVL181:
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2483              		.loc 1 3092 2 discriminator 2 view .LVU679
 2484 0022 A961     		str	r1, [r5, #24]
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2485              		.loc 1 3099 2 is_stmt 1 discriminator 2 view .LVU680
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2486              		.loc 1 3099 46 is_stmt 0 discriminator 2 view .LVU681
 2487 0024 1168     		ldr	r1, [r2]
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2488              		.loc 1 3099 2 discriminator 2 view .LVU682
 2489 0026 1831     		adds	r1, r1, #24
 2490 0028 FFF7FEFF 		bl	vListInsertEnd
 2491              	.LVL182:
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2492              		.loc 1 3101 2 is_stmt 1 discriminator 2 view .LVU683
 2493 002c 0121     		movs	r1, #1
 2494 002e 2000     		movs	r0, r4
 2495 0030 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
ARM GAS  /tmp/ccqcX5vb.s 			page 148


 2496              	.LVL183:
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2497              		.loc 1 3102 1 is_stmt 0 discriminator 2 view .LVU684
 2498              		@ sp needed
 2499              	.LVL184:
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2500              		.loc 1 3102 1 discriminator 2 view .LVU685
 2501 0034 70BD     		pop	{r4, r5, r6, pc}
 2502              	.L186:
 2503 0036 C046     		.align	2
 2504              	.L185:
 2505 0038 00000000 		.word	.LANCHOR13
 2506 003c 00000000 		.word	.LANCHOR7
 2507              		.cfi_endproc
 2508              	.LFE17:
 2510              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 2511              		.align	1
 2512              		.global	xTaskRemoveFromEventList
 2513              		.syntax unified
 2514              		.code	16
 2515              		.thumb_func
 2517              	xTaskRemoveFromEventList:
 2518              	.LVL185:
 2519              	.LFB18:
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2520              		.loc 1 3139 1 is_stmt 1 view -0
 2521              		.cfi_startproc
 2522              		@ args = 0, pretend = 0, frame = 0
 2523              		@ frame_needed = 0, uses_anonymous_args = 0
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2524              		.loc 1 3139 1 is_stmt 0 view .LVU687
 2525 0000 70B5     		push	{r4, r5, r6, lr}
 2526              	.LCFI19:
 2527              		.cfi_def_cfa_offset 16
 2528              		.cfi_offset 4, -16
 2529              		.cfi_offset 5, -12
 2530              		.cfi_offset 6, -8
 2531              		.cfi_offset 14, -4
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 2532              		.loc 1 3140 1 is_stmt 1 view .LVU688
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2533              		.loc 1 3141 1 view .LVU689
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 2534              		.loc 1 3156 2 view .LVU690
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 2535              		.loc 1 3156 19 is_stmt 0 view .LVU691
 2536 0002 C368     		ldr	r3, [r0, #12]
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 2537              		.loc 1 3156 17 view .LVU692
 2538 0004 DC68     		ldr	r4, [r3, #12]
 2539              	.LVL186:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 2540              		.loc 1 3157 2 is_stmt 1 view .LVU693
 2541 0006 002C     		cmp	r4, #0
 2542 0008 26D0     		beq	.L195
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 2543              		.loc 1 3157 32 discriminator 2 view .LVU694
ARM GAS  /tmp/ccqcX5vb.s 			page 149


3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2544              		.loc 1 3158 2 discriminator 2 view .LVU695
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2545              		.loc 1 3158 11 is_stmt 0 discriminator 2 view .LVU696
 2546 000a 2500     		movs	r5, r4
 2547 000c 1835     		adds	r5, r5, #24
 2548 000e 2800     		movs	r0, r5
 2549              	.LVL187:
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2550              		.loc 1 3158 11 discriminator 2 view .LVU697
 2551 0010 FFF7FEFF 		bl	uxListRemove
 2552              	.LVL188:
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2553              		.loc 1 3160 2 is_stmt 1 discriminator 2 view .LVU698
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2554              		.loc 1 3160 27 is_stmt 0 discriminator 2 view .LVU699
 2555 0014 154B     		ldr	r3, .L196
 2556 0016 1B68     		ldr	r3, [r3]
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2557              		.loc 1 3160 4 discriminator 2 view .LVU700
 2558 0018 002B     		cmp	r3, #0
 2559 001a 1FD1     		bne	.L190
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 2560              		.loc 1 3162 3 is_stmt 1 view .LVU701
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 2561              		.loc 1 3162 12 is_stmt 0 view .LVU702
 2562 001c 251D     		adds	r5, r4, #4
 2563 001e 2800     		movs	r0, r5
 2564 0020 FFF7FEFF 		bl	uxListRemove
 2565              	.LVL189:
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2566              		.loc 1 3163 3 is_stmt 1 view .LVU703
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2567              		.loc 1 3163 3 view .LVU704
 2568 0024 E36A     		ldr	r3, [r4, #44]
 2569 0026 124A     		ldr	r2, .L196+4
 2570 0028 1268     		ldr	r2, [r2]
 2571 002a 9342     		cmp	r3, r2
 2572 002c 01D9     		bls	.L191
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2573              		.loc 1 3163 3 discriminator 1 view .LVU705
 2574 002e 104A     		ldr	r2, .L196+4
 2575 0030 1360     		str	r3, [r2]
 2576              	.L191:
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2577              		.loc 1 3163 3 discriminator 3 view .LVU706
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2578              		.loc 1 3163 3 discriminator 3 view .LVU707
 2579 0032 9800     		lsls	r0, r3, #2
 2580 0034 C018     		adds	r0, r0, r3
 2581 0036 8000     		lsls	r0, r0, #2
 2582 0038 0E4B     		ldr	r3, .L196+8
 2583 003a C018     		adds	r0, r0, r3
 2584 003c 2900     		movs	r1, r5
 2585 003e FFF7FEFF 		bl	vListInsertEnd
 2586              	.LVL190:
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccqcX5vb.s 			page 150


 2587              		.loc 1 3163 42 discriminator 3 view .LVU708
 2588              	.L192:
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2589              		.loc 1 3186 2 view .LVU709
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2590              		.loc 1 3186 20 is_stmt 0 view .LVU710
 2591 0042 E26A     		ldr	r2, [r4, #44]
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2592              		.loc 1 3186 47 view .LVU711
 2593 0044 0C4B     		ldr	r3, .L196+12
 2594 0046 1B68     		ldr	r3, [r3]
 2595 0048 DB6A     		ldr	r3, [r3, #44]
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2596              		.loc 1 3186 4 view .LVU712
 2597 004a 9A42     		cmp	r2, r3
 2598 004c 0BD9     		bls	.L194
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2599              		.loc 1 3191 3 is_stmt 1 view .LVU713
 2600              	.LVL191:
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2601              		.loc 1 3195 3 view .LVU714
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2602              		.loc 1 3195 17 is_stmt 0 view .LVU715
 2603 004e 0B4B     		ldr	r3, .L196+16
 2604 0050 0122     		movs	r2, #1
 2605 0052 1A60     		str	r2, [r3]
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2606              		.loc 1 3191 11 view .LVU716
 2607 0054 0120     		movs	r0, #1
 2608              	.LVL192:
 2609              	.L187:
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2610              		.loc 1 3203 1 view .LVU717
 2611              		@ sp needed
 2612              	.LVL193:
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2613              		.loc 1 3203 1 view .LVU718
 2614 0056 70BD     		pop	{r4, r5, r6, pc}
 2615              	.LVL194:
 2616              	.L195:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 2617              		.loc 1 3157 2 is_stmt 1 discriminator 1 view .LVU719
 2618              		.syntax divided
 2619              	@ 3157 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2620 0058 72B6     		 cpsid i 
 2621              	@ 0 "" 2
 2622              		.thumb
 2623              		.syntax unified
 2624              	.L189:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 2625              		.loc 1 3157 2 discriminator 1 view .LVU720
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 2626              		.loc 1 3157 2 discriminator 1 view .LVU721
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 2627              		.loc 1 3157 2 discriminator 1 view .LVU722
 2628 005a FEE7     		b	.L189
 2629              	.LVL195:
ARM GAS  /tmp/ccqcX5vb.s 			page 151


 2630              	.L190:
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2631              		.loc 1 3183 3 view .LVU723
 2632 005c 2900     		movs	r1, r5
 2633 005e 0848     		ldr	r0, .L196+20
 2634 0060 FFF7FEFF 		bl	vListInsertEnd
 2635              	.LVL196:
 2636 0064 EDE7     		b	.L192
 2637              	.L194:
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2638              		.loc 1 3199 11 is_stmt 0 view .LVU724
 2639 0066 0020     		movs	r0, #0
 2640              	.LVL197:
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2641              		.loc 1 3202 2 is_stmt 1 view .LVU725
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2642              		.loc 1 3202 9 is_stmt 0 view .LVU726
 2643 0068 F5E7     		b	.L187
 2644              	.L197:
 2645 006a C046     		.align	2
 2646              	.L196:
 2647 006c 00000000 		.word	.LANCHOR13
 2648 0070 00000000 		.word	.LANCHOR10
 2649 0074 00000000 		.word	pxReadyTasksLists
 2650 0078 00000000 		.word	.LANCHOR7
 2651 007c 00000000 		.word	.LANCHOR15
 2652 0080 00000000 		.word	.LANCHOR4
 2653              		.cfi_endproc
 2654              	.LFE18:
 2656              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 2657              		.align	1
 2658              		.global	vTaskRemoveFromUnorderedEventList
 2659              		.syntax unified
 2660              		.code	16
 2661              		.thumb_func
 2663              	vTaskRemoveFromUnorderedEventList:
 2664              	.LVL198:
 2665              	.LFB19:
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2666              		.loc 1 3207 1 is_stmt 1 view -0
 2667              		.cfi_startproc
 2668              		@ args = 0, pretend = 0, frame = 0
 2669              		@ frame_needed = 0, uses_anonymous_args = 0
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2670              		.loc 1 3207 1 is_stmt 0 view .LVU728
 2671 0000 70B5     		push	{r4, r5, r6, lr}
 2672              	.LCFI20:
 2673              		.cfi_def_cfa_offset 16
 2674              		.cfi_offset 4, -16
 2675              		.cfi_offset 5, -12
 2676              		.cfi_offset 6, -8
 2677              		.cfi_offset 14, -4
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2678              		.loc 1 3208 1 is_stmt 1 view .LVU729
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2679              		.loc 1 3212 2 view .LVU730
 2680 0002 174B     		ldr	r3, .L206
ARM GAS  /tmp/ccqcX5vb.s 			page 152


 2681 0004 1B68     		ldr	r3, [r3]
 2682 0006 002B     		cmp	r3, #0
 2683 0008 01D1     		bne	.L199
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2684              		.loc 1 3212 2 discriminator 1 view .LVU731
 2685              		.syntax divided
 2686              	@ 3212 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2687 000a 72B6     		 cpsid i 
 2688              	@ 0 "" 2
 2689              		.thumb
 2690              		.syntax unified
 2691              	.L200:
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2692              		.loc 1 3212 2 discriminator 1 view .LVU732
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2693              		.loc 1 3212 2 discriminator 1 view .LVU733
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2694              		.loc 1 3212 2 discriminator 1 view .LVU734
 2695 000c FEE7     		b	.L200
 2696              	.L199:
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2697              		.loc 1 3212 49 discriminator 2 view .LVU735
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2698              		.loc 1 3215 2 discriminator 2 view .LVU736
 2699 000e 8023     		movs	r3, #128
 2700 0010 1B06     		lsls	r3, r3, #24
 2701 0012 1943     		orrs	r1, r3
 2702              	.LVL199:
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2703              		.loc 1 3215 2 is_stmt 0 discriminator 2 view .LVU737
 2704 0014 0160     		str	r1, [r0]
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 2705              		.loc 1 3219 2 is_stmt 1 discriminator 2 view .LVU738
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 2706              		.loc 1 3219 17 is_stmt 0 discriminator 2 view .LVU739
 2707 0016 C468     		ldr	r4, [r0, #12]
 2708              	.LVL200:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 2709              		.loc 1 3220 2 is_stmt 1 discriminator 2 view .LVU740
 2710 0018 002C     		cmp	r4, #0
 2711 001a 1ED0     		beq	.L205
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 2712              		.loc 1 3220 32 discriminator 2 view .LVU741
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2713              		.loc 1 3221 2 discriminator 2 view .LVU742
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2714              		.loc 1 3221 11 is_stmt 0 discriminator 2 view .LVU743
 2715 001c FFF7FEFF 		bl	uxListRemove
 2716              	.LVL201:
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 2717              		.loc 1 3240 2 is_stmt 1 discriminator 2 view .LVU744
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 2718              		.loc 1 3240 11 is_stmt 0 discriminator 2 view .LVU745
 2719 0020 251D     		adds	r5, r4, #4
 2720 0022 2800     		movs	r0, r5
 2721 0024 FFF7FEFF 		bl	uxListRemove
 2722              	.LVL202:
ARM GAS  /tmp/ccqcX5vb.s 			page 153


3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2723              		.loc 1 3241 2 is_stmt 1 discriminator 2 view .LVU746
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2724              		.loc 1 3241 2 discriminator 2 view .LVU747
 2725 0028 E36A     		ldr	r3, [r4, #44]
 2726 002a 0E4A     		ldr	r2, .L206+4
 2727 002c 1268     		ldr	r2, [r2]
 2728 002e 9342     		cmp	r3, r2
 2729 0030 01D9     		bls	.L203
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2730              		.loc 1 3241 2 discriminator 1 view .LVU748
 2731 0032 0C4A     		ldr	r2, .L206+4
 2732 0034 1360     		str	r3, [r2]
 2733              	.L203:
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2734              		.loc 1 3241 2 discriminator 3 view .LVU749
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2735              		.loc 1 3241 2 discriminator 3 view .LVU750
 2736 0036 9800     		lsls	r0, r3, #2
 2737 0038 C018     		adds	r0, r0, r3
 2738 003a 8000     		lsls	r0, r0, #2
 2739 003c 0A4B     		ldr	r3, .L206+8
 2740 003e C018     		adds	r0, r0, r3
 2741 0040 2900     		movs	r1, r5
 2742 0042 FFF7FEFF 		bl	vListInsertEnd
 2743              	.LVL203:
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2744              		.loc 1 3241 41 discriminator 3 view .LVU751
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2745              		.loc 1 3243 2 discriminator 3 view .LVU752
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2746              		.loc 1 3243 20 is_stmt 0 discriminator 3 view .LVU753
 2747 0046 E26A     		ldr	r2, [r4, #44]
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2748              		.loc 1 3243 47 discriminator 3 view .LVU754
 2749 0048 084B     		ldr	r3, .L206+12
 2750 004a 1B68     		ldr	r3, [r3]
 2751 004c DB6A     		ldr	r3, [r3, #44]
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2752              		.loc 1 3243 4 discriminator 3 view .LVU755
 2753 004e 9A42     		cmp	r2, r3
 2754 0050 02D9     		bls	.L198
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2755              		.loc 1 3249 3 is_stmt 1 view .LVU756
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2756              		.loc 1 3249 17 is_stmt 0 view .LVU757
 2757 0052 074B     		ldr	r3, .L206+16
 2758 0054 0122     		movs	r2, #1
 2759 0056 1A60     		str	r2, [r3]
 2760              	.L198:
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2761              		.loc 1 3251 1 view .LVU758
 2762              		@ sp needed
 2763              	.LVL204:
 2764              	.LVL205:
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2765              		.loc 1 3251 1 view .LVU759
ARM GAS  /tmp/ccqcX5vb.s 			page 154


 2766 0058 70BD     		pop	{r4, r5, r6, pc}
 2767              	.LVL206:
 2768              	.L205:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 2769              		.loc 1 3220 2 is_stmt 1 discriminator 1 view .LVU760
 2770              		.syntax divided
 2771              	@ 3220 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2772 005a 72B6     		 cpsid i 
 2773              	@ 0 "" 2
 2774              		.thumb
 2775              		.syntax unified
 2776              	.L202:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 2777              		.loc 1 3220 2 discriminator 2 view .LVU761
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 2778              		.loc 1 3220 2 discriminator 2 view .LVU762
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 2779              		.loc 1 3220 2 discriminator 2 view .LVU763
 2780 005c FEE7     		b	.L202
 2781              	.L207:
 2782 005e C046     		.align	2
 2783              	.L206:
 2784 0060 00000000 		.word	.LANCHOR13
 2785 0064 00000000 		.word	.LANCHOR10
 2786 0068 00000000 		.word	pxReadyTasksLists
 2787 006c 00000000 		.word	.LANCHOR7
 2788 0070 00000000 		.word	.LANCHOR15
 2789              		.cfi_endproc
 2790              	.LFE19:
 2792              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 2793              		.align	1
 2794              		.global	vTaskSetTimeOutState
 2795              		.syntax unified
 2796              		.code	16
 2797              		.thumb_func
 2799              	vTaskSetTimeOutState:
 2800              	.LVL207:
 2801              	.LFB20:
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 2802              		.loc 1 3255 1 view -0
 2803              		.cfi_startproc
 2804              		@ args = 0, pretend = 0, frame = 0
 2805              		@ frame_needed = 0, uses_anonymous_args = 0
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 2806              		.loc 1 3255 1 is_stmt 0 view .LVU765
 2807 0000 10B5     		push	{r4, lr}
 2808              	.LCFI21:
 2809              		.cfi_def_cfa_offset 8
 2810              		.cfi_offset 4, -8
 2811              		.cfi_offset 14, -4
 2812 0002 041E     		subs	r4, r0, #0
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 2813              		.loc 1 3256 2 is_stmt 1 view .LVU766
 2814 0004 0AD0     		beq	.L211
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 2815              		.loc 1 3256 27 discriminator 2 view .LVU767
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccqcX5vb.s 			page 155


 2816              		.loc 1 3257 2 discriminator 2 view .LVU768
 2817 0006 FFF7FEFF 		bl	vPortEnterCritical
 2818              	.LVL208:
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 2819              		.loc 1 3259 3 discriminator 2 view .LVU769
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 2820              		.loc 1 3259 29 is_stmt 0 discriminator 2 view .LVU770
 2821 000a 054B     		ldr	r3, .L212
 2822 000c 1B68     		ldr	r3, [r3]
 2823 000e 2360     		str	r3, [r4]
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2824              		.loc 1 3260 3 is_stmt 1 discriminator 2 view .LVU771
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2825              		.loc 1 3260 30 is_stmt 0 discriminator 2 view .LVU772
 2826 0010 044B     		ldr	r3, .L212+4
 2827 0012 1B68     		ldr	r3, [r3]
 2828 0014 6360     		str	r3, [r4, #4]
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2829              		.loc 1 3262 2 is_stmt 1 discriminator 2 view .LVU773
 2830 0016 FFF7FEFF 		bl	vPortExitCritical
 2831              	.LVL209:
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2832              		.loc 1 3263 1 is_stmt 0 discriminator 2 view .LVU774
 2833              		@ sp needed
 2834              	.LVL210:
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2835              		.loc 1 3263 1 discriminator 2 view .LVU775
 2836 001a 10BD     		pop	{r4, pc}
 2837              	.LVL211:
 2838              	.L211:
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 2839              		.loc 1 3256 2 is_stmt 1 discriminator 1 view .LVU776
 2840              		.syntax divided
 2841              	@ 3256 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2842 001c 72B6     		 cpsid i 
 2843              	@ 0 "" 2
 2844              		.thumb
 2845              		.syntax unified
 2846              	.L210:
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 2847              		.loc 1 3256 2 discriminator 1 view .LVU777
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 2848              		.loc 1 3256 2 discriminator 1 view .LVU778
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 2849              		.loc 1 3256 2 discriminator 1 view .LVU779
 2850 001e FEE7     		b	.L210
 2851              	.L213:
 2852              		.align	2
 2853              	.L212:
 2854 0020 00000000 		.word	.LANCHOR14
 2855 0024 00000000 		.word	.LANCHOR11
 2856              		.cfi_endproc
 2857              	.LFE20:
 2859              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 2860              		.align	1
 2861              		.global	vTaskInternalSetTimeOutState
 2862              		.syntax unified
ARM GAS  /tmp/ccqcX5vb.s 			page 156


 2863              		.code	16
 2864              		.thumb_func
 2866              	vTaskInternalSetTimeOutState:
 2867              	.LVL212:
 2868              	.LFB21:
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 2869              		.loc 1 3267 1 view -0
 2870              		.cfi_startproc
 2871              		@ args = 0, pretend = 0, frame = 0
 2872              		@ frame_needed = 0, uses_anonymous_args = 0
 2873              		@ link register save eliminated.
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 2874              		.loc 1 3269 2 view .LVU781
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 2875              		.loc 1 3269 28 is_stmt 0 view .LVU782
 2876 0000 034B     		ldr	r3, .L215
 2877 0002 1B68     		ldr	r3, [r3]
 2878 0004 0360     		str	r3, [r0]
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2879              		.loc 1 3270 2 is_stmt 1 view .LVU783
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2880              		.loc 1 3270 29 is_stmt 0 view .LVU784
 2881 0006 034B     		ldr	r3, .L215+4
 2882 0008 1B68     		ldr	r3, [r3]
 2883 000a 4360     		str	r3, [r0, #4]
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2884              		.loc 1 3271 1 view .LVU785
 2885              		@ sp needed
 2886 000c 7047     		bx	lr
 2887              	.L216:
 2888 000e C046     		.align	2
 2889              	.L215:
 2890 0010 00000000 		.word	.LANCHOR14
 2891 0014 00000000 		.word	.LANCHOR11
 2892              		.cfi_endproc
 2893              	.LFE21:
 2895              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 2896              		.align	1
 2897              		.global	xTaskCheckForTimeOut
 2898              		.syntax unified
 2899              		.code	16
 2900              		.thumb_func
 2902              	xTaskCheckForTimeOut:
 2903              	.LVL213:
 2904              	.LFB22:
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 2905              		.loc 1 3275 1 is_stmt 1 view -0
 2906              		.cfi_startproc
 2907              		@ args = 0, pretend = 0, frame = 0
 2908              		@ frame_needed = 0, uses_anonymous_args = 0
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 2909              		.loc 1 3275 1 is_stmt 0 view .LVU787
 2910 0000 70B5     		push	{r4, r5, r6, lr}
 2911              	.LCFI22:
 2912              		.cfi_def_cfa_offset 16
 2913              		.cfi_offset 4, -16
 2914              		.cfi_offset 5, -12
ARM GAS  /tmp/ccqcX5vb.s 			page 157


 2915              		.cfi_offset 6, -8
 2916              		.cfi_offset 14, -4
 2917 0002 0400     		movs	r4, r0
 2918 0004 0D00     		movs	r5, r1
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2919              		.loc 1 3276 1 is_stmt 1 view .LVU788
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 2920              		.loc 1 3278 2 view .LVU789
 2921 0006 0028     		cmp	r0, #0
 2922 0008 18D0     		beq	.L226
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 2923              		.loc 1 3278 27 discriminator 2 view .LVU790
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2924              		.loc 1 3279 2 discriminator 2 view .LVU791
 2925 000a 0029     		cmp	r1, #0
 2926 000c 18D0     		beq	.L227
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2927              		.loc 1 3279 31 discriminator 2 view .LVU792
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2928              		.loc 1 3281 2 discriminator 2 view .LVU793
 2929 000e FFF7FEFF 		bl	vPortEnterCritical
 2930              	.LVL214:
 2931              	.LBB20:
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 2932              		.loc 1 3284 3 discriminator 2 view .LVU794
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 2933              		.loc 1 3284 20 is_stmt 0 discriminator 2 view .LVU795
 2934 0012 114B     		ldr	r3, .L229
 2935 0014 1A68     		ldr	r2, [r3]
 2936              	.LVL215:
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2937              		.loc 1 3285 3 is_stmt 1 discriminator 2 view .LVU796
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2938              		.loc 1 3285 62 is_stmt 0 discriminator 2 view .LVU797
 2939 0016 6368     		ldr	r3, [r4, #4]
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2940              		.loc 1 3285 20 discriminator 2 view .LVU798
 2941 0018 D01A     		subs	r0, r2, r3
 2942              	.LVL216:
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2943              		.loc 1 3309 3 is_stmt 1 discriminator 2 view .LVU799
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2944              		.loc 1 3309 25 is_stmt 0 discriminator 2 view .LVU800
 2945 001a 1049     		ldr	r1, .L229+4
 2946 001c 0968     		ldr	r1, [r1]
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2947              		.loc 1 3309 5 discriminator 2 view .LVU801
 2948 001e 2668     		ldr	r6, [r4]
 2949 0020 8E42     		cmp	r6, r1
 2950 0022 01D0     		beq	.L222
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2951              		.loc 1 3309 56 discriminator 1 view .LVU802
 2952 0024 9342     		cmp	r3, r2
 2953 0026 15D9     		bls	.L225
 2954              	.L222:
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2955              		.loc 1 3318 8 is_stmt 1 view .LVU803
ARM GAS  /tmp/ccqcX5vb.s 			page 158


3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2956              		.loc 1 3318 27 is_stmt 0 view .LVU804
 2957 0028 2968     		ldr	r1, [r5]
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2958              		.loc 1 3318 10 view .LVU805
 2959 002a 8142     		cmp	r1, r0
 2960 002c 0AD8     		bhi	.L228
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 2961              		.loc 1 3327 4 is_stmt 1 view .LVU806
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 2962              		.loc 1 3327 19 is_stmt 0 view .LVU807
 2963 002e 0023     		movs	r3, #0
 2964 0030 2B60     		str	r3, [r5]
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2965              		.loc 1 3328 4 is_stmt 1 view .LVU808
 2966              	.LVL217:
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2967              		.loc 1 3328 12 is_stmt 0 view .LVU809
 2968 0032 0124     		movs	r4, #1
 2969              	.LVL218:
 2970              	.L223:
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2971              		.loc 1 3328 12 view .LVU810
 2972              	.LBE20:
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2973              		.loc 1 3331 2 is_stmt 1 view .LVU811
 2974 0034 FFF7FEFF 		bl	vPortExitCritical
 2975              	.LVL219:
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2976              		.loc 1 3333 2 view .LVU812
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2977              		.loc 1 3334 1 is_stmt 0 view .LVU813
 2978 0038 2000     		movs	r0, r4
 2979              		@ sp needed
 2980              	.LVL220:
 2981              	.LVL221:
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2982              		.loc 1 3334 1 view .LVU814
 2983 003a 70BD     		pop	{r4, r5, r6, pc}
 2984              	.LVL222:
 2985              	.L226:
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 2986              		.loc 1 3278 2 is_stmt 1 discriminator 1 view .LVU815
 2987              		.syntax divided
 2988              	@ 3278 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2989 003c 72B6     		 cpsid i 
 2990              	@ 0 "" 2
 2991              		.thumb
 2992              		.syntax unified
 2993              	.L219:
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 2994              		.loc 1 3278 2 discriminator 1 view .LVU816
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 2995              		.loc 1 3278 2 discriminator 1 view .LVU817
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 2996              		.loc 1 3278 2 discriminator 1 view .LVU818
 2997 003e FEE7     		b	.L219
ARM GAS  /tmp/ccqcX5vb.s 			page 159


 2998              	.L227:
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2999              		.loc 1 3279 2 discriminator 1 view .LVU819
 3000              		.syntax divided
 3001              	@ 3279 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3002 0040 72B6     		 cpsid i 
 3003              	@ 0 "" 2
 3004              		.thumb
 3005              		.syntax unified
 3006              	.L221:
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3007              		.loc 1 3279 2 discriminator 2 view .LVU820
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3008              		.loc 1 3279 2 discriminator 2 view .LVU821
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3009              		.loc 1 3279 2 discriminator 2 view .LVU822
 3010 0042 FEE7     		b	.L221
 3011              	.LVL223:
 3012              	.L228:
 3013              	.LBB21:
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3014              		.loc 1 3321 4 view .LVU823
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3015              		.loc 1 3321 19 is_stmt 0 view .LVU824
 3016 0044 9B1A     		subs	r3, r3, r2
 3017 0046 5B18     		adds	r3, r3, r1
 3018 0048 2B60     		str	r3, [r5]
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 3019              		.loc 1 3322 4 is_stmt 1 view .LVU825
 3020 004a 2000     		movs	r0, r4
 3021              	.LVL224:
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 3022              		.loc 1 3322 4 is_stmt 0 view .LVU826
 3023 004c FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3024              	.LVL225:
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3025              		.loc 1 3323 4 is_stmt 1 view .LVU827
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3026              		.loc 1 3323 12 is_stmt 0 view .LVU828
 3027 0050 0024     		movs	r4, #0
 3028              	.LVL226:
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3029              		.loc 1 3323 12 view .LVU829
 3030 0052 EFE7     		b	.L223
 3031              	.LVL227:
 3032              	.L225:
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3033              		.loc 1 3316 12 view .LVU830
 3034 0054 0124     		movs	r4, #1
 3035              	.LVL228:
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3036              		.loc 1 3316 12 view .LVU831
 3037 0056 EDE7     		b	.L223
 3038              	.L230:
 3039              		.align	2
 3040              	.L229:
 3041 0058 00000000 		.word	.LANCHOR11
ARM GAS  /tmp/ccqcX5vb.s 			page 160


 3042 005c 00000000 		.word	.LANCHOR14
 3043              	.LBE21:
 3044              		.cfi_endproc
 3045              	.LFE22:
 3047              		.section	.text.vTaskMissedYield,"ax",%progbits
 3048              		.align	1
 3049              		.global	vTaskMissedYield
 3050              		.syntax unified
 3051              		.code	16
 3052              		.thumb_func
 3054              	vTaskMissedYield:
 3055              	.LFB23:
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 3056              		.loc 1 3338 1 is_stmt 1 view -0
 3057              		.cfi_startproc
 3058              		@ args = 0, pretend = 0, frame = 0
 3059              		@ frame_needed = 0, uses_anonymous_args = 0
 3060              		@ link register save eliminated.
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3061              		.loc 1 3339 2 view .LVU833
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3062              		.loc 1 3339 16 is_stmt 0 view .LVU834
 3063 0000 014B     		ldr	r3, .L232
 3064 0002 0122     		movs	r2, #1
 3065 0004 1A60     		str	r2, [r3]
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3066              		.loc 1 3340 1 view .LVU835
 3067              		@ sp needed
 3068 0006 7047     		bx	lr
 3069              	.L233:
 3070              		.align	2
 3071              	.L232:
 3072 0008 00000000 		.word	.LANCHOR15
 3073              		.cfi_endproc
 3074              	.LFE23:
 3076              		.section	.text.uxTaskGetStackHighWaterMark,"ax",%progbits
 3077              		.align	1
 3078              		.global	uxTaskGetStackHighWaterMark
 3079              		.syntax unified
 3080              		.code	16
 3081              		.thumb_func
 3083              	uxTaskGetStackHighWaterMark:
 3084              	.LVL229:
 3085              	.LFB28:
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3086              		.loc 1 3860 2 is_stmt 1 view -0
 3087              		.cfi_startproc
 3088              		@ args = 0, pretend = 0, frame = 0
 3089              		@ frame_needed = 0, uses_anonymous_args = 0
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3090              		.loc 1 3860 2 is_stmt 0 view .LVU837
 3091 0000 10B5     		push	{r4, lr}
 3092              	.LCFI23:
 3093              		.cfi_def_cfa_offset 8
 3094              		.cfi_offset 4, -8
 3095              		.cfi_offset 14, -4
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
ARM GAS  /tmp/ccqcX5vb.s 			page 161


 3096              		.loc 1 3861 2 is_stmt 1 view .LVU838
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 3097              		.loc 1 3862 2 view .LVU839
3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3098              		.loc 1 3863 2 view .LVU840
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3099              		.loc 1 3865 3 view .LVU841
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3100              		.loc 1 3865 11 is_stmt 0 view .LVU842
 3101 0002 0028     		cmp	r0, #0
 3102 0004 03D0     		beq	.L236
 3103              	.LVL230:
 3104              	.L235:
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3105              		.loc 1 3869 4 is_stmt 1 discriminator 4 view .LVU843
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3106              		.loc 1 3869 18 is_stmt 0 discriminator 4 view .LVU844
 3107 0006 006B     		ldr	r0, [r0, #48]
 3108              	.LVL231:
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3109              		.loc 1 3877 3 is_stmt 1 discriminator 4 view .LVU845
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3110              		.loc 1 3877 30 is_stmt 0 discriminator 4 view .LVU846
 3111 0008 FFF7FEFF 		bl	prvTaskCheckFreeStackSpace
 3112              	.LVL232:
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3113              		.loc 1 3879 3 is_stmt 1 discriminator 4 view .LVU847
3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3114              		.loc 1 3880 2 is_stmt 0 discriminator 4 view .LVU848
 3115              		@ sp needed
 3116 000c 10BD     		pop	{r4, pc}
 3117              	.LVL233:
 3118              	.L236:
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3119              		.loc 1 3865 11 discriminator 1 view .LVU849
 3120 000e 014B     		ldr	r3, .L237
 3121 0010 1868     		ldr	r0, [r3]
 3122              	.LVL234:
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3123              		.loc 1 3865 11 discriminator 1 view .LVU850
 3124 0012 F8E7     		b	.L235
 3125              	.L238:
 3126              		.align	2
 3127              	.L237:
 3128 0014 00000000 		.word	.LANCHOR7
 3129              		.cfi_endproc
 3130              	.LFE28:
 3132              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3133              		.align	1
 3134              		.global	xTaskGetCurrentTaskHandle
 3135              		.syntax unified
 3136              		.code	16
 3137              		.thumb_func
 3139              	xTaskGetCurrentTaskHandle:
 3140              	.LFB30:
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 3141              		.loc 1 3970 2 is_stmt 1 view -0
ARM GAS  /tmp/ccqcX5vb.s 			page 162


 3142              		.cfi_startproc
 3143              		@ args = 0, pretend = 0, frame = 0
 3144              		@ frame_needed = 0, uses_anonymous_args = 0
 3145              		@ link register save eliminated.
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3146              		.loc 1 3971 2 view .LVU852
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3147              		.loc 1 3976 3 view .LVU853
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3148              		.loc 1 3976 11 is_stmt 0 view .LVU854
 3149 0000 014B     		ldr	r3, .L240
 3150 0002 1868     		ldr	r0, [r3]
 3151              	.LVL235:
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3152              		.loc 1 3978 3 is_stmt 1 view .LVU855
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3153              		.loc 1 3979 2 is_stmt 0 view .LVU856
 3154              		@ sp needed
 3155 0004 7047     		bx	lr
 3156              	.L241:
 3157 0006 C046     		.align	2
 3158              	.L240:
 3159 0008 00000000 		.word	.LANCHOR7
 3160              		.cfi_endproc
 3161              	.LFE30:
 3163              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 3164              		.align	1
 3165              		.global	xTaskGetSchedulerState
 3166              		.syntax unified
 3167              		.code	16
 3168              		.thumb_func
 3170              	xTaskGetSchedulerState:
 3171              	.LFB31:
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 3172              		.loc 1 3987 2 is_stmt 1 view -0
 3173              		.cfi_startproc
 3174              		@ args = 0, pretend = 0, frame = 0
 3175              		@ frame_needed = 0, uses_anonymous_args = 0
 3176              		@ link register save eliminated.
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3177              		.loc 1 3988 2 view .LVU858
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3178              		.loc 1 3990 3 view .LVU859
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3179              		.loc 1 3990 25 is_stmt 0 view .LVU860
 3180 0000 064B     		ldr	r3, .L247
 3181 0002 1B68     		ldr	r3, [r3]
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3182              		.loc 1 3990 5 view .LVU861
 3183 0004 002B     		cmp	r3, #0
 3184 0006 07D0     		beq	.L244
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3185              		.loc 1 3996 4 is_stmt 1 view .LVU862
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3186              		.loc 1 3996 29 is_stmt 0 view .LVU863
 3187 0008 054B     		ldr	r3, .L247+4
 3188 000a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccqcX5vb.s 			page 163


3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3189              		.loc 1 3996 6 view .LVU864
 3190 000c 002B     		cmp	r3, #0
 3191 000e 01D0     		beq	.L246
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3192              		.loc 1 4002 13 view .LVU865
 3193 0010 0020     		movs	r0, #0
 3194              	.LVL236:
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3195              		.loc 1 4006 3 is_stmt 1 view .LVU866
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3196              		.loc 1 4006 10 is_stmt 0 view .LVU867
 3197 0012 02E0     		b	.L242
 3198              	.LVL237:
 3199              	.L246:
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3200              		.loc 1 3998 13 view .LVU868
 3201 0014 0220     		movs	r0, #2
 3202 0016 00E0     		b	.L242
 3203              	.L244:
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3204              		.loc 1 3992 12 view .LVU869
 3205 0018 0120     		movs	r0, #1
 3206              	.L242:
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3207              		.loc 1 4007 2 view .LVU870
 3208              		@ sp needed
 3209 001a 7047     		bx	lr
 3210              	.L248:
 3211              		.align	2
 3212              	.L247:
 3213 001c 00000000 		.word	.LANCHOR8
 3214 0020 00000000 		.word	.LANCHOR13
 3215              		.cfi_endproc
 3216              	.LFE31:
 3218              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 3219              		.align	1
 3220              		.global	xTaskPriorityInherit
 3221              		.syntax unified
 3222              		.code	16
 3223              		.thumb_func
 3225              	xTaskPriorityInherit:
 3226              	.LVL238:
 3227              	.LFB32:
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 3228              		.loc 1 4015 2 is_stmt 1 view -0
 3229              		.cfi_startproc
 3230              		@ args = 0, pretend = 0, frame = 0
 3231              		@ frame_needed = 0, uses_anonymous_args = 0
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 3232              		.loc 1 4015 2 is_stmt 0 view .LVU872
 3233 0000 70B5     		push	{r4, r5, r6, lr}
 3234              	.LCFI24:
 3235              		.cfi_def_cfa_offset 16
 3236              		.cfi_offset 4, -16
 3237              		.cfi_offset 5, -12
 3238              		.cfi_offset 6, -8
ARM GAS  /tmp/ccqcX5vb.s 			page 164


 3239              		.cfi_offset 14, -4
 3240 0002 041E     		subs	r4, r0, #0
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 3241              		.loc 1 4016 2 is_stmt 1 view .LVU873
 3242              	.LVL239:
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3243              		.loc 1 4017 2 view .LVU874
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3244              		.loc 1 4022 3 view .LVU875
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3245              		.loc 1 4022 5 is_stmt 0 view .LVU876
 3246 0004 3CD0     		beq	.L255
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3247              		.loc 1 4027 4 is_stmt 1 view .LVU877
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3248              		.loc 1 4027 24 is_stmt 0 view .LVU878
 3249 0006 C26A     		ldr	r2, [r0, #44]
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3250              		.loc 1 4027 51 view .LVU879
 3251 0008 1F4B     		ldr	r3, .L258
 3252 000a 1B68     		ldr	r3, [r3]
 3253 000c DB6A     		ldr	r3, [r3, #44]
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3254              		.loc 1 4027 6 view .LVU880
 3255 000e 9A42     		cmp	r2, r3
 3256 0010 2ED2     		bcs	.L251
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3257              		.loc 1 4032 5 is_stmt 1 view .LVU881
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3258              		.loc 1 4032 7 is_stmt 0 view .LVU882
 3259 0012 8369     		ldr	r3, [r0, #24]
 3260 0014 002B     		cmp	r3, #0
 3261 0016 05DB     		blt	.L252
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3262              		.loc 1 4034 6 is_stmt 1 view .LVU883
 3263 0018 1B4B     		ldr	r3, .L258
 3264 001a 1B68     		ldr	r3, [r3]
 3265 001c D96A     		ldr	r1, [r3, #44]
 3266 001e 0723     		movs	r3, #7
 3267 0020 5B1A     		subs	r3, r3, r1
 3268 0022 8361     		str	r3, [r0, #24]
 3269              	.L252:
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3270              		.loc 1 4038 30 view .LVU884
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3271              		.loc 1 4043 5 view .LVU885
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3272              		.loc 1 4043 9 is_stmt 0 view .LVU886
 3273 0024 9300     		lsls	r3, r2, #2
 3274 0026 9B18     		adds	r3, r3, r2
 3275 0028 9B00     		lsls	r3, r3, #2
 3276 002a 184A     		ldr	r2, .L258+4
 3277 002c 9B18     		adds	r3, r3, r2
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3278              		.loc 1 4043 7 view .LVU887
 3279 002e 6269     		ldr	r2, [r4, #20]
 3280 0030 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccqcX5vb.s 			page 165


 3281 0032 05D0     		beq	.L257
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3282              		.loc 1 4064 6 is_stmt 1 view .LVU888
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3283              		.loc 1 4064 49 is_stmt 0 view .LVU889
 3284 0034 144B     		ldr	r3, .L258
 3285 0036 1B68     		ldr	r3, [r3]
 3286 0038 DB6A     		ldr	r3, [r3, #44]
 3287 003a E362     		str	r3, [r4, #44]
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3288              		.loc 1 4070 13 view .LVU890
 3289 003c 0120     		movs	r0, #1
 3290              	.LVL240:
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3291              		.loc 1 4070 13 view .LVU891
 3292 003e 20E0     		b	.L249
 3293              	.LVL241:
 3294              	.L257:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3295              		.loc 1 4045 6 is_stmt 1 view .LVU892
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3296              		.loc 1 4045 10 is_stmt 0 view .LVU893
 3297 0040 251D     		adds	r5, r4, #4
 3298 0042 2800     		movs	r0, r5
 3299              	.LVL242:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3300              		.loc 1 4045 10 view .LVU894
 3301 0044 FFF7FEFF 		bl	uxListRemove
 3302              	.LVL243:
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3303              		.loc 1 4054 31 is_stmt 1 view .LVU895
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 3304              		.loc 1 4058 6 view .LVU896
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 3305              		.loc 1 4058 49 is_stmt 0 view .LVU897
 3306 0048 0F4B     		ldr	r3, .L258
 3307 004a 1B68     		ldr	r3, [r3]
 3308 004c DB6A     		ldr	r3, [r3, #44]
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 3309              		.loc 1 4058 35 view .LVU898
 3310 004e E362     		str	r3, [r4, #44]
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3311              		.loc 1 4059 6 is_stmt 1 view .LVU899
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3312              		.loc 1 4059 6 view .LVU900
 3313 0050 0F4A     		ldr	r2, .L258+8
 3314 0052 1268     		ldr	r2, [r2]
 3315 0054 9342     		cmp	r3, r2
 3316 0056 01D9     		bls	.L254
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3317              		.loc 1 4059 6 discriminator 1 view .LVU901
 3318 0058 0D4A     		ldr	r2, .L258+8
 3319 005a 1360     		str	r3, [r2]
 3320              	.L254:
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3321              		.loc 1 4059 6 discriminator 3 view .LVU902
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccqcX5vb.s 			page 166


 3322              		.loc 1 4059 6 discriminator 3 view .LVU903
 3323 005c 9800     		lsls	r0, r3, #2
 3324 005e C018     		adds	r0, r0, r3
 3325 0060 8000     		lsls	r0, r0, #2
 3326 0062 0A4B     		ldr	r3, .L258+4
 3327 0064 C018     		adds	r0, r0, r3
 3328 0066 2900     		movs	r1, r5
 3329 0068 FFF7FEFF 		bl	vListInsertEnd
 3330              	.LVL244:
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3331              		.loc 1 4059 47 discriminator 3 view .LVU904
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3332              		.loc 1 4070 13 is_stmt 0 discriminator 3 view .LVU905
 3333 006c 0120     		movs	r0, #1
 3334 006e 08E0     		b	.L249
 3335              	.LVL245:
 3336              	.L251:
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3337              		.loc 1 4074 5 is_stmt 1 view .LVU906
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3338              		.loc 1 4074 25 is_stmt 0 view .LVU907
 3339 0070 826C     		ldr	r2, [r0, #72]
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3340              		.loc 1 4074 56 view .LVU908
 3341 0072 054B     		ldr	r3, .L258
 3342 0074 1B68     		ldr	r3, [r3]
 3343 0076 DB6A     		ldr	r3, [r3, #44]
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3344              		.loc 1 4074 7 view .LVU909
 3345 0078 9A42     		cmp	r2, r3
 3346 007a 03D3     		bcc	.L256
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3347              		.loc 1 4017 13 view .LVU910
 3348 007c 0020     		movs	r0, #0
 3349              	.LVL246:
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3350              		.loc 1 4017 13 view .LVU911
 3351 007e 00E0     		b	.L249
 3352              	.LVL247:
 3353              	.L255:
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3354              		.loc 1 4017 13 view .LVU912
 3355 0080 0020     		movs	r0, #0
 3356              	.LVL248:
 3357              	.L249:
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3358              		.loc 1 4097 2 view .LVU913
 3359              		@ sp needed
 3360              	.LVL249:
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3361              		.loc 1 4097 2 view .LVU914
 3362 0082 70BD     		pop	{r4, r5, r6, pc}
 3363              	.LVL250:
 3364              	.L256:
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3365              		.loc 1 4083 14 view .LVU915
 3366 0084 0120     		movs	r0, #1
ARM GAS  /tmp/ccqcX5vb.s 			page 167


 3367              	.LVL251:
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3368              		.loc 1 4093 28 is_stmt 1 view .LVU916
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3369              		.loc 1 4096 3 view .LVU917
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3370              		.loc 1 4096 10 is_stmt 0 view .LVU918
 3371 0086 FCE7     		b	.L249
 3372              	.L259:
 3373              		.align	2
 3374              	.L258:
 3375 0088 00000000 		.word	.LANCHOR7
 3376 008c 00000000 		.word	pxReadyTasksLists
 3377 0090 00000000 		.word	.LANCHOR10
 3378              		.cfi_endproc
 3379              	.LFE32:
 3381              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 3382              		.align	1
 3383              		.global	xTaskPriorityDisinherit
 3384              		.syntax unified
 3385              		.code	16
 3386              		.thumb_func
 3388              	xTaskPriorityDisinherit:
 3389              	.LVL252:
 3390              	.LFB33:
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 3391              		.loc 1 4105 2 is_stmt 1 view -0
 3392              		.cfi_startproc
 3393              		@ args = 0, pretend = 0, frame = 0
 3394              		@ frame_needed = 0, uses_anonymous_args = 0
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 3395              		.loc 1 4105 2 is_stmt 0 view .LVU920
 3396 0000 70B5     		push	{r4, r5, r6, lr}
 3397              	.LCFI25:
 3398              		.cfi_def_cfa_offset 16
 3399              		.cfi_offset 4, -16
 3400              		.cfi_offset 5, -12
 3401              		.cfi_offset 6, -8
 3402              		.cfi_offset 14, -4
 3403 0002 041E     		subs	r4, r0, #0
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 3404              		.loc 1 4106 2 is_stmt 1 view .LVU921
 3405              	.LVL253:
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3406              		.loc 1 4107 2 view .LVU922
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3407              		.loc 1 4109 3 view .LVU923
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3408              		.loc 1 4109 5 is_stmt 0 view .LVU924
 3409 0004 2DD0     		beq	.L267
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 3410              		.loc 1 4115 4 is_stmt 1 view .LVU925
 3411 0006 194B     		ldr	r3, .L271
 3412 0008 1B68     		ldr	r3, [r3]
 3413 000a 8342     		cmp	r3, r0
 3414 000c 01D0     		beq	.L262
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
ARM GAS  /tmp/ccqcX5vb.s 			page 168


 3415              		.loc 1 4115 4 discriminator 1 view .LVU926
 3416              		.syntax divided
 3417              	@ 4115 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3418 000e 72B6     		 cpsid i 
 3419              	@ 0 "" 2
 3420              		.thumb
 3421              		.syntax unified
 3422              	.L263:
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 3423              		.loc 1 4115 4 discriminator 1 view .LVU927
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 3424              		.loc 1 4115 4 discriminator 1 view .LVU928
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 3425              		.loc 1 4115 4 discriminator 1 view .LVU929
 3426 0010 FEE7     		b	.L263
 3427              	.L262:
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 3428              		.loc 1 4115 41 discriminator 2 view .LVU930
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 3429              		.loc 1 4116 4 discriminator 2 view .LVU931
 3430 0012 C36C     		ldr	r3, [r0, #76]
 3431 0014 002B     		cmp	r3, #0
 3432 0016 01D1     		bne	.L264
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 3433              		.loc 1 4116 4 discriminator 1 view .LVU932
 3434              		.syntax divided
 3435              	@ 4116 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3436 0018 72B6     		 cpsid i 
 3437              	@ 0 "" 2
 3438              		.thumb
 3439              		.syntax unified
 3440              	.L265:
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 3441              		.loc 1 4116 4 discriminator 2 view .LVU933
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 3442              		.loc 1 4116 4 discriminator 2 view .LVU934
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 3443              		.loc 1 4116 4 discriminator 2 view .LVU935
 3444 001a FEE7     		b	.L265
 3445              	.L264:
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 3446              		.loc 1 4116 40 discriminator 2 view .LVU936
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3447              		.loc 1 4117 4 discriminator 2 view .LVU937
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3448              		.loc 1 4117 28 is_stmt 0 discriminator 2 view .LVU938
 3449 001c 013B     		subs	r3, r3, #1
 3450 001e C364     		str	r3, [r0, #76]
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3451              		.loc 1 4121 4 is_stmt 1 discriminator 2 view .LVU939
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3452              		.loc 1 4121 6 is_stmt 0 discriminator 2 view .LVU940
 3453 0020 C26A     		ldr	r2, [r0, #44]
 3454 0022 816C     		ldr	r1, [r0, #72]
 3455 0024 8A42     		cmp	r2, r1
 3456 0026 1ED0     		beq	.L268
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccqcX5vb.s 			page 169


 3457              		.loc 1 4124 5 is_stmt 1 view .LVU941
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3458              		.loc 1 4124 7 is_stmt 0 view .LVU942
 3459 0028 002B     		cmp	r3, #0
 3460 002a 01D0     		beq	.L270
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3461              		.loc 1 4107 13 view .LVU943
 3462 002c 0020     		movs	r0, #0
 3463              	.LVL254:
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3464              		.loc 1 4173 28 is_stmt 1 view .LVU944
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3465              		.loc 1 4176 3 view .LVU945
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3466              		.loc 1 4176 10 is_stmt 0 view .LVU946
 3467 002e 19E0     		b	.L260
 3468              	.LVL255:
 3469              	.L270:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3470              		.loc 1 4131 6 is_stmt 1 view .LVU947
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3471              		.loc 1 4131 10 is_stmt 0 view .LVU948
 3472 0030 051D     		adds	r5, r0, #4
 3473 0032 2800     		movs	r0, r5
 3474              	.LVL256:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3475              		.loc 1 4131 10 view .LVU949
 3476 0034 FFF7FEFF 		bl	uxListRemove
 3477              	.LVL257:
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3478              		.loc 1 4137 31 is_stmt 1 view .LVU950
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 3479              		.loc 1 4142 67 view .LVU951
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3480              		.loc 1 4143 6 view .LVU952
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3481              		.loc 1 4143 31 is_stmt 0 view .LVU953
 3482 0038 A36C     		ldr	r3, [r4, #72]
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3483              		.loc 1 4143 24 view .LVU954
 3484 003a E362     		str	r3, [r4, #44]
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3485              		.loc 1 4148 6 is_stmt 1 view .LVU955
 3486 003c 0722     		movs	r2, #7
 3487 003e D21A     		subs	r2, r2, r3
 3488 0040 A261     		str	r2, [r4, #24]
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3489              		.loc 1 4149 6 view .LVU956
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3490              		.loc 1 4149 6 view .LVU957
 3491 0042 0B4A     		ldr	r2, .L271+4
 3492 0044 1268     		ldr	r2, [r2]
 3493 0046 9342     		cmp	r3, r2
 3494 0048 01D9     		bls	.L266
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3495              		.loc 1 4149 6 discriminator 1 view .LVU958
 3496 004a 094A     		ldr	r2, .L271+4
ARM GAS  /tmp/ccqcX5vb.s 			page 170


 3497 004c 1360     		str	r3, [r2]
 3498              	.L266:
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3499              		.loc 1 4149 6 discriminator 3 view .LVU959
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3500              		.loc 1 4149 6 discriminator 3 view .LVU960
 3501 004e 9800     		lsls	r0, r3, #2
 3502 0050 C018     		adds	r0, r0, r3
 3503 0052 8000     		lsls	r0, r0, #2
 3504 0054 074B     		ldr	r3, .L271+8
 3505 0056 C018     		adds	r0, r0, r3
 3506 0058 2900     		movs	r1, r5
 3507 005a FFF7FEFF 		bl	vListInsertEnd
 3508              	.LVL258:
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3509              		.loc 1 4149 36 discriminator 3 view .LVU961
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3510              		.loc 1 4159 6 discriminator 3 view .LVU962
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3511              		.loc 1 4159 14 is_stmt 0 discriminator 3 view .LVU963
 3512 005e 0120     		movs	r0, #1
 3513 0060 00E0     		b	.L260
 3514              	.LVL259:
 3515              	.L267:
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3516              		.loc 1 4107 13 view .LVU964
 3517 0062 0020     		movs	r0, #0
 3518              	.LVL260:
 3519              	.L260:
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3520              		.loc 1 4177 2 view .LVU965
 3521              		@ sp needed
 3522              	.LVL261:
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3523              		.loc 1 4177 2 view .LVU966
 3524 0064 70BD     		pop	{r4, r5, r6, pc}
 3525              	.LVL262:
 3526              	.L268:
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3527              		.loc 1 4107 13 view .LVU967
 3528 0066 0020     		movs	r0, #0
 3529              	.LVL263:
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3530              		.loc 1 4107 13 view .LVU968
 3531 0068 FCE7     		b	.L260
 3532              	.L272:
 3533 006a C046     		.align	2
 3534              	.L271:
 3535 006c 00000000 		.word	.LANCHOR7
 3536 0070 00000000 		.word	.LANCHOR10
 3537 0074 00000000 		.word	pxReadyTasksLists
 3538              		.cfi_endproc
 3539              	.LFE33:
 3541              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 3542              		.align	1
 3543              		.global	vTaskPriorityDisinheritAfterTimeout
 3544              		.syntax unified
ARM GAS  /tmp/ccqcX5vb.s 			page 171


 3545              		.code	16
 3546              		.thumb_func
 3548              	vTaskPriorityDisinheritAfterTimeout:
 3549              	.LVL264:
 3550              	.LFB34:
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 3551              		.loc 1 4185 2 is_stmt 1 view -0
 3552              		.cfi_startproc
 3553              		@ args = 0, pretend = 0, frame = 0
 3554              		@ frame_needed = 0, uses_anonymous_args = 0
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 3555              		.loc 1 4185 2 is_stmt 0 view .LVU970
 3556 0000 70B5     		push	{r4, r5, r6, lr}
 3557              	.LCFI26:
 3558              		.cfi_def_cfa_offset 16
 3559              		.cfi_offset 4, -16
 3560              		.cfi_offset 5, -12
 3561              		.cfi_offset 6, -8
 3562              		.cfi_offset 14, -4
 3563 0002 041E     		subs	r4, r0, #0
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
 3564              		.loc 1 4186 2 is_stmt 1 view .LVU971
 3565              	.LVL265:
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 3566              		.loc 1 4187 2 view .LVU972
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3567              		.loc 1 4188 2 view .LVU973
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3568              		.loc 1 4190 3 view .LVU974
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3569              		.loc 1 4190 5 is_stmt 0 view .LVU975
 3570 0004 0DD0     		beq	.L273
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3571              		.loc 1 4194 4 is_stmt 1 view .LVU976
 3572 0006 C36C     		ldr	r3, [r0, #76]
 3573 0008 002B     		cmp	r3, #0
 3574 000a 01D1     		bne	.L275
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3575              		.loc 1 4194 4 discriminator 1 view .LVU977
 3576              		.syntax divided
 3577              	@ 4194 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3578 000c 72B6     		 cpsid i 
 3579              	@ 0 "" 2
 3580              		.thumb
 3581              		.syntax unified
 3582              	.L276:
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3583              		.loc 1 4194 4 discriminator 1 view .LVU978
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3584              		.loc 1 4194 4 discriminator 1 view .LVU979
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3585              		.loc 1 4194 4 discriminator 1 view .LVU980
 3586 000e FEE7     		b	.L276
 3587              	.L275:
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3588              		.loc 1 4194 40 discriminator 2 view .LVU981
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccqcX5vb.s 			page 172


 3589              		.loc 1 4200 4 discriminator 2 view .LVU982
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3590              		.loc 1 4200 13 is_stmt 0 discriminator 2 view .LVU983
 3591 0010 826C     		ldr	r2, [r0, #72]
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3592              		.loc 1 4200 6 discriminator 2 view .LVU984
 3593 0012 8A42     		cmp	r2, r1
 3594 0014 00D2     		bcs	.L277
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3595              		.loc 1 4202 21 view .LVU985
 3596 0016 0A00     		movs	r2, r1
 3597              	.L277:
 3598              	.LVL266:
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3599              		.loc 1 4210 4 is_stmt 1 view .LVU986
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3600              		.loc 1 4210 13 is_stmt 0 view .LVU987
 3601 0018 E16A     		ldr	r1, [r4, #44]
 3602              	.LVL267:
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3603              		.loc 1 4210 6 view .LVU988
 3604 001a 9142     		cmp	r1, r2
 3605 001c 01D0     		beq	.L273
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3606              		.loc 1 4216 5 is_stmt 1 view .LVU989
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3607              		.loc 1 4216 7 is_stmt 0 view .LVU990
 3608 001e 012B     		cmp	r3, #1
 3609 0020 00D0     		beq	.L282
 3610              	.LVL268:
 3611              	.L273:
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3612              		.loc 1 4282 2 view .LVU991
 3613              		@ sp needed
 3614              	.LVL269:
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3615              		.loc 1 4282 2 view .LVU992
 3616 0022 70BD     		pop	{r4, r5, r6, pc}
 3617              	.LVL270:
 3618              	.L282:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3619              		.loc 1 4221 6 is_stmt 1 view .LVU993
 3620 0024 144B     		ldr	r3, .L284
 3621 0026 1B68     		ldr	r3, [r3]
 3622 0028 A342     		cmp	r3, r4
 3623 002a 22D0     		beq	.L283
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3624              		.loc 1 4221 43 discriminator 2 view .LVU994
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 3625              		.loc 1 4226 67 discriminator 2 view .LVU995
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 3626              		.loc 1 4227 6 discriminator 2 view .LVU996
 3627              	.LVL271:
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3628              		.loc 1 4228 6 discriminator 2 view .LVU997
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3629              		.loc 1 4228 24 is_stmt 0 discriminator 2 view .LVU998
ARM GAS  /tmp/ccqcX5vb.s 			page 173


 3630 002c E262     		str	r2, [r4, #44]
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3631              		.loc 1 4232 6 is_stmt 1 discriminator 2 view .LVU999
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3632              		.loc 1 4232 8 is_stmt 0 discriminator 2 view .LVU1000
 3633 002e A369     		ldr	r3, [r4, #24]
 3634 0030 002B     		cmp	r3, #0
 3635 0032 02DB     		blt	.L280
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3636              		.loc 1 4234 7 is_stmt 1 view .LVU1001
 3637 0034 0723     		movs	r3, #7
 3638 0036 9A1A     		subs	r2, r3, r2
 3639              	.LVL272:
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3640              		.loc 1 4234 7 is_stmt 0 view .LVU1002
 3641 0038 A261     		str	r2, [r4, #24]
 3642              	.L280:
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3643              		.loc 1 4238 31 is_stmt 1 view .LVU1003
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3644              		.loc 1 4247 6 view .LVU1004
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3645              		.loc 1 4247 10 is_stmt 0 view .LVU1005
 3646 003a 8B00     		lsls	r3, r1, #2
 3647 003c 5B18     		adds	r3, r3, r1
 3648 003e 9B00     		lsls	r3, r3, #2
 3649 0040 0E4A     		ldr	r2, .L284+4
 3650 0042 9B18     		adds	r3, r3, r2
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3651              		.loc 1 4247 8 view .LVU1006
 3652 0044 6269     		ldr	r2, [r4, #20]
 3653 0046 9A42     		cmp	r2, r3
 3654 0048 EBD1     		bne	.L273
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 3655              		.loc 1 4249 7 is_stmt 1 view .LVU1007
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 3656              		.loc 1 4249 11 is_stmt 0 view .LVU1008
 3657 004a 251D     		adds	r5, r4, #4
 3658 004c 2800     		movs	r0, r5
 3659              	.LVL273:
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 3660              		.loc 1 4249 11 view .LVU1009
 3661 004e FFF7FEFF 		bl	uxListRemove
 3662              	.LVL274:
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 3663              		.loc 1 4258 32 is_stmt 1 view .LVU1010
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3664              		.loc 1 4261 7 view .LVU1011
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3665              		.loc 1 4261 7 view .LVU1012
 3666 0052 E36A     		ldr	r3, [r4, #44]
 3667 0054 0A4A     		ldr	r2, .L284+8
 3668 0056 1268     		ldr	r2, [r2]
 3669 0058 9342     		cmp	r3, r2
 3670 005a 01D9     		bls	.L281
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3671              		.loc 1 4261 7 discriminator 1 view .LVU1013
ARM GAS  /tmp/ccqcX5vb.s 			page 174


 3672 005c 084A     		ldr	r2, .L284+8
 3673 005e 1360     		str	r3, [r2]
 3674              	.L281:
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3675              		.loc 1 4261 7 discriminator 3 view .LVU1014
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3676              		.loc 1 4261 7 discriminator 3 view .LVU1015
 3677 0060 9800     		lsls	r0, r3, #2
 3678 0062 C018     		adds	r0, r0, r3
 3679 0064 8000     		lsls	r0, r0, #2
 3680 0066 054B     		ldr	r3, .L284+4
 3681 0068 C018     		adds	r0, r0, r3
 3682 006a 2900     		movs	r1, r5
 3683 006c FFF7FEFF 		bl	vListInsertEnd
 3684              	.LVL275:
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3685              		.loc 1 4261 37 discriminator 3 view .LVU1016
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3686              		.loc 1 4280 28 discriminator 3 view .LVU1017
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3687              		.loc 1 4282 2 is_stmt 0 discriminator 3 view .LVU1018
 3688 0070 D7E7     		b	.L273
 3689              	.LVL276:
 3690              	.L283:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3691              		.loc 1 4221 6 is_stmt 1 discriminator 1 view .LVU1019
 3692              		.syntax divided
 3693              	@ 4221 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3694 0072 72B6     		 cpsid i 
 3695              	@ 0 "" 2
 3696              		.thumb
 3697              		.syntax unified
 3698              	.L279:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3699              		.loc 1 4221 6 discriminator 2 view .LVU1020
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3700              		.loc 1 4221 6 discriminator 2 view .LVU1021
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3701              		.loc 1 4221 6 discriminator 2 view .LVU1022
 3702 0074 FEE7     		b	.L279
 3703              	.L285:
 3704 0076 C046     		.align	2
 3705              	.L284:
 3706 0078 00000000 		.word	.LANCHOR7
 3707 007c 00000000 		.word	pxReadyTasksLists
 3708 0080 00000000 		.word	.LANCHOR10
 3709              		.cfi_endproc
 3710              	.LFE34:
 3712              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 3713              		.align	1
 3714              		.global	uxTaskResetEventItemValue
 3715              		.syntax unified
 3716              		.code	16
 3717              		.thumb_func
 3719              	uxTaskResetEventItemValue:
 3720              	.LFB35:
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
ARM GAS  /tmp/ccqcX5vb.s 			page 175


 3721              		.loc 1 4603 1 view -0
 3722              		.cfi_startproc
 3723              		@ args = 0, pretend = 0, frame = 0
 3724              		@ frame_needed = 0, uses_anonymous_args = 0
 3725              		@ link register save eliminated.
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3726              		.loc 1 4604 1 view .LVU1024
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3727              		.loc 1 4606 2 view .LVU1025
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3728              		.loc 1 4606 13 is_stmt 0 view .LVU1026
 3729 0000 044A     		ldr	r2, .L287
 3730 0002 1368     		ldr	r3, [r2]
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3731              		.loc 1 4606 11 view .LVU1027
 3732 0004 9869     		ldr	r0, [r3, #24]
 3733              	.LVL277:
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3734              		.loc 1 4610 2 is_stmt 1 view .LVU1028
 3735 0006 1368     		ldr	r3, [r2]
 3736 0008 D96A     		ldr	r1, [r3, #44]
 3737 000a 1268     		ldr	r2, [r2]
 3738 000c 0723     		movs	r3, #7
 3739 000e 5B1A     		subs	r3, r3, r1
 3740 0010 9361     		str	r3, [r2, #24]
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3741              		.loc 1 4612 2 view .LVU1029
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3742              		.loc 1 4613 1 is_stmt 0 view .LVU1030
 3743              		@ sp needed
 3744 0012 7047     		bx	lr
 3745              	.L288:
 3746              		.align	2
 3747              	.L287:
 3748 0014 00000000 		.word	.LANCHOR7
 3749              		.cfi_endproc
 3750              	.LFE35:
 3752              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 3753              		.align	1
 3754              		.global	pvTaskIncrementMutexHeldCount
 3755              		.syntax unified
 3756              		.code	16
 3757              		.thumb_func
 3759              	pvTaskIncrementMutexHeldCount:
 3760              	.LFB36:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 3761              		.loc 1 4619 2 is_stmt 1 view -0
 3762              		.cfi_startproc
 3763              		@ args = 0, pretend = 0, frame = 0
 3764              		@ frame_needed = 0, uses_anonymous_args = 0
 3765              		@ link register save eliminated.
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3766              		.loc 1 4622 3 view .LVU1032
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3767              		.loc 1 4622 20 is_stmt 0 view .LVU1033
 3768 0000 054B     		ldr	r3, .L291
 3769 0002 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccqcX5vb.s 			page 176


4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3770              		.loc 1 4622 5 view .LVU1034
 3771 0004 002B     		cmp	r3, #0
 3772 0006 04D0     		beq	.L290
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3773              		.loc 1 4624 4 is_stmt 1 view .LVU1035
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3774              		.loc 1 4624 18 is_stmt 0 view .LVU1036
 3775 0008 034B     		ldr	r3, .L291
 3776 000a 1A68     		ldr	r2, [r3]
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3777              		.loc 1 4624 35 view .LVU1037
 3778 000c D36C     		ldr	r3, [r2, #76]
 3779 000e 0133     		adds	r3, r3, #1
 3780 0010 D364     		str	r3, [r2, #76]
 3781              	.L290:
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3782              		.loc 1 4627 3 is_stmt 1 view .LVU1038
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3783              		.loc 1 4627 10 is_stmt 0 view .LVU1039
 3784 0012 014B     		ldr	r3, .L291
 3785 0014 1868     		ldr	r0, [r3]
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3786              		.loc 1 4628 2 view .LVU1040
 3787              		@ sp needed
 3788 0016 7047     		bx	lr
 3789              	.L292:
 3790              		.align	2
 3791              	.L291:
 3792 0018 00000000 		.word	.LANCHOR7
 3793              		.cfi_endproc
 3794              	.LFE36:
 3796              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 3797              		.align	1
 3798              		.global	ulTaskNotifyTake
 3799              		.syntax unified
 3800              		.code	16
 3801              		.thumb_func
 3803              	ulTaskNotifyTake:
 3804              	.LVL278:
 3805              	.LFB37:
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 3806              		.loc 1 4636 2 is_stmt 1 view -0
 3807              		.cfi_startproc
 3808              		@ args = 0, pretend = 0, frame = 0
 3809              		@ frame_needed = 0, uses_anonymous_args = 0
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 3810              		.loc 1 4636 2 is_stmt 0 view .LVU1042
 3811 0000 70B5     		push	{r4, r5, r6, lr}
 3812              	.LCFI27:
 3813              		.cfi_def_cfa_offset 16
 3814              		.cfi_offset 4, -16
 3815              		.cfi_offset 5, -12
 3816              		.cfi_offset 6, -8
 3817              		.cfi_offset 14, -4
 3818 0002 0500     		movs	r5, r0
 3819 0004 0C00     		movs	r4, r1
ARM GAS  /tmp/ccqcX5vb.s 			page 177


4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3820              		.loc 1 4637 2 is_stmt 1 view .LVU1043
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3821              		.loc 1 4639 3 view .LVU1044
 3822 0006 FFF7FEFF 		bl	vPortEnterCritical
 3823              	.LVL279:
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3824              		.loc 1 4642 4 view .LVU1045
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3825              		.loc 1 4642 20 is_stmt 0 view .LVU1046
 3826 000a 1B4B     		ldr	r3, .L298
 3827 000c 1A68     		ldr	r2, [r3]
 3828 000e 8F23     		movs	r3, #143
 3829 0010 DB00     		lsls	r3, r3, #3
 3830 0012 D358     		ldr	r3, [r2, r3]
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3831              		.loc 1 4642 6 view .LVU1047
 3832 0014 002B     		cmp	r3, #0
 3833 0016 06D1     		bne	.L294
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3834              		.loc 1 4645 5 is_stmt 1 view .LVU1048
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3835              		.loc 1 4645 17 is_stmt 0 view .LVU1049
 3836 0018 174B     		ldr	r3, .L298
 3837 001a 1A68     		ldr	r2, [r3]
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3838              		.loc 1 4645 33 view .LVU1050
 3839 001c 174B     		ldr	r3, .L298+4
 3840 001e 0121     		movs	r1, #1
 3841 0020 D154     		strb	r1, [r2, r3]
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3842              		.loc 1 4647 5 is_stmt 1 view .LVU1051
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3843              		.loc 1 4647 7 is_stmt 0 view .LVU1052
 3844 0022 002C     		cmp	r4, #0
 3845 0024 1BD1     		bne	.L297
 3846              	.L294:
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3847              		.loc 1 4665 29 is_stmt 1 view .LVU1053
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3848              		.loc 1 4668 3 view .LVU1054
 3849 0026 FFF7FEFF 		bl	vPortExitCritical
 3850              	.LVL280:
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3851              		.loc 1 4670 3 view .LVU1055
 3852 002a FFF7FEFF 		bl	vPortEnterCritical
 3853              	.LVL281:
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 3854              		.loc 1 4672 27 view .LVU1056
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3855              		.loc 1 4673 4 view .LVU1057
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3856              		.loc 1 4673 27 is_stmt 0 view .LVU1058
 3857 002e 124B     		ldr	r3, .L298
 3858 0030 1A68     		ldr	r2, [r3]
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3859              		.loc 1 4673 13 view .LVU1059
ARM GAS  /tmp/ccqcX5vb.s 			page 178


 3860 0032 8F23     		movs	r3, #143
 3861 0034 DB00     		lsls	r3, r3, #3
 3862 0036 D458     		ldr	r4, [r2, r3]
 3863              	.LVL282:
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3864              		.loc 1 4675 4 is_stmt 1 view .LVU1060
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3865              		.loc 1 4675 6 is_stmt 0 view .LVU1061
 3866 0038 002C     		cmp	r4, #0
 3867 003a 07D0     		beq	.L295
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3868              		.loc 1 4677 5 is_stmt 1 view .LVU1062
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3869              		.loc 1 4677 7 is_stmt 0 view .LVU1063
 3870 003c 002D     		cmp	r5, #0
 3871 003e 14D0     		beq	.L296
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3872              		.loc 1 4679 6 is_stmt 1 view .LVU1064
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3873              		.loc 1 4679 18 is_stmt 0 view .LVU1065
 3874 0040 0D4B     		ldr	r3, .L298
 3875 0042 1A68     		ldr	r2, [r3]
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3876              		.loc 1 4679 36 view .LVU1066
 3877 0044 8F23     		movs	r3, #143
 3878 0046 DB00     		lsls	r3, r3, #3
 3879 0048 0021     		movs	r1, #0
 3880 004a D150     		str	r1, [r2, r3]
 3881              	.L295:
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3882              		.loc 1 4688 29 is_stmt 1 view .LVU1067
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3883              		.loc 1 4691 4 view .LVU1068
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3884              		.loc 1 4691 16 is_stmt 0 view .LVU1069
 3885 004c 0A4B     		ldr	r3, .L298
 3886 004e 1A68     		ldr	r2, [r3]
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3887              		.loc 1 4691 32 view .LVU1070
 3888 0050 0A4B     		ldr	r3, .L298+4
 3889 0052 0021     		movs	r1, #0
 3890 0054 D154     		strb	r1, [r2, r3]
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3891              		.loc 1 4693 3 is_stmt 1 view .LVU1071
 3892 0056 FFF7FEFF 		bl	vPortExitCritical
 3893              	.LVL283:
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3894              		.loc 1 4695 3 view .LVU1072
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3895              		.loc 1 4696 2 is_stmt 0 view .LVU1073
 3896 005a 2000     		movs	r0, r4
 3897              		@ sp needed
 3898              	.LVL284:
 3899              	.LVL285:
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3900              		.loc 1 4696 2 view .LVU1074
 3901 005c 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccqcX5vb.s 			page 179


 3902              	.LVL286:
 3903              	.L297:
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 3904              		.loc 1 4649 6 is_stmt 1 view .LVU1075
 3905 005e 2000     		movs	r0, r4
 3906 0060 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3907              	.LVL287:
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3908              		.loc 1 4650 35 view .LVU1076
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3909              		.loc 1 4656 6 view .LVU1077
 3910 0064 FFF7FEFF 		bl	vPortYield
 3911              	.LVL288:
 3912 0068 DDE7     		b	.L294
 3913              	.LVL289:
 3914              	.L296:
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3915              		.loc 1 4683 6 view .LVU1078
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3916              		.loc 1 4683 18 is_stmt 0 view .LVU1079
 3917 006a 034B     		ldr	r3, .L298
 3918 006c 1968     		ldr	r1, [r3]
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3919              		.loc 1 4683 47 view .LVU1080
 3920 006e 631E     		subs	r3, r4, #1
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3921              		.loc 1 4683 36 view .LVU1081
 3922 0070 8F22     		movs	r2, #143
 3923 0072 D200     		lsls	r2, r2, #3
 3924 0074 8B50     		str	r3, [r1, r2]
 3925 0076 E9E7     		b	.L295
 3926              	.L299:
 3927              		.align	2
 3928              	.L298:
 3929 0078 00000000 		.word	.LANCHOR7
 3930 007c 7C040000 		.word	1148
 3931              		.cfi_endproc
 3932              	.LFE37:
 3934              		.section	.text.xTaskNotifyWait,"ax",%progbits
 3935              		.align	1
 3936              		.global	xTaskNotifyWait
 3937              		.syntax unified
 3938              		.code	16
 3939              		.thumb_func
 3941              	xTaskNotifyWait:
 3942              	.LVL290:
 3943              	.LFB38:
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 3944              		.loc 1 4704 2 is_stmt 1 view -0
 3945              		.cfi_startproc
 3946              		@ args = 0, pretend = 0, frame = 0
 3947              		@ frame_needed = 0, uses_anonymous_args = 0
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 3948              		.loc 1 4704 2 is_stmt 0 view .LVU1083
 3949 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3950              	.LCFI28:
 3951              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccqcX5vb.s 			page 180


 3952              		.cfi_offset 3, -24
 3953              		.cfi_offset 4, -20
 3954              		.cfi_offset 5, -16
 3955              		.cfi_offset 6, -12
 3956              		.cfi_offset 7, -8
 3957              		.cfi_offset 14, -4
 3958 0002 0600     		movs	r6, r0
 3959 0004 0F00     		movs	r7, r1
 3960 0006 1400     		movs	r4, r2
 3961 0008 1D00     		movs	r5, r3
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3962              		.loc 1 4705 2 is_stmt 1 view .LVU1084
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3963              		.loc 1 4707 3 view .LVU1085
 3964 000a FFF7FEFF 		bl	vPortEnterCritical
 3965              	.LVL291:
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3966              		.loc 1 4710 4 view .LVU1086
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3967              		.loc 1 4710 20 is_stmt 0 view .LVU1087
 3968 000e 1F4B     		ldr	r3, .L307
 3969 0010 1A68     		ldr	r2, [r3]
 3970 0012 1F4B     		ldr	r3, .L307+4
 3971 0014 D35C     		ldrb	r3, [r2, r3]
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3972              		.loc 1 4710 6 view .LVU1088
 3973 0016 022B     		cmp	r3, #2
 3974 0018 0CD0     		beq	.L301
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3975              		.loc 1 4715 5 is_stmt 1 view .LVU1089
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3976              		.loc 1 4715 35 is_stmt 0 view .LVU1090
 3977 001a 1C4A     		ldr	r2, .L307
 3978 001c 1068     		ldr	r0, [r2]
 3979 001e 8F21     		movs	r1, #143
 3980 0020 C900     		lsls	r1, r1, #3
 3981 0022 4358     		ldr	r3, [r0, r1]
 3982 0024 B343     		bics	r3, r6
 3983 0026 4350     		str	r3, [r0, r1]
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3984              		.loc 1 4718 5 is_stmt 1 view .LVU1091
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3985              		.loc 1 4718 17 is_stmt 0 view .LVU1092
 3986 0028 1268     		ldr	r2, [r2]
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3987              		.loc 1 4718 33 view .LVU1093
 3988 002a 194B     		ldr	r3, .L307+4
 3989 002c 0121     		movs	r1, #1
 3990 002e D154     		strb	r1, [r2, r3]
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3991              		.loc 1 4720 5 is_stmt 1 view .LVU1094
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3992              		.loc 1 4720 7 is_stmt 0 view .LVU1095
 3993 0030 002D     		cmp	r5, #0
 3994 0032 1BD1     		bne	.L305
 3995              	.L301:
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccqcX5vb.s 			page 181


 3996              		.loc 1 4738 29 is_stmt 1 view .LVU1096
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3997              		.loc 1 4741 3 view .LVU1097
 3998 0034 FFF7FEFF 		bl	vPortExitCritical
 3999              	.LVL292:
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4000              		.loc 1 4743 3 view .LVU1098
 4001 0038 FFF7FEFF 		bl	vPortEnterCritical
 4002              	.LVL293:
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4003              		.loc 1 4745 27 view .LVU1099
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4004              		.loc 1 4747 4 view .LVU1100
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4005              		.loc 1 4747 6 is_stmt 0 view .LVU1101
 4006 003c 002C     		cmp	r4, #0
 4007 003e 05D0     		beq	.L302
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4008              		.loc 1 4751 5 is_stmt 1 view .LVU1102
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4009              		.loc 1 4751 41 is_stmt 0 view .LVU1103
 4010 0040 124B     		ldr	r3, .L307
 4011 0042 1A68     		ldr	r2, [r3]
 4012 0044 8F23     		movs	r3, #143
 4013 0046 DB00     		lsls	r3, r3, #3
 4014 0048 D358     		ldr	r3, [r2, r3]
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4015              		.loc 1 4751 27 view .LVU1104
 4016 004a 2360     		str	r3, [r4]
 4017              	.L302:
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4018              		.loc 1 4758 4 is_stmt 1 view .LVU1105
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4019              		.loc 1 4758 20 is_stmt 0 view .LVU1106
 4020 004c 0F4B     		ldr	r3, .L307
 4021 004e 1A68     		ldr	r2, [r3]
 4022 0050 0F4B     		ldr	r3, .L307+4
 4023 0052 D35C     		ldrb	r3, [r2, r3]
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4024              		.loc 1 4758 6 view .LVU1107
 4025 0054 022B     		cmp	r3, #2
 4026 0056 0FD0     		beq	.L306
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4027              		.loc 1 4761 13 view .LVU1108
 4028 0058 0024     		movs	r4, #0
 4029              	.LVL294:
 4030              	.L303:
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4031              		.loc 1 4771 4 is_stmt 1 view .LVU1109
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4032              		.loc 1 4771 16 is_stmt 0 view .LVU1110
 4033 005a 0C4B     		ldr	r3, .L307
 4034 005c 1A68     		ldr	r2, [r3]
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4035              		.loc 1 4771 32 view .LVU1111
 4036 005e 0C4B     		ldr	r3, .L307+4
 4037 0060 0021     		movs	r1, #0
ARM GAS  /tmp/ccqcX5vb.s 			page 182


 4038 0062 D154     		strb	r1, [r2, r3]
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4039              		.loc 1 4773 3 is_stmt 1 view .LVU1112
 4040 0064 FFF7FEFF 		bl	vPortExitCritical
 4041              	.LVL295:
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4042              		.loc 1 4775 3 view .LVU1113
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4043              		.loc 1 4776 2 is_stmt 0 view .LVU1114
 4044 0068 2000     		movs	r0, r4
 4045              		@ sp needed
 4046              	.LVL296:
 4047              	.LVL297:
 4048              	.LVL298:
 4049              	.LVL299:
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4050              		.loc 1 4776 2 view .LVU1115
 4051 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4052              	.LVL300:
 4053              	.L305:
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 4054              		.loc 1 4722 6 is_stmt 1 view .LVU1116
 4055 006c 2800     		movs	r0, r5
 4056 006e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4057              	.LVL301:
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4058              		.loc 1 4723 35 view .LVU1117
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4059              		.loc 1 4729 6 view .LVU1118
 4060 0072 FFF7FEFF 		bl	vPortYield
 4061              	.LVL302:
 4062 0076 DDE7     		b	.L301
 4063              	.L306:
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 4064              		.loc 1 4767 5 view .LVU1119
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 4065              		.loc 1 4767 35 is_stmt 0 view .LVU1120
 4066 0078 044B     		ldr	r3, .L307
 4067 007a 1968     		ldr	r1, [r3]
 4068 007c 8F22     		movs	r2, #143
 4069 007e D200     		lsls	r2, r2, #3
 4070 0080 8B58     		ldr	r3, [r1, r2]
 4071 0082 BB43     		bics	r3, r7
 4072 0084 8B50     		str	r3, [r1, r2]
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4073              		.loc 1 4768 5 is_stmt 1 view .LVU1121
 4074              	.LVL303:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4075              		.loc 1 4768 13 is_stmt 0 view .LVU1122
 4076 0086 0124     		movs	r4, #1
 4077              	.LVL304:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4078              		.loc 1 4768 13 view .LVU1123
 4079 0088 E7E7     		b	.L303
 4080              	.L308:
 4081 008a C046     		.align	2
 4082              	.L307:
ARM GAS  /tmp/ccqcX5vb.s 			page 183


 4083 008c 00000000 		.word	.LANCHOR7
 4084 0090 7C040000 		.word	1148
 4085              		.cfi_endproc
 4086              	.LFE38:
 4088              		.section	.text.xTaskGenericNotify,"ax",%progbits
 4089              		.align	1
 4090              		.global	xTaskGenericNotify
 4091              		.syntax unified
 4092              		.code	16
 4093              		.thumb_func
 4095              	xTaskGenericNotify:
 4096              	.LVL305:
 4097              	.LFB39:
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4098              		.loc 1 4784 2 is_stmt 1 view -0
 4099              		.cfi_startproc
 4100              		@ args = 0, pretend = 0, frame = 0
 4101              		@ frame_needed = 0, uses_anonymous_args = 0
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4102              		.loc 1 4784 2 is_stmt 0 view .LVU1125
 4103 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4104              	.LCFI29:
 4105              		.cfi_def_cfa_offset 24
 4106              		.cfi_offset 3, -24
 4107              		.cfi_offset 4, -20
 4108              		.cfi_offset 5, -16
 4109              		.cfi_offset 6, -12
 4110              		.cfi_offset 7, -8
 4111              		.cfi_offset 14, -4
 4112 0002 0400     		movs	r4, r0
 4113 0004 0E00     		movs	r6, r1
 4114 0006 1500     		movs	r5, r2
 4115 0008 1F00     		movs	r7, r3
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 4116              		.loc 1 4785 2 is_stmt 1 view .LVU1126
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4117              		.loc 1 4786 2 view .LVU1127
 4118              	.LVL306:
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4119              		.loc 1 4787 2 view .LVU1128
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 4120              		.loc 1 4789 3 view .LVU1129
 4121 000a 0028     		cmp	r0, #0
 4122 000c 12D0     		beq	.L328
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 4123              		.loc 1 4789 32 discriminator 2 view .LVU1130
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4124              		.loc 1 4790 3 discriminator 2 view .LVU1131
 4125              	.LVL307:
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4126              		.loc 1 4792 3 discriminator 2 view .LVU1132
 4127 000e FFF7FEFF 		bl	vPortEnterCritical
 4128              	.LVL308:
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4129              		.loc 1 4794 4 discriminator 2 view .LVU1133
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4130              		.loc 1 4794 6 is_stmt 0 discriminator 2 view .LVU1134
ARM GAS  /tmp/ccqcX5vb.s 			page 184


 4131 0012 002F     		cmp	r7, #0
 4132 0014 03D0     		beq	.L312
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4133              		.loc 1 4796 5 is_stmt 1 view .LVU1135
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4134              		.loc 1 4796 42 is_stmt 0 view .LVU1136
 4135 0016 8F23     		movs	r3, #143
 4136 0018 DB00     		lsls	r3, r3, #3
 4137 001a E358     		ldr	r3, [r4, r3]
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4138              		.loc 1 4796 35 view .LVU1137
 4139 001c 3B60     		str	r3, [r7]
 4140              	.L312:
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4141              		.loc 1 4799 4 is_stmt 1 view .LVU1138
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4142              		.loc 1 4799 26 is_stmt 0 view .LVU1139
 4143 001e 2D4A     		ldr	r2, .L330
 4144 0020 A35C     		ldrb	r3, [r4, r2]
 4145 0022 DBB2     		uxtb	r3, r3
 4146              	.LVL309:
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4147              		.loc 1 4801 4 is_stmt 1 view .LVU1140
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4148              		.loc 1 4801 25 is_stmt 0 view .LVU1141
 4149 0024 0221     		movs	r1, #2
 4150 0026 A154     		strb	r1, [r4, r2]
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4151              		.loc 1 4803 4 is_stmt 1 view .LVU1142
 4152 0028 042D     		cmp	r5, #4
 4153 002a 1FD8     		bhi	.L313
 4154 002c AD00     		lsls	r5, r5, #2
 4155 002e 2A4A     		ldr	r2, .L330+4
 4156 0030 5259     		ldr	r2, [r2, r5]
 4157 0032 9746     		mov	pc, r2
 4158              		.section	.rodata.xTaskGenericNotify,"a",%progbits
 4159              		.align	2
 4160              	.L315:
 4161 0000 7A000000 		.word	.L325
 4162 0004 38000000 		.word	.L318
 4163 0008 46000000 		.word	.L317
 4164 000c 54000000 		.word	.L316
 4165 0010 5E000000 		.word	.L314
 4166              		.section	.text.xTaskGenericNotify
 4167              	.LVL310:
 4168              	.L328:
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 4169              		.loc 1 4789 3 discriminator 1 view .LVU1143
 4170              		.syntax divided
 4171              	@ 4789 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4172 0034 72B6     		 cpsid i 
 4173              	@ 0 "" 2
 4174              		.thumb
 4175              		.syntax unified
 4176              	.L311:
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 4177              		.loc 1 4789 3 discriminator 1 view .LVU1144
ARM GAS  /tmp/ccqcX5vb.s 			page 185


4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 4178              		.loc 1 4789 3 discriminator 1 view .LVU1145
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 4179              		.loc 1 4789 3 discriminator 1 view .LVU1146
 4180 0036 FEE7     		b	.L311
 4181              	.LVL311:
 4182              	.L318:
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4183              		.loc 1 4806 6 view .LVU1147
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4184              		.loc 1 4806 29 is_stmt 0 view .LVU1148
 4185 0038 8F21     		movs	r1, #143
 4186 003a C900     		lsls	r1, r1, #3
 4187 003c 6258     		ldr	r2, [r4, r1]
 4188 003e 1643     		orrs	r6, r2
 4189              	.LVL312:
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4190              		.loc 1 4806 29 view .LVU1149
 4191 0040 6650     		str	r6, [r4, r1]
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4192              		.loc 1 4807 6 is_stmt 1 view .LVU1150
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4193              		.loc 1 4786 13 is_stmt 0 view .LVU1151
 4194 0042 0125     		movs	r5, #1
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4195              		.loc 1 4807 6 view .LVU1152
 4196 0044 1AE0     		b	.L319
 4197              	.LVL313:
 4198              	.L317:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4199              		.loc 1 4810 6 is_stmt 1 view .LVU1153
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4200              		.loc 1 4810 13 is_stmt 0 view .LVU1154
 4201 0046 8F21     		movs	r1, #143
 4202 0048 C900     		lsls	r1, r1, #3
 4203 004a 6258     		ldr	r2, [r4, r1]
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4204              		.loc 1 4810 32 view .LVU1155
 4205 004c 0132     		adds	r2, r2, #1
 4206 004e 6250     		str	r2, [r4, r1]
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4207              		.loc 1 4811 6 is_stmt 1 view .LVU1156
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4208              		.loc 1 4786 13 is_stmt 0 view .LVU1157
 4209 0050 0125     		movs	r5, #1
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4210              		.loc 1 4811 6 view .LVU1158
 4211 0052 13E0     		b	.L319
 4212              	.L316:
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4213              		.loc 1 4814 6 is_stmt 1 view .LVU1159
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4214              		.loc 1 4814 29 is_stmt 0 view .LVU1160
 4215 0054 8F22     		movs	r2, #143
 4216 0056 D200     		lsls	r2, r2, #3
 4217 0058 A650     		str	r6, [r4, r2]
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccqcX5vb.s 			page 186


 4218              		.loc 1 4815 6 is_stmt 1 view .LVU1161
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4219              		.loc 1 4786 13 is_stmt 0 view .LVU1162
 4220 005a 0125     		movs	r5, #1
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4221              		.loc 1 4815 6 view .LVU1163
 4222 005c 0EE0     		b	.L319
 4223              	.L314:
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4224              		.loc 1 4818 6 is_stmt 1 view .LVU1164
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4225              		.loc 1 4818 8 is_stmt 0 view .LVU1165
 4226 005e 022B     		cmp	r3, #2
 4227 0060 12D0     		beq	.L326
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4228              		.loc 1 4820 7 is_stmt 1 view .LVU1166
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4229              		.loc 1 4820 30 is_stmt 0 view .LVU1167
 4230 0062 8F22     		movs	r2, #143
 4231 0064 D200     		lsls	r2, r2, #3
 4232 0066 A650     		str	r6, [r4, r2]
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4233              		.loc 1 4786 13 view .LVU1168
 4234 0068 0125     		movs	r5, #1
 4235 006a 07E0     		b	.L319
 4236              	.L313:
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4237              		.loc 1 4838 6 is_stmt 1 view .LVU1169
 4238 006c 8F22     		movs	r2, #143
 4239 006e D200     		lsls	r2, r2, #3
 4240 0070 A258     		ldr	r2, [r4, r2]
 4241 0072 0132     		adds	r2, r2, #1
 4242 0074 0AD0     		beq	.L327
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4243              		.loc 1 4838 6 discriminator 1 view .LVU1170
 4244              		.syntax divided
 4245              	@ 4838 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4246 0076 72B6     		 cpsid i 
 4247              	@ 0 "" 2
 4248              		.thumb
 4249              		.syntax unified
 4250              	.L320:
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4251              		.loc 1 4838 6 discriminator 2 view .LVU1171
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4252              		.loc 1 4838 6 discriminator 2 view .LVU1172
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4253              		.loc 1 4838 6 discriminator 2 view .LVU1173
 4254 0078 FEE7     		b	.L320
 4255              	.L325:
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4256              		.loc 1 4803 4 is_stmt 0 view .LVU1174
 4257 007a 0125     		movs	r5, #1
 4258              	.LVL314:
 4259              	.L319:
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4260              		.loc 1 4843 22 is_stmt 1 view .LVU1175
ARM GAS  /tmp/ccqcX5vb.s 			page 187


4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4261              		.loc 1 4847 4 view .LVU1176
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4262              		.loc 1 4847 6 is_stmt 0 view .LVU1177
 4263 007c 012B     		cmp	r3, #1
 4264 007e 07D0     		beq	.L329
 4265              	.LVL315:
 4266              	.L321:
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4267              		.loc 1 4884 29 is_stmt 1 view .LVU1178
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4268              		.loc 1 4887 3 view .LVU1179
 4269 0080 FFF7FEFF 		bl	vPortExitCritical
 4270              	.LVL316:
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4271              		.loc 1 4889 3 view .LVU1180
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4272              		.loc 1 4890 2 is_stmt 0 view .LVU1181
 4273 0084 2800     		movs	r0, r5
 4274              		@ sp needed
 4275              	.LVL317:
 4276              	.LVL318:
 4277              	.LVL319:
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4278              		.loc 1 4890 2 view .LVU1182
 4279 0086 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4280              	.LVL320:
 4281              	.L326:
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4282              		.loc 1 4825 15 view .LVU1183
 4283 0088 0025     		movs	r5, #0
 4284 008a F7E7     		b	.L319
 4285              	.L327:
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4286              		.loc 1 4786 13 view .LVU1184
 4287 008c 0125     		movs	r5, #1
 4288 008e F5E7     		b	.L319
 4289              	.LVL321:
 4290              	.L329:
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 4291              		.loc 1 4849 5 is_stmt 1 view .LVU1185
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 4292              		.loc 1 4849 14 is_stmt 0 view .LVU1186
 4293 0090 261D     		adds	r6, r4, #4
 4294 0092 3000     		movs	r0, r6
 4295 0094 FFF7FEFF 		bl	uxListRemove
 4296              	.LVL322:
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4297              		.loc 1 4850 5 is_stmt 1 view .LVU1187
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4298              		.loc 1 4850 5 view .LVU1188
 4299 0098 E36A     		ldr	r3, [r4, #44]
 4300 009a 104A     		ldr	r2, .L330+8
 4301 009c 1268     		ldr	r2, [r2]
 4302 009e 9342     		cmp	r3, r2
 4303 00a0 01D9     		bls	.L322
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccqcX5vb.s 			page 188


 4304              		.loc 1 4850 5 discriminator 1 view .LVU1189
 4305 00a2 0E4A     		ldr	r2, .L330+8
 4306 00a4 1360     		str	r3, [r2]
 4307              	.L322:
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4308              		.loc 1 4850 5 discriminator 3 view .LVU1190
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4309              		.loc 1 4850 5 discriminator 3 view .LVU1191
 4310 00a6 9800     		lsls	r0, r3, #2
 4311 00a8 C018     		adds	r0, r0, r3
 4312 00aa 8000     		lsls	r0, r0, #2
 4313 00ac 0C4B     		ldr	r3, .L330+12
 4314 00ae C018     		adds	r0, r0, r3
 4315 00b0 3100     		movs	r1, r6
 4316 00b2 FFF7FEFF 		bl	vListInsertEnd
 4317              	.LVL323:
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4318              		.loc 1 4850 35 discriminator 3 view .LVU1192
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4319              		.loc 1 4853 5 discriminator 3 view .LVU1193
 4320 00b6 A36A     		ldr	r3, [r4, #40]
 4321 00b8 002B     		cmp	r3, #0
 4322 00ba 01D0     		beq	.L323
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4323              		.loc 1 4853 5 discriminator 1 view .LVU1194
 4324              		.syntax divided
 4325              	@ 4853 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4326 00bc 72B6     		 cpsid i 
 4327              	@ 0 "" 2
 4328              		.thumb
 4329              		.syntax unified
 4330              	.L324:
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4331              		.loc 1 4853 5 discriminator 3 view .LVU1195
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4332              		.loc 1 4853 5 discriminator 3 view .LVU1196
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4333              		.loc 1 4853 5 discriminator 3 view .LVU1197
 4334 00be FEE7     		b	.L324
 4335              	.L323:
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4336              		.loc 1 4853 82 discriminator 2 view .LVU1198
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4337              		.loc 1 4871 5 discriminator 2 view .LVU1199
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4338              		.loc 1 4871 14 is_stmt 0 discriminator 2 view .LVU1200
 4339 00c0 E26A     		ldr	r2, [r4, #44]
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4340              		.loc 1 4871 41 discriminator 2 view .LVU1201
 4341 00c2 084B     		ldr	r3, .L330+16
 4342 00c4 1B68     		ldr	r3, [r3]
 4343 00c6 DB6A     		ldr	r3, [r3, #44]
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4344              		.loc 1 4871 7 discriminator 2 view .LVU1202
 4345 00c8 9A42     		cmp	r2, r3
 4346 00ca D9D9     		bls	.L321
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccqcX5vb.s 			page 189


 4347              		.loc 1 4875 6 is_stmt 1 view .LVU1203
 4348 00cc FFF7FEFF 		bl	vPortYield
 4349              	.LVL324:
 4350 00d0 D6E7     		b	.L321
 4351              	.L331:
 4352 00d2 C046     		.align	2
 4353              	.L330:
 4354 00d4 7C040000 		.word	1148
 4355 00d8 00000000 		.word	.L315
 4356 00dc 00000000 		.word	.LANCHOR10
 4357 00e0 00000000 		.word	pxReadyTasksLists
 4358 00e4 00000000 		.word	.LANCHOR7
 4359              		.cfi_endproc
 4360              	.LFE39:
 4362              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 4363              		.align	1
 4364              		.global	xTaskGenericNotifyFromISR
 4365              		.syntax unified
 4366              		.code	16
 4367              		.thumb_func
 4369              	xTaskGenericNotifyFromISR:
 4370              	.LVL325:
 4371              	.LFB40:
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4372              		.loc 1 4898 2 view -0
 4373              		.cfi_startproc
 4374              		@ args = 4, pretend = 0, frame = 8
 4375              		@ frame_needed = 0, uses_anonymous_args = 0
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4376              		.loc 1 4898 2 is_stmt 0 view .LVU1205
 4377 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4378              	.LCFI30:
 4379              		.cfi_def_cfa_offset 20
 4380              		.cfi_offset 4, -20
 4381              		.cfi_offset 5, -16
 4382              		.cfi_offset 6, -12
 4383              		.cfi_offset 7, -8
 4384              		.cfi_offset 14, -4
 4385 0002 83B0     		sub	sp, sp, #12
 4386              	.LCFI31:
 4387              		.cfi_def_cfa_offset 32
 4388 0004 0400     		movs	r4, r0
 4389 0006 0191     		str	r1, [sp, #4]
 4390 0008 1500     		movs	r5, r2
 4391 000a 1E00     		movs	r6, r3
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4392              		.loc 1 4899 2 is_stmt 1 view .LVU1206
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 4393              		.loc 1 4900 2 view .LVU1207
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4394              		.loc 1 4901 2 view .LVU1208
 4395              	.LVL326:
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4396              		.loc 1 4902 2 view .LVU1209
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4397              		.loc 1 4904 3 view .LVU1210
 4398 000c 0028     		cmp	r0, #0
ARM GAS  /tmp/ccqcX5vb.s 			page 190


 4399 000e 13D0     		beq	.L354
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4400              		.loc 1 4904 32 discriminator 2 view .LVU1211
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4401              		.loc 1 4922 45 discriminator 2 view .LVU1212
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4402              		.loc 1 4924 3 discriminator 2 view .LVU1213
 4403              	.LVL327:
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4404              		.loc 1 4926 3 discriminator 2 view .LVU1214
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4405              		.loc 1 4926 28 is_stmt 0 discriminator 2 view .LVU1215
 4406 0010 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 4407              	.LVL328:
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4408              		.loc 1 4926 28 discriminator 2 view .LVU1216
 4409 0014 0700     		movs	r7, r0
 4410              	.LVL329:
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4411              		.loc 1 4928 4 is_stmt 1 discriminator 2 view .LVU1217
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4412              		.loc 1 4928 6 is_stmt 0 discriminator 2 view .LVU1218
 4413 0016 002E     		cmp	r6, #0
 4414 0018 03D0     		beq	.L335
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4415              		.loc 1 4930 5 is_stmt 1 view .LVU1219
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4416              		.loc 1 4930 42 is_stmt 0 view .LVU1220
 4417 001a 8F23     		movs	r3, #143
 4418 001c DB00     		lsls	r3, r3, #3
 4419 001e E358     		ldr	r3, [r4, r3]
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4420              		.loc 1 4930 35 view .LVU1221
 4421 0020 3360     		str	r3, [r6]
 4422              	.L335:
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4423              		.loc 1 4933 4 is_stmt 1 view .LVU1222
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4424              		.loc 1 4933 26 is_stmt 0 view .LVU1223
 4425 0022 374A     		ldr	r2, .L355
 4426 0024 A35C     		ldrb	r3, [r4, r2]
 4427 0026 DBB2     		uxtb	r3, r3
 4428              	.LVL330:
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4429              		.loc 1 4934 4 is_stmt 1 view .LVU1224
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4430              		.loc 1 4934 25 is_stmt 0 view .LVU1225
 4431 0028 0221     		movs	r1, #2
 4432 002a A154     		strb	r1, [r4, r2]
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4433              		.loc 1 4936 4 is_stmt 1 view .LVU1226
 4434 002c 042D     		cmp	r5, #4
 4435 002e 22D8     		bhi	.L336
 4436 0030 AD00     		lsls	r5, r5, #2
 4437 0032 344A     		ldr	r2, .L355+4
 4438 0034 5259     		ldr	r2, [r2, r5]
 4439 0036 9746     		mov	pc, r2
ARM GAS  /tmp/ccqcX5vb.s 			page 191


 4440              		.section	.rodata.xTaskGenericNotifyFromISR,"a",%progbits
 4441              		.align	2
 4442              	.L338:
 4443 0000 84000000 		.word	.L351
 4444 0004 3C000000 		.word	.L341
 4445 0008 4C000000 		.word	.L340
 4446 000c 5A000000 		.word	.L339
 4447 0010 66000000 		.word	.L337
 4448              		.section	.text.xTaskGenericNotifyFromISR
 4449              	.LVL331:
 4450              	.L354:
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4451              		.loc 1 4904 3 discriminator 1 view .LVU1227
 4452              		.syntax divided
 4453              	@ 4904 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4454 0038 72B6     		 cpsid i 
 4455              	@ 0 "" 2
 4456              		.thumb
 4457              		.syntax unified
 4458              	.L334:
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4459              		.loc 1 4904 3 discriminator 1 view .LVU1228
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4460              		.loc 1 4904 3 discriminator 1 view .LVU1229
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4461              		.loc 1 4904 3 discriminator 1 view .LVU1230
 4462 003a FEE7     		b	.L334
 4463              	.LVL332:
 4464              	.L341:
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4465              		.loc 1 4939 6 view .LVU1231
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4466              		.loc 1 4939 29 is_stmt 0 view .LVU1232
 4467 003c 8F21     		movs	r1, #143
 4468 003e C900     		lsls	r1, r1, #3
 4469 0040 6258     		ldr	r2, [r4, r1]
 4470 0042 019E     		ldr	r6, [sp, #4]
 4471              	.LVL333:
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4472              		.loc 1 4939 29 view .LVU1233
 4473 0044 1643     		orrs	r6, r2
 4474 0046 6650     		str	r6, [r4, r1]
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4475              		.loc 1 4940 6 is_stmt 1 view .LVU1234
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4476              		.loc 1 4901 13 is_stmt 0 view .LVU1235
 4477 0048 0125     		movs	r5, #1
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4478              		.loc 1 4940 6 view .LVU1236
 4479 004a 1CE0     		b	.L342
 4480              	.LVL334:
 4481              	.L340:
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4482              		.loc 1 4943 6 is_stmt 1 view .LVU1237
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4483              		.loc 1 4943 13 is_stmt 0 view .LVU1238
 4484 004c 8F21     		movs	r1, #143
ARM GAS  /tmp/ccqcX5vb.s 			page 192


 4485 004e C900     		lsls	r1, r1, #3
 4486 0050 6258     		ldr	r2, [r4, r1]
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4487              		.loc 1 4943 32 view .LVU1239
 4488 0052 0132     		adds	r2, r2, #1
 4489 0054 6250     		str	r2, [r4, r1]
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4490              		.loc 1 4944 6 is_stmt 1 view .LVU1240
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4491              		.loc 1 4901 13 is_stmt 0 view .LVU1241
 4492 0056 0125     		movs	r5, #1
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4493              		.loc 1 4944 6 view .LVU1242
 4494 0058 15E0     		b	.L342
 4495              	.L339:
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4496              		.loc 1 4947 6 is_stmt 1 view .LVU1243
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4497              		.loc 1 4947 29 is_stmt 0 view .LVU1244
 4498 005a 8F22     		movs	r2, #143
 4499 005c D200     		lsls	r2, r2, #3
 4500 005e 0199     		ldr	r1, [sp, #4]
 4501 0060 A150     		str	r1, [r4, r2]
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4502              		.loc 1 4948 6 is_stmt 1 view .LVU1245
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4503              		.loc 1 4901 13 is_stmt 0 view .LVU1246
 4504 0062 0125     		movs	r5, #1
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4505              		.loc 1 4948 6 view .LVU1247
 4506 0064 0FE0     		b	.L342
 4507              	.L337:
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4508              		.loc 1 4951 6 is_stmt 1 view .LVU1248
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4509              		.loc 1 4951 8 is_stmt 0 view .LVU1249
 4510 0066 022B     		cmp	r3, #2
 4511 0068 14D0     		beq	.L352
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4512              		.loc 1 4953 7 is_stmt 1 view .LVU1250
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4513              		.loc 1 4953 30 is_stmt 0 view .LVU1251
 4514 006a 8F22     		movs	r2, #143
 4515 006c D200     		lsls	r2, r2, #3
 4516 006e 0199     		ldr	r1, [sp, #4]
 4517 0070 A150     		str	r1, [r4, r2]
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4518              		.loc 1 4901 13 view .LVU1252
 4519 0072 0125     		movs	r5, #1
 4520 0074 07E0     		b	.L342
 4521              	.L336:
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4522              		.loc 1 4971 6 is_stmt 1 view .LVU1253
 4523 0076 8F22     		movs	r2, #143
 4524 0078 D200     		lsls	r2, r2, #3
 4525 007a A258     		ldr	r2, [r4, r2]
 4526 007c 0132     		adds	r2, r2, #1
ARM GAS  /tmp/ccqcX5vb.s 			page 193


 4527 007e 0BD0     		beq	.L353
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4528              		.loc 1 4971 6 discriminator 1 view .LVU1254
 4529              		.syntax divided
 4530              	@ 4971 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4531 0080 72B6     		 cpsid i 
 4532              	@ 0 "" 2
 4533              		.thumb
 4534              		.syntax unified
 4535              	.L343:
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4536              		.loc 1 4971 6 discriminator 2 view .LVU1255
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4537              		.loc 1 4971 6 discriminator 2 view .LVU1256
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4538              		.loc 1 4971 6 discriminator 2 view .LVU1257
 4539 0082 FEE7     		b	.L343
 4540              	.L351:
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4541              		.loc 1 4936 4 is_stmt 0 view .LVU1258
 4542 0084 0125     		movs	r5, #1
 4543              	.LVL335:
 4544              	.L342:
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4545              		.loc 1 4975 31 is_stmt 1 view .LVU1259
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4546              		.loc 1 4979 4 view .LVU1260
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4547              		.loc 1 4979 6 is_stmt 0 view .LVU1261
 4548 0086 012B     		cmp	r3, #1
 4549 0088 2ED1     		bne	.L344
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4550              		.loc 1 4982 5 is_stmt 1 view .LVU1262
 4551 008a A36A     		ldr	r3, [r4, #40]
 4552              	.LVL336:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4553              		.loc 1 4982 5 is_stmt 0 view .LVU1263
 4554 008c 002B     		cmp	r3, #0
 4555 008e 05D0     		beq	.L345
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4556              		.loc 1 4982 5 is_stmt 1 discriminator 1 view .LVU1264
 4557              		.syntax divided
 4558              	@ 4982 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4559 0090 72B6     		 cpsid i 
 4560              	@ 0 "" 2
 4561              		.thumb
 4562              		.syntax unified
 4563              	.L346:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4564              		.loc 1 4982 5 discriminator 3 view .LVU1265
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4565              		.loc 1 4982 5 discriminator 3 view .LVU1266
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4566              		.loc 1 4982 5 discriminator 3 view .LVU1267
 4567 0092 FEE7     		b	.L346
 4568              	.LVL337:
 4569              	.L352:
ARM GAS  /tmp/ccqcX5vb.s 			page 194


4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4570              		.loc 1 4958 15 is_stmt 0 view .LVU1268
 4571 0094 0025     		movs	r5, #0
 4572 0096 F6E7     		b	.L342
 4573              	.L353:
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4574              		.loc 1 4901 13 view .LVU1269
 4575 0098 0125     		movs	r5, #1
 4576 009a F4E7     		b	.L342
 4577              	.LVL338:
 4578              	.L345:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4579              		.loc 1 4982 82 is_stmt 1 discriminator 2 view .LVU1270
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4580              		.loc 1 4984 5 discriminator 2 view .LVU1271
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4581              		.loc 1 4984 30 is_stmt 0 discriminator 2 view .LVU1272
 4582 009c 1A4B     		ldr	r3, .L355+8
 4583 009e 1B68     		ldr	r3, [r3]
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4584              		.loc 1 4984 7 discriminator 2 view .LVU1273
 4585 00a0 002B     		cmp	r3, #0
 4586 00a2 27D1     		bne	.L347
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4587              		.loc 1 4986 6 is_stmt 1 view .LVU1274
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4588              		.loc 1 4986 15 is_stmt 0 view .LVU1275
 4589 00a4 261D     		adds	r6, r4, #4
 4590 00a6 3000     		movs	r0, r6
 4591              	.LVL339:
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4592              		.loc 1 4986 15 view .LVU1276
 4593 00a8 FFF7FEFF 		bl	uxListRemove
 4594              	.LVL340:
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4595              		.loc 1 4987 6 is_stmt 1 view .LVU1277
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4596              		.loc 1 4987 6 view .LVU1278
 4597 00ac E36A     		ldr	r3, [r4, #44]
 4598 00ae 174A     		ldr	r2, .L355+12
 4599 00b0 1268     		ldr	r2, [r2]
 4600 00b2 9342     		cmp	r3, r2
 4601 00b4 01D9     		bls	.L348
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4602              		.loc 1 4987 6 discriminator 1 view .LVU1279
 4603 00b6 154A     		ldr	r2, .L355+12
 4604 00b8 1360     		str	r3, [r2]
 4605              	.L348:
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4606              		.loc 1 4987 6 discriminator 3 view .LVU1280
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4607              		.loc 1 4987 6 discriminator 3 view .LVU1281
 4608 00ba 9800     		lsls	r0, r3, #2
 4609 00bc C018     		adds	r0, r0, r3
 4610 00be 8000     		lsls	r0, r0, #2
 4611 00c0 134B     		ldr	r3, .L355+16
 4612 00c2 C018     		adds	r0, r0, r3
ARM GAS  /tmp/ccqcX5vb.s 			page 195


 4613 00c4 3100     		movs	r1, r6
 4614 00c6 FFF7FEFF 		bl	vListInsertEnd
 4615              	.LVL341:
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4616              		.loc 1 4987 36 discriminator 3 view .LVU1282
 4617              	.L349:
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4618              		.loc 1 4996 5 view .LVU1283
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4619              		.loc 1 4996 14 is_stmt 0 view .LVU1284
 4620 00ca E26A     		ldr	r2, [r4, #44]
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4621              		.loc 1 4996 41 view .LVU1285
 4622 00cc 114B     		ldr	r3, .L355+20
 4623 00ce 1B68     		ldr	r3, [r3]
 4624 00d0 DB6A     		ldr	r3, [r3, #44]
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4625              		.loc 1 4996 7 view .LVU1286
 4626 00d2 9A42     		cmp	r2, r3
 4627 00d4 08D9     		bls	.L344
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4628              		.loc 1 5000 6 is_stmt 1 view .LVU1287
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4629              		.loc 1 5000 8 is_stmt 0 view .LVU1288
 4630 00d6 089B     		ldr	r3, [sp, #32]
 4631 00d8 002B     		cmp	r3, #0
 4632 00da 02D0     		beq	.L350
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4633              		.loc 1 5002 7 is_stmt 1 view .LVU1289
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4634              		.loc 1 5002 34 is_stmt 0 view .LVU1290
 4635 00dc 0123     		movs	r3, #1
 4636 00de 089A     		ldr	r2, [sp, #32]
 4637 00e0 1360     		str	r3, [r2]
 4638              	.L350:
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4639              		.loc 1 5008 6 is_stmt 1 view .LVU1291
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4640              		.loc 1 5008 20 is_stmt 0 view .LVU1292
 4641 00e2 0D4B     		ldr	r3, .L355+24
 4642 00e4 0122     		movs	r2, #1
 4643 00e6 1A60     		str	r2, [r3]
 4644              	.L344:
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4645              		.loc 1 5012 30 is_stmt 1 view .LVU1293
5016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4646              		.loc 1 5016 3 view .LVU1294
 4647 00e8 3800     		movs	r0, r7
 4648 00ea FFF7FEFF 		bl	vClearInterruptMaskFromISR
 4649              	.LVL342:
5018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4650              		.loc 1 5018 3 view .LVU1295
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4651              		.loc 1 5019 2 is_stmt 0 view .LVU1296
 4652 00ee 2800     		movs	r0, r5
 4653 00f0 03B0     		add	sp, sp, #12
 4654              		@ sp needed
ARM GAS  /tmp/ccqcX5vb.s 			page 196


 4655              	.LVL343:
 4656              	.LVL344:
 4657              	.LVL345:
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4658              		.loc 1 5019 2 view .LVU1297
 4659 00f2 F0BD     		pop	{r4, r5, r6, r7, pc}
 4660              	.LVL346:
 4661              	.L347:
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4662              		.loc 1 4993 6 is_stmt 1 view .LVU1298
 4663 00f4 2100     		movs	r1, r4
 4664 00f6 1831     		adds	r1, r1, #24
 4665 00f8 0848     		ldr	r0, .L355+28
 4666              	.LVL347:
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4667              		.loc 1 4993 6 is_stmt 0 view .LVU1299
 4668 00fa FFF7FEFF 		bl	vListInsertEnd
 4669              	.LVL348:
 4670 00fe E4E7     		b	.L349
 4671              	.L356:
 4672              		.align	2
 4673              	.L355:
 4674 0100 7C040000 		.word	1148
 4675 0104 00000000 		.word	.L338
 4676 0108 00000000 		.word	.LANCHOR13
 4677 010c 00000000 		.word	.LANCHOR10
 4678 0110 00000000 		.word	pxReadyTasksLists
 4679 0114 00000000 		.word	.LANCHOR7
 4680 0118 00000000 		.word	.LANCHOR15
 4681 011c 00000000 		.word	.LANCHOR4
 4682              		.cfi_endproc
 4683              	.LFE40:
 4685              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 4686              		.align	1
 4687              		.global	vTaskNotifyGiveFromISR
 4688              		.syntax unified
 4689              		.code	16
 4690              		.thumb_func
 4692              	vTaskNotifyGiveFromISR:
 4693              	.LVL349:
 4694              	.LFB41:
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4695              		.loc 1 5027 2 is_stmt 1 view -0
 4696              		.cfi_startproc
 4697              		@ args = 0, pretend = 0, frame = 0
 4698              		@ frame_needed = 0, uses_anonymous_args = 0
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4699              		.loc 1 5027 2 is_stmt 0 view .LVU1301
 4700 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4701              	.LCFI32:
 4702              		.cfi_def_cfa_offset 24
 4703              		.cfi_offset 3, -24
 4704              		.cfi_offset 4, -20
 4705              		.cfi_offset 5, -16
 4706              		.cfi_offset 6, -12
 4707              		.cfi_offset 7, -8
 4708              		.cfi_offset 14, -4
ARM GAS  /tmp/ccqcX5vb.s 			page 197


 4709 0002 0400     		movs	r4, r0
 4710 0004 0D00     		movs	r5, r1
5028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4711              		.loc 1 5028 2 is_stmt 1 view .LVU1302
5029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4712              		.loc 1 5029 2 view .LVU1303
5030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4713              		.loc 1 5030 2 view .LVU1304
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4714              		.loc 1 5032 3 view .LVU1305
 4715 0006 0028     		cmp	r0, #0
 4716 0008 12D0     		beq	.L367
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4717              		.loc 1 5032 32 discriminator 2 view .LVU1306
5050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4718              		.loc 1 5050 45 discriminator 2 view .LVU1307
5052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4719              		.loc 1 5052 3 discriminator 2 view .LVU1308
 4720              	.LVL350:
5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4721              		.loc 1 5054 3 discriminator 2 view .LVU1309
5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4722              		.loc 1 5054 28 is_stmt 0 discriminator 2 view .LVU1310
 4723 000a FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 4724              	.LVL351:
5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4725              		.loc 1 5054 28 discriminator 2 view .LVU1311
 4726 000e 0600     		movs	r6, r0
 4727              	.LVL352:
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4728              		.loc 1 5056 4 is_stmt 1 discriminator 2 view .LVU1312
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4729              		.loc 1 5056 26 is_stmt 0 discriminator 2 view .LVU1313
 4730 0010 1F4B     		ldr	r3, .L368
 4731 0012 E15C     		ldrb	r1, [r4, r3]
 4732              	.LVL353:
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4733              		.loc 1 5057 4 is_stmt 1 discriminator 2 view .LVU1314
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4734              		.loc 1 5057 25 is_stmt 0 discriminator 2 view .LVU1315
 4735 0014 0222     		movs	r2, #2
 4736 0016 E254     		strb	r2, [r4, r3]
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4737              		.loc 1 5061 4 is_stmt 1 discriminator 2 view .LVU1316
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4738              		.loc 1 5061 11 is_stmt 0 discriminator 2 view .LVU1317
 4739 0018 8F22     		movs	r2, #143
 4740 001a D200     		lsls	r2, r2, #3
 4741 001c A358     		ldr	r3, [r4, r2]
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4742              		.loc 1 5061 30 discriminator 2 view .LVU1318
 4743 001e 0133     		adds	r3, r3, #1
 4744 0020 A350     		str	r3, [r4, r2]
5063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4745              		.loc 1 5063 36 is_stmt 1 discriminator 2 view .LVU1319
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4746              		.loc 1 5067 4 discriminator 2 view .LVU1320
ARM GAS  /tmp/ccqcX5vb.s 			page 198


5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4747              		.loc 1 5067 6 is_stmt 0 discriminator 2 view .LVU1321
 4748 0022 0129     		cmp	r1, #1
 4749 0024 2AD1     		bne	.L360
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4750              		.loc 1 5070 5 is_stmt 1 view .LVU1322
 4751 0026 A36A     		ldr	r3, [r4, #40]
 4752 0028 002B     		cmp	r3, #0
 4753 002a 03D0     		beq	.L361
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4754              		.loc 1 5070 5 discriminator 1 view .LVU1323
 4755              		.syntax divided
 4756              	@ 5070 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4757 002c 72B6     		 cpsid i 
 4758              	@ 0 "" 2
 4759              		.thumb
 4760              		.syntax unified
 4761              	.L362:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4762              		.loc 1 5070 5 discriminator 2 view .LVU1324
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4763              		.loc 1 5070 5 discriminator 2 view .LVU1325
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4764              		.loc 1 5070 5 discriminator 2 view .LVU1326
 4765 002e FEE7     		b	.L362
 4766              	.LVL354:
 4767              	.L367:
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4768              		.loc 1 5032 3 discriminator 1 view .LVU1327
 4769              		.syntax divided
 4770              	@ 5032 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4771 0030 72B6     		 cpsid i 
 4772              	@ 0 "" 2
 4773              		.thumb
 4774              		.syntax unified
 4775              	.L359:
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4776              		.loc 1 5032 3 discriminator 1 view .LVU1328
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4777              		.loc 1 5032 3 discriminator 1 view .LVU1329
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4778              		.loc 1 5032 3 discriminator 1 view .LVU1330
 4779 0032 FEE7     		b	.L359
 4780              	.LVL355:
 4781              	.L361:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4782              		.loc 1 5070 82 discriminator 2 view .LVU1331
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4783              		.loc 1 5072 5 discriminator 2 view .LVU1332
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4784              		.loc 1 5072 30 is_stmt 0 discriminator 2 view .LVU1333
 4785 0034 174B     		ldr	r3, .L368+4
 4786 0036 1B68     		ldr	r3, [r3]
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4787              		.loc 1 5072 7 discriminator 2 view .LVU1334
 4788 0038 002B     		cmp	r3, #0
 4789 003a 23D1     		bne	.L363
ARM GAS  /tmp/ccqcX5vb.s 			page 199


5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4790              		.loc 1 5074 6 is_stmt 1 view .LVU1335
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4791              		.loc 1 5074 15 is_stmt 0 view .LVU1336
 4792 003c 271D     		adds	r7, r4, #4
 4793 003e 3800     		movs	r0, r7
 4794              	.LVL356:
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4795              		.loc 1 5074 15 view .LVU1337
 4796 0040 FFF7FEFF 		bl	uxListRemove
 4797              	.LVL357:
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4798              		.loc 1 5075 6 is_stmt 1 view .LVU1338
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4799              		.loc 1 5075 6 view .LVU1339
 4800 0044 E36A     		ldr	r3, [r4, #44]
 4801 0046 144A     		ldr	r2, .L368+8
 4802 0048 1268     		ldr	r2, [r2]
 4803 004a 9342     		cmp	r3, r2
 4804 004c 01D9     		bls	.L364
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4805              		.loc 1 5075 6 discriminator 1 view .LVU1340
 4806 004e 124A     		ldr	r2, .L368+8
 4807 0050 1360     		str	r3, [r2]
 4808              	.L364:
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4809              		.loc 1 5075 6 discriminator 3 view .LVU1341
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4810              		.loc 1 5075 6 discriminator 3 view .LVU1342
 4811 0052 9800     		lsls	r0, r3, #2
 4812 0054 C018     		adds	r0, r0, r3
 4813 0056 8000     		lsls	r0, r0, #2
 4814 0058 104B     		ldr	r3, .L368+12
 4815 005a C018     		adds	r0, r0, r3
 4816 005c 3900     		movs	r1, r7
 4817 005e FFF7FEFF 		bl	vListInsertEnd
 4818              	.LVL358:
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4819              		.loc 1 5075 36 discriminator 3 view .LVU1343
 4820              	.L365:
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4821              		.loc 1 5084 5 view .LVU1344
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4822              		.loc 1 5084 14 is_stmt 0 view .LVU1345
 4823 0062 E26A     		ldr	r2, [r4, #44]
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4824              		.loc 1 5084 41 view .LVU1346
 4825 0064 0E4B     		ldr	r3, .L368+16
 4826 0066 1B68     		ldr	r3, [r3]
 4827 0068 DB6A     		ldr	r3, [r3, #44]
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4828              		.loc 1 5084 7 view .LVU1347
 4829 006a 9A42     		cmp	r2, r3
 4830 006c 06D9     		bls	.L360
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4831              		.loc 1 5088 6 is_stmt 1 view .LVU1348
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccqcX5vb.s 			page 200


 4832              		.loc 1 5088 8 is_stmt 0 view .LVU1349
 4833 006e 002D     		cmp	r5, #0
 4834 0070 01D0     		beq	.L366
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4835              		.loc 1 5090 7 is_stmt 1 view .LVU1350
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4836              		.loc 1 5090 34 is_stmt 0 view .LVU1351
 4837 0072 0123     		movs	r3, #1
 4838 0074 2B60     		str	r3, [r5]
 4839              	.L366:
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4840              		.loc 1 5096 6 is_stmt 1 view .LVU1352
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4841              		.loc 1 5096 20 is_stmt 0 view .LVU1353
 4842 0076 0B4B     		ldr	r3, .L368+20
 4843 0078 0122     		movs	r2, #1
 4844 007a 1A60     		str	r2, [r3]
 4845              	.L360:
5100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4846              		.loc 1 5100 30 is_stmt 1 view .LVU1354
5104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4847              		.loc 1 5104 3 view .LVU1355
 4848 007c 3000     		movs	r0, r6
 4849 007e FFF7FEFF 		bl	vClearInterruptMaskFromISR
 4850              	.LVL359:
5105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4851              		.loc 1 5105 2 is_stmt 0 view .LVU1356
 4852              		@ sp needed
 4853              	.LVL360:
 4854              	.LVL361:
 4855              	.LVL362:
5105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4856              		.loc 1 5105 2 view .LVU1357
 4857 0082 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4858              	.LVL363:
 4859              	.L363:
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4860              		.loc 1 5081 6 is_stmt 1 view .LVU1358
 4861 0084 2100     		movs	r1, r4
 4862              	.LVL364:
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4863              		.loc 1 5081 6 is_stmt 0 view .LVU1359
 4864 0086 1831     		adds	r1, r1, #24
 4865 0088 0748     		ldr	r0, .L368+24
 4866              	.LVL365:
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4867              		.loc 1 5081 6 view .LVU1360
 4868 008a FFF7FEFF 		bl	vListInsertEnd
 4869              	.LVL366:
 4870 008e E8E7     		b	.L365
 4871              	.L369:
 4872              		.align	2
 4873              	.L368:
 4874 0090 7C040000 		.word	1148
 4875 0094 00000000 		.word	.LANCHOR13
 4876 0098 00000000 		.word	.LANCHOR10
 4877 009c 00000000 		.word	pxReadyTasksLists
ARM GAS  /tmp/ccqcX5vb.s 			page 201


 4878 00a0 00000000 		.word	.LANCHOR7
 4879 00a4 00000000 		.word	.LANCHOR15
 4880 00a8 00000000 		.word	.LANCHOR4
 4881              		.cfi_endproc
 4882              	.LFE41:
 4884              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 4885              		.align	1
 4886              		.global	xTaskNotifyStateClear
 4887              		.syntax unified
 4888              		.code	16
 4889              		.thumb_func
 4891              	xTaskNotifyStateClear:
 4892              	.LVL367:
 4893              	.LFB42:
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 4894              		.loc 1 5113 2 is_stmt 1 view -0
 4895              		.cfi_startproc
 4896              		@ args = 0, pretend = 0, frame = 0
 4897              		@ frame_needed = 0, uses_anonymous_args = 0
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 4898              		.loc 1 5113 2 is_stmt 0 view .LVU1362
 4899 0000 10B5     		push	{r4, lr}
 4900              	.LCFI33:
 4901              		.cfi_def_cfa_offset 8
 4902              		.cfi_offset 4, -8
 4903              		.cfi_offset 14, -4
 4904 0002 041E     		subs	r4, r0, #0
5114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4905              		.loc 1 5114 2 is_stmt 1 view .LVU1363
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4906              		.loc 1 5115 2 view .LVU1364
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4907              		.loc 1 5119 3 view .LVU1365
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4908              		.loc 1 5119 11 is_stmt 0 view .LVU1366
 4909 0004 0AD0     		beq	.L374
 4910              	.LVL368:
 4911              	.L371:
5121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4912              		.loc 1 5121 3 is_stmt 1 discriminator 4 view .LVU1367
 4913 0006 FFF7FEFF 		bl	vPortEnterCritical
 4914              	.LVL369:
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4915              		.loc 1 5123 4 discriminator 4 view .LVU1368
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4916              		.loc 1 5123 13 is_stmt 0 discriminator 4 view .LVU1369
 4917 000a 084B     		ldr	r3, .L376
 4918 000c E35C     		ldrb	r3, [r4, r3]
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4919              		.loc 1 5123 6 discriminator 4 view .LVU1370
 4920 000e 022B     		cmp	r3, #2
 4921 0010 07D0     		beq	.L375
5130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4922              		.loc 1 5130 13 view .LVU1371
 4923 0012 0024     		movs	r4, #0
 4924              	.LVL370:
 4925              	.L372:
ARM GAS  /tmp/ccqcX5vb.s 			page 202


5133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4926              		.loc 1 5133 3 is_stmt 1 view .LVU1372
 4927 0014 FFF7FEFF 		bl	vPortExitCritical
 4928              	.LVL371:
5135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4929              		.loc 1 5135 3 view .LVU1373
5136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4930              		.loc 1 5136 2 is_stmt 0 view .LVU1374
 4931 0018 2000     		movs	r0, r4
 4932              		@ sp needed
 4933              	.LVL372:
5136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4934              		.loc 1 5136 2 view .LVU1375
 4935 001a 10BD     		pop	{r4, pc}
 4936              	.LVL373:
 4937              	.L374:
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4938              		.loc 1 5119 11 discriminator 1 view .LVU1376
 4939 001c 044B     		ldr	r3, .L376+4
 4940 001e 1C68     		ldr	r4, [r3]
 4941              	.LVL374:
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4942              		.loc 1 5119 11 discriminator 1 view .LVU1377
 4943 0020 F1E7     		b	.L371
 4944              	.LVL375:
 4945              	.L375:
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 4946              		.loc 1 5125 5 is_stmt 1 view .LVU1378
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 4947              		.loc 1 5125 26 is_stmt 0 view .LVU1379
 4948 0022 024B     		ldr	r3, .L376
 4949 0024 0022     		movs	r2, #0
 4950 0026 E254     		strb	r2, [r4, r3]
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4951              		.loc 1 5126 5 is_stmt 1 view .LVU1380
 4952              	.LVL376:
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4953              		.loc 1 5126 13 is_stmt 0 view .LVU1381
 4954 0028 0124     		movs	r4, #1
 4955              	.LVL377:
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4956              		.loc 1 5126 13 view .LVU1382
 4957 002a F3E7     		b	.L372
 4958              	.L377:
 4959              		.align	2
 4960              	.L376:
 4961 002c 7C040000 		.word	1148
 4962 0030 00000000 		.word	.LANCHOR7
 4963              		.cfi_endproc
 4964              	.LFE42:
 4966              		.section	.text.ulTaskNotifyValueClear,"ax",%progbits
 4967              		.align	1
 4968              		.global	ulTaskNotifyValueClear
 4969              		.syntax unified
 4970              		.code	16
 4971              		.thumb_func
 4973              	ulTaskNotifyValueClear:
ARM GAS  /tmp/ccqcX5vb.s 			page 203


 4974              	.LVL378:
 4975              	.LFB43:
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 4976              		.loc 1 5144 2 is_stmt 1 view -0
 4977              		.cfi_startproc
 4978              		@ args = 0, pretend = 0, frame = 0
 4979              		@ frame_needed = 0, uses_anonymous_args = 0
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 4980              		.loc 1 5144 2 is_stmt 0 view .LVU1384
 4981 0000 70B5     		push	{r4, r5, r6, lr}
 4982              	.LCFI34:
 4983              		.cfi_def_cfa_offset 16
 4984              		.cfi_offset 4, -16
 4985              		.cfi_offset 5, -12
 4986              		.cfi_offset 6, -8
 4987              		.cfi_offset 14, -4
 4988 0002 0400     		movs	r4, r0
 4989 0004 0D00     		movs	r5, r1
5145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 4990              		.loc 1 5145 2 is_stmt 1 view .LVU1385
5146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4991              		.loc 1 5146 2 view .LVU1386
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4992              		.loc 1 5150 3 view .LVU1387
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4993              		.loc 1 5150 11 is_stmt 0 view .LVU1388
 4994 0006 0028     		cmp	r0, #0
 4995 0008 0DD0     		beq	.L380
 4996              	.LVL379:
 4997              	.L379:
5152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4998              		.loc 1 5152 3 is_stmt 1 discriminator 4 view .LVU1389
 4999 000a FFF7FEFF 		bl	vPortEnterCritical
 5000              	.LVL380:
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 5001              		.loc 1 5156 4 discriminator 4 view .LVU1390
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 5002              		.loc 1 5156 27 is_stmt 0 discriminator 4 view .LVU1391
 5003 000e 074B     		ldr	r3, .L381
 5004 0010 1A68     		ldr	r2, [r3]
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 5005              		.loc 1 5156 13 discriminator 4 view .LVU1392
 5006 0012 8F23     		movs	r3, #143
 5007 0014 DB00     		lsls	r3, r3, #3
 5008 0016 D658     		ldr	r6, [r2, r3]
 5009              	.LVL381:
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5010              		.loc 1 5157 4 is_stmt 1 discriminator 4 view .LVU1393
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5011              		.loc 1 5157 27 is_stmt 0 discriminator 4 view .LVU1394
 5012 0018 E258     		ldr	r2, [r4, r3]
 5013 001a AA43     		bics	r2, r5
 5014 001c E250     		str	r2, [r4, r3]
5159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5015              		.loc 1 5159 3 is_stmt 1 discriminator 4 view .LVU1395
 5016 001e FFF7FEFF 		bl	vPortExitCritical
 5017              	.LVL382:
ARM GAS  /tmp/ccqcX5vb.s 			page 204


5161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5018              		.loc 1 5161 3 discriminator 4 view .LVU1396
5162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5019              		.loc 1 5162 2 is_stmt 0 discriminator 4 view .LVU1397
 5020 0022 3000     		movs	r0, r6
 5021              		@ sp needed
 5022              	.LVL383:
 5023              	.LVL384:
 5024              	.LVL385:
5162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5025              		.loc 1 5162 2 discriminator 4 view .LVU1398
 5026 0024 70BD     		pop	{r4, r5, r6, pc}
 5027              	.LVL386:
 5028              	.L380:
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5029              		.loc 1 5150 11 discriminator 1 view .LVU1399
 5030 0026 014B     		ldr	r3, .L381
 5031 0028 1C68     		ldr	r4, [r3]
 5032              	.LVL387:
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5033              		.loc 1 5150 11 discriminator 1 view .LVU1400
 5034 002a EEE7     		b	.L379
 5035              	.L382:
 5036              		.align	2
 5037              	.L381:
 5038 002c 00000000 		.word	.LANCHOR7
 5039              		.cfi_endproc
 5040              	.LFE43:
 5042              		.global	pxCurrentTCB
 5043              		.section	.bss.pxCurrentTCB,"aw",%nobits
 5044              		.align	2
 5045              		.set	.LANCHOR7,. + 0
 5048              	pxCurrentTCB:
 5049 0000 00000000 		.space	4
 5050              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 5051              		.align	2
 5052              		.set	.LANCHOR0,. + 0
 5055              	pxDelayedTaskList:
 5056 0000 00000000 		.space	4
 5057              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 5058              		.align	2
 5059              		.set	.LANCHOR5,. + 0
 5062              	pxOverflowDelayedTaskList:
 5063 0000 00000000 		.space	4
 5064              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 5065              		.align	2
 5068              	pxReadyTasksLists:
 5069 0000 00000000 		.space	140
 5069      00000000 
 5069      00000000 
 5069      00000000 
 5069      00000000 
 5070              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 5071              		.align	2
 5072              		.set	.LANCHOR6,. + 0
 5075              	uxCurrentNumberOfTasks:
 5076 0000 00000000 		.space	4
ARM GAS  /tmp/ccqcX5vb.s 			page 205


 5077              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 5078              		.align	2
 5079              		.set	.LANCHOR13,. + 0
 5082              	uxSchedulerSuspended:
 5083 0000 00000000 		.space	4
 5084              		.section	.bss.uxTaskNumber,"aw",%nobits
 5085              		.align	2
 5086              		.set	.LANCHOR9,. + 0
 5089              	uxTaskNumber:
 5090 0000 00000000 		.space	4
 5091              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 5092              		.align	2
 5093              		.set	.LANCHOR10,. + 0
 5096              	uxTopReadyPriority:
 5097 0000 00000000 		.space	4
 5098              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 5099              		.align	2
 5100              		.set	.LANCHOR2,. + 0
 5103              	xDelayedTaskList1:
 5104 0000 00000000 		.space	20
 5104      00000000 
 5104      00000000 
 5104      00000000 
 5104      00000000 
 5105              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 5106              		.align	2
 5107              		.set	.LANCHOR3,. + 0
 5110              	xDelayedTaskList2:
 5111 0000 00000000 		.space	20
 5111      00000000 
 5111      00000000 
 5111      00000000 
 5111      00000000 
 5112              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 5113              		.align	2
 5114              		.set	.LANCHOR12,. + 0
 5117              	xIdleTaskHandle:
 5118 0000 00000000 		.space	4
 5119              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 5120              		.align	2
 5121              		.set	.LANCHOR1,. + 0
 5124              	xNextTaskUnblockTime:
 5125 0000 00000000 		.space	4
 5126              		.section	.bss.xNumOfOverflows,"aw",%nobits
 5127              		.align	2
 5128              		.set	.LANCHOR14,. + 0
 5131              	xNumOfOverflows:
 5132 0000 00000000 		.space	4
 5133              		.section	.bss.xPendedTicks,"aw",%nobits
 5134              		.align	2
 5135              		.set	.LANCHOR16,. + 0
 5138              	xPendedTicks:
 5139 0000 00000000 		.space	4
 5140              		.section	.bss.xPendingReadyList,"aw",%nobits
 5141              		.align	2
 5142              		.set	.LANCHOR4,. + 0
 5145              	xPendingReadyList:
ARM GAS  /tmp/ccqcX5vb.s 			page 206


 5146 0000 00000000 		.space	20
 5146      00000000 
 5146      00000000 
 5146      00000000 
 5146      00000000 
 5147              		.section	.bss.xSchedulerRunning,"aw",%nobits
 5148              		.align	2
 5149              		.set	.LANCHOR8,. + 0
 5152              	xSchedulerRunning:
 5153 0000 00000000 		.space	4
 5154              		.section	.bss.xTickCount,"aw",%nobits
 5155              		.align	2
 5156              		.set	.LANCHOR11,. + 0
 5159              	xTickCount:
 5160 0000 00000000 		.space	4
 5161              		.section	.bss.xYieldPending,"aw",%nobits
 5162              		.align	2
 5163              		.set	.LANCHOR15,. + 0
 5166              	xYieldPending:
 5167 0000 00000000 		.space	4
 5168              		.text
 5169              	.Letext0:
 5170              		.file 2 "/home/yiyu/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 5171              		.file 3 "/home/yiyu/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 5172              		.file 4 "/home/yiyu/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_types.h"
 5173              		.file 5 "/home/yiyu/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/reent.h"
 5174              		.file 6 "/home/yiyu/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/lock.h"
 5175              		.file 7 "/home/yiyu/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 5176              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 5177              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/portmacro.h"
 5178              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 5179              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 5180              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
 5181              		.file 13 "/home/yiyu/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/string.h"
 5182              		.file 14 "<built-in>"
ARM GAS  /tmp/ccqcX5vb.s 			page 207


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/ccqcX5vb.s:18     .text.prvTaskCheckFreeStackSpace:0000000000000000 $t
     /tmp/ccqcX5vb.s:23     .text.prvTaskCheckFreeStackSpace:0000000000000000 prvTaskCheckFreeStackSpace
     /tmp/ccqcX5vb.s:70     .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/ccqcX5vb.s:75     .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/ccqcX5vb.s:123    .text.prvResetNextTaskUnblockTime:0000000000000024 $d
     /tmp/ccqcX5vb.s:129    .text.prvInitialiseNewTask:0000000000000000 $t
     /tmp/ccqcX5vb.s:134    .text.prvInitialiseNewTask:0000000000000000 prvInitialiseNewTask
     /tmp/ccqcX5vb.s:397    .text.prvInitialiseNewTask:000000000000010c $d
     /tmp/ccqcX5vb.s:409    .text.prvIdleTask:0000000000000000 $t
     /tmp/ccqcX5vb.s:414    .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/ccqcX5vb.s:448    .text.prvIdleTask:0000000000000010 $d
     /tmp/ccqcX5vb.s:5068   .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/ccqcX5vb.s:453    .text.prvInitialiseTaskLists:0000000000000000 $t
     /tmp/ccqcX5vb.s:458    .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
     /tmp/ccqcX5vb.s:527    .text.prvInitialiseTaskLists:000000000000003c $d
     /tmp/ccqcX5vb.s:537    .text.prvAddNewTaskToReadyList:0000000000000000 $t
     /tmp/ccqcX5vb.s:542    .text.prvAddNewTaskToReadyList:0000000000000000 prvAddNewTaskToReadyList
     /tmp/ccqcX5vb.s:678    .text.prvAddNewTaskToReadyList:0000000000000088 $d
     /tmp/ccqcX5vb.s:688    .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/ccqcX5vb.s:693    .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/ccqcX5vb.s:783    .text.prvAddCurrentTaskToDelayedList:0000000000000048 $d
     /tmp/ccqcX5vb.s:792    .text.xTaskCreate:0000000000000000 $t
     /tmp/ccqcX5vb.s:798    .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/ccqcX5vb.s:924    .rodata.vTaskStartScheduler.str1.4:0000000000000000 $d
     /tmp/ccqcX5vb.s:928    .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/ccqcX5vb.s:934    .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/ccqcX5vb.s:1031   .text.vTaskStartScheduler:000000000000004c $d
     /tmp/ccqcX5vb.s:1043   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/ccqcX5vb.s:1049   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/ccqcX5vb.s:1081   .text.vTaskEndScheduler:0000000000000010 $d
     /tmp/ccqcX5vb.s:1086   .text.vTaskSuspendAll:0000000000000000 $t
     /tmp/ccqcX5vb.s:1092   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/ccqcX5vb.s:1112   .text.vTaskSuspendAll:000000000000000c $d
     /tmp/ccqcX5vb.s:1117   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/ccqcX5vb.s:1123   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/ccqcX5vb.s:1145   .text.xTaskGetTickCount:0000000000000008 $d
     /tmp/ccqcX5vb.s:1150   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/ccqcX5vb.s:1156   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/ccqcX5vb.s:1181   .text.xTaskGetTickCountFromISR:0000000000000008 $d
     /tmp/ccqcX5vb.s:1186   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/ccqcX5vb.s:1192   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/ccqcX5vb.s:1209   .text.uxTaskGetNumberOfTasks:0000000000000008 $d
     /tmp/ccqcX5vb.s:1214   .text.pcTaskGetName:0000000000000000 $t
     /tmp/ccqcX5vb.s:1220   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/ccqcX5vb.s:1271   .text.pcTaskGetName:0000000000000018 $d
     /tmp/ccqcX5vb.s:1276   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/ccqcX5vb.s:1282   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/ccqcX5vb.s:1546   .text.xTaskIncrementTick:00000000000000e8 $d
     /tmp/ccqcX5vb.s:1561   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/ccqcX5vb.s:1567   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/ccqcX5vb.s:1788   .text.xTaskResumeAll:00000000000000c8 $d
     /tmp/ccqcX5vb.s:1800   .text.vTaskDelayUntil:0000000000000000 $t
     /tmp/ccqcX5vb.s:1806   .text.vTaskDelayUntil:0000000000000000 vTaskDelayUntil
     /tmp/ccqcX5vb.s:1989   .text.vTaskDelayUntil:000000000000006c $d
     /tmp/ccqcX5vb.s:1995   .text.vTaskDelay:0000000000000000 $t
ARM GAS  /tmp/ccqcX5vb.s 			page 208


     /tmp/ccqcX5vb.s:2001   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/ccqcX5vb.s:2072   .text.vTaskDelay:000000000000002c $d
     /tmp/ccqcX5vb.s:2077   .text.xTaskCatchUpTicks:0000000000000000 $t
     /tmp/ccqcX5vb.s:2083   .text.xTaskCatchUpTicks:0000000000000000 xTaskCatchUpTicks
     /tmp/ccqcX5vb.s:2140   .text.xTaskCatchUpTicks:0000000000000024 $d
     /tmp/ccqcX5vb.s:2146   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/ccqcX5vb.s:2152   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/ccqcX5vb.s:2338   .text.vTaskSwitchContext:00000000000000ac $d
     /tmp/ccqcX5vb.s:2351   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/ccqcX5vb.s:2357   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/ccqcX5vb.s:2411   .text.vTaskPlaceOnEventList:0000000000000020 $d
     /tmp/ccqcX5vb.s:2416   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/ccqcX5vb.s:2422   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/ccqcX5vb.s:2505   .text.vTaskPlaceOnUnorderedEventList:0000000000000038 $d
     /tmp/ccqcX5vb.s:2511   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/ccqcX5vb.s:2517   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/ccqcX5vb.s:2647   .text.xTaskRemoveFromEventList:000000000000006c $d
     /tmp/ccqcX5vb.s:2657   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/ccqcX5vb.s:2663   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 vTaskRemoveFromUnorderedEventList
     /tmp/ccqcX5vb.s:2784   .text.vTaskRemoveFromUnorderedEventList:0000000000000060 $d
     /tmp/ccqcX5vb.s:2793   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/ccqcX5vb.s:2799   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/ccqcX5vb.s:2854   .text.vTaskSetTimeOutState:0000000000000020 $d
     /tmp/ccqcX5vb.s:2860   .text.vTaskInternalSetTimeOutState:0000000000000000 $t
     /tmp/ccqcX5vb.s:2866   .text.vTaskInternalSetTimeOutState:0000000000000000 vTaskInternalSetTimeOutState
     /tmp/ccqcX5vb.s:2890   .text.vTaskInternalSetTimeOutState:0000000000000010 $d
     /tmp/ccqcX5vb.s:2896   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/ccqcX5vb.s:2902   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/ccqcX5vb.s:3041   .text.xTaskCheckForTimeOut:0000000000000058 $d
     /tmp/ccqcX5vb.s:3048   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/ccqcX5vb.s:3054   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/ccqcX5vb.s:3072   .text.vTaskMissedYield:0000000000000008 $d
     /tmp/ccqcX5vb.s:3077   .text.uxTaskGetStackHighWaterMark:0000000000000000 $t
     /tmp/ccqcX5vb.s:3083   .text.uxTaskGetStackHighWaterMark:0000000000000000 uxTaskGetStackHighWaterMark
     /tmp/ccqcX5vb.s:3128   .text.uxTaskGetStackHighWaterMark:0000000000000014 $d
     /tmp/ccqcX5vb.s:3133   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
     /tmp/ccqcX5vb.s:3139   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/ccqcX5vb.s:3159   .text.xTaskGetCurrentTaskHandle:0000000000000008 $d
     /tmp/ccqcX5vb.s:3164   .text.xTaskGetSchedulerState:0000000000000000 $t
     /tmp/ccqcX5vb.s:3170   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
     /tmp/ccqcX5vb.s:3213   .text.xTaskGetSchedulerState:000000000000001c $d
     /tmp/ccqcX5vb.s:3219   .text.xTaskPriorityInherit:0000000000000000 $t
     /tmp/ccqcX5vb.s:3225   .text.xTaskPriorityInherit:0000000000000000 xTaskPriorityInherit
     /tmp/ccqcX5vb.s:3375   .text.xTaskPriorityInherit:0000000000000088 $d
     /tmp/ccqcX5vb.s:3382   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/ccqcX5vb.s:3388   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/ccqcX5vb.s:3535   .text.xTaskPriorityDisinherit:000000000000006c $d
     /tmp/ccqcX5vb.s:3542   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 $t
     /tmp/ccqcX5vb.s:3548   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 vTaskPriorityDisinheritAfterTimeout
     /tmp/ccqcX5vb.s:3706   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000078 $d
     /tmp/ccqcX5vb.s:3713   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/ccqcX5vb.s:3719   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/ccqcX5vb.s:3748   .text.uxTaskResetEventItemValue:0000000000000014 $d
     /tmp/ccqcX5vb.s:3753   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/ccqcX5vb.s:3759   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/ccqcX5vb.s:3792   .text.pvTaskIncrementMutexHeldCount:0000000000000018 $d
     /tmp/ccqcX5vb.s:3797   .text.ulTaskNotifyTake:0000000000000000 $t
ARM GAS  /tmp/ccqcX5vb.s 			page 209


     /tmp/ccqcX5vb.s:3803   .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/ccqcX5vb.s:3929   .text.ulTaskNotifyTake:0000000000000078 $d
     /tmp/ccqcX5vb.s:3935   .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/ccqcX5vb.s:3941   .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/ccqcX5vb.s:4083   .text.xTaskNotifyWait:000000000000008c $d
     /tmp/ccqcX5vb.s:4089   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/ccqcX5vb.s:4095   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/ccqcX5vb.s:4159   .rodata.xTaskGenericNotify:0000000000000000 $d
     /tmp/ccqcX5vb.s:4354   .text.xTaskGenericNotify:00000000000000d4 $d
     /tmp/ccqcX5vb.s:4363   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/ccqcX5vb.s:4369   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/ccqcX5vb.s:4441   .rodata.xTaskGenericNotifyFromISR:0000000000000000 $d
     /tmp/ccqcX5vb.s:4674   .text.xTaskGenericNotifyFromISR:0000000000000100 $d
     /tmp/ccqcX5vb.s:4686   .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/ccqcX5vb.s:4692   .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/ccqcX5vb.s:4874   .text.vTaskNotifyGiveFromISR:0000000000000090 $d
     /tmp/ccqcX5vb.s:4885   .text.xTaskNotifyStateClear:0000000000000000 $t
     /tmp/ccqcX5vb.s:4891   .text.xTaskNotifyStateClear:0000000000000000 xTaskNotifyStateClear
     /tmp/ccqcX5vb.s:4961   .text.xTaskNotifyStateClear:000000000000002c $d
     /tmp/ccqcX5vb.s:4967   .text.ulTaskNotifyValueClear:0000000000000000 $t
     /tmp/ccqcX5vb.s:4973   .text.ulTaskNotifyValueClear:0000000000000000 ulTaskNotifyValueClear
     /tmp/ccqcX5vb.s:5038   .text.ulTaskNotifyValueClear:000000000000002c $d
     /tmp/ccqcX5vb.s:5048   .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/ccqcX5vb.s:5044   .bss.pxCurrentTCB:0000000000000000 $d
     /tmp/ccqcX5vb.s:5051   .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/ccqcX5vb.s:5055   .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/ccqcX5vb.s:5058   .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/ccqcX5vb.s:5062   .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/ccqcX5vb.s:5065   .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/ccqcX5vb.s:5071   .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/ccqcX5vb.s:5075   .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/ccqcX5vb.s:5078   .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/ccqcX5vb.s:5082   .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
     /tmp/ccqcX5vb.s:5085   .bss.uxTaskNumber:0000000000000000 $d
     /tmp/ccqcX5vb.s:5089   .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/ccqcX5vb.s:5092   .bss.uxTopReadyPriority:0000000000000000 $d
     /tmp/ccqcX5vb.s:5096   .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/ccqcX5vb.s:5099   .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/ccqcX5vb.s:5103   .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/ccqcX5vb.s:5106   .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/ccqcX5vb.s:5110   .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/ccqcX5vb.s:5113   .bss.xIdleTaskHandle:0000000000000000 $d
     /tmp/ccqcX5vb.s:5117   .bss.xIdleTaskHandle:0000000000000000 xIdleTaskHandle
     /tmp/ccqcX5vb.s:5120   .bss.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/ccqcX5vb.s:5124   .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/ccqcX5vb.s:5127   .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/ccqcX5vb.s:5131   .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
     /tmp/ccqcX5vb.s:5134   .bss.xPendedTicks:0000000000000000 $d
     /tmp/ccqcX5vb.s:5138   .bss.xPendedTicks:0000000000000000 xPendedTicks
     /tmp/ccqcX5vb.s:5141   .bss.xPendingReadyList:0000000000000000 $d
     /tmp/ccqcX5vb.s:5145   .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/ccqcX5vb.s:5148   .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/ccqcX5vb.s:5152   .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/ccqcX5vb.s:5155   .bss.xTickCount:0000000000000000 $d
     /tmp/ccqcX5vb.s:5159   .bss.xTickCount:0000000000000000 xTickCount
     /tmp/ccqcX5vb.s:5162   .bss.xYieldPending:0000000000000000 $d
     /tmp/ccqcX5vb.s:5166   .bss.xYieldPending:0000000000000000 xYieldPending
ARM GAS  /tmp/ccqcX5vb.s 			page 210



UNDEFINED SYMBOLS
memset
vListInitialiseItem
pxPortInitialiseStack
vPortYield
vListInitialise
vPortEnterCritical
vListInsertEnd
vPortExitCritical
uxListRemove
vListInsert
pvPortMalloc
vPortFree
xPortStartScheduler
_impure_ptr
vPortEndScheduler
vApplicationStackOverflowHook
ulSetInterruptMaskFromISR
vClearInterruptMaskFromISR
