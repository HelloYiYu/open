ARM GAS  /tmp/cc1iv9eN.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_TIM1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_TIM1_Init
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_TIM1_Init:
  25              	.LFB327:
  26              		.file 1 "Core/Src/tim.c"
   1:Core/Src/tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/tim.c **** /**
   3:Core/Src/tim.c ****   ******************************************************************************
   4:Core/Src/tim.c ****   * @file    tim.c
   5:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/tim.c ****   *          of the TIM instances.
   7:Core/Src/tim.c ****   ******************************************************************************
   8:Core/Src/tim.c ****   * @attention
   9:Core/Src/tim.c ****   *
  10:Core/Src/tim.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/tim.c ****   * All rights reserved.
  12:Core/Src/tim.c ****   *
  13:Core/Src/tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/tim.c ****   * in the root directory of this software component.
  15:Core/Src/tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** /* USER CODE END Header */
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim1;
  28:Core/Src/tim.c **** 
  29:Core/Src/tim.c **** /* TIM1 init function */
  30:Core/Src/tim.c **** void MX_TIM1_Init(void)
  31:Core/Src/tim.c **** {
  27              		.loc 1 31 1 view -0
ARM GAS  /tmp/cc1iv9eN.s 			page 2


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 00B5     		push	{lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 89B0     		sub	sp, sp, #36
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
  32:Core/Src/tim.c **** 
  33:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 0 */
  34:Core/Src/tim.c **** 
  35:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 0 */
  36:Core/Src/tim.c **** 
  37:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  38              		.loc 1 37 3 view .LVU1
  39              		.loc 1 37 26 is_stmt 0 view .LVU2
  40 0004 1022     		movs	r2, #16
  41 0006 0021     		movs	r1, #0
  42 0008 04A8     		add	r0, sp, #16
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
  38:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  45              		.loc 1 38 3 is_stmt 1 view .LVU3
  46              		.loc 1 38 27 is_stmt 0 view .LVU4
  47 000e 0C22     		movs	r2, #12
  48 0010 0021     		movs	r1, #0
  49 0012 01A8     		add	r0, sp, #4
  50 0014 FFF7FEFF 		bl	memset
  51              	.LVL1:
  39:Core/Src/tim.c **** 
  40:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 1 */
  41:Core/Src/tim.c **** 
  42:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 1 */
  43:Core/Src/tim.c ****   htim1.Instance = TIM1;
  52              		.loc 1 43 3 is_stmt 1 view .LVU5
  53              		.loc 1 43 18 is_stmt 0 view .LVU6
  54 0018 1648     		ldr	r0, .L8
  55 001a 174B     		ldr	r3, .L8+4
  56 001c 0360     		str	r3, [r0]
  44:Core/Src/tim.c ****   htim1.Init.Prescaler = 0;
  57              		.loc 1 44 3 is_stmt 1 view .LVU7
  58              		.loc 1 44 24 is_stmt 0 view .LVU8
  59 001e 0023     		movs	r3, #0
  60 0020 4360     		str	r3, [r0, #4]
  45:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  61              		.loc 1 45 3 is_stmt 1 view .LVU9
  62              		.loc 1 45 26 is_stmt 0 view .LVU10
  63 0022 8360     		str	r3, [r0, #8]
  46:Core/Src/tim.c ****   htim1.Init.Period = 65535;
  64              		.loc 1 46 3 is_stmt 1 view .LVU11
  65              		.loc 1 46 21 is_stmt 0 view .LVU12
  66 0024 154A     		ldr	r2, .L8+8
  67 0026 C260     		str	r2, [r0, #12]
  47:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  68              		.loc 1 47 3 is_stmt 1 view .LVU13
ARM GAS  /tmp/cc1iv9eN.s 			page 3


  69              		.loc 1 47 28 is_stmt 0 view .LVU14
  70 0028 0361     		str	r3, [r0, #16]
  48:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
  71              		.loc 1 48 3 is_stmt 1 view .LVU15
  72              		.loc 1 48 32 is_stmt 0 view .LVU16
  73 002a 4361     		str	r3, [r0, #20]
  49:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  74              		.loc 1 49 3 is_stmt 1 view .LVU17
  75              		.loc 1 49 32 is_stmt 0 view .LVU18
  76 002c 8361     		str	r3, [r0, #24]
  50:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  77              		.loc 1 50 3 is_stmt 1 view .LVU19
  78              		.loc 1 50 7 is_stmt 0 view .LVU20
  79 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
  80              	.LVL2:
  81              		.loc 1 50 6 view .LVU21
  82 0032 0028     		cmp	r0, #0
  83 0034 14D1     		bne	.L5
  84              	.L2:
  51:Core/Src/tim.c ****   {
  52:Core/Src/tim.c ****     Error_Handler();
  53:Core/Src/tim.c ****   }
  54:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  85              		.loc 1 54 3 is_stmt 1 view .LVU22
  86              		.loc 1 54 34 is_stmt 0 view .LVU23
  87 0036 8023     		movs	r3, #128
  88 0038 5B01     		lsls	r3, r3, #5
  89 003a 0493     		str	r3, [sp, #16]
  55:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
  90              		.loc 1 55 3 is_stmt 1 view .LVU24
  91              		.loc 1 55 7 is_stmt 0 view .LVU25
  92 003c 04A9     		add	r1, sp, #16
  93 003e 0D48     		ldr	r0, .L8
  94 0040 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  95              	.LVL3:
  96              		.loc 1 55 6 view .LVU26
  97 0044 0028     		cmp	r0, #0
  98 0046 0ED1     		bne	.L6
  99              	.L3:
  56:Core/Src/tim.c ****   {
  57:Core/Src/tim.c ****     Error_Handler();
  58:Core/Src/tim.c ****   }
  59:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 100              		.loc 1 59 3 is_stmt 1 view .LVU27
 101              		.loc 1 59 37 is_stmt 0 view .LVU28
 102 0048 0023     		movs	r3, #0
 103 004a 0193     		str	r3, [sp, #4]
  60:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 104              		.loc 1 60 3 is_stmt 1 view .LVU29
 105              		.loc 1 60 38 is_stmt 0 view .LVU30
 106 004c 0293     		str	r3, [sp, #8]
  61:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 107              		.loc 1 61 3 is_stmt 1 view .LVU31
 108              		.loc 1 61 33 is_stmt 0 view .LVU32
 109 004e 0393     		str	r3, [sp, #12]
  62:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 110              		.loc 1 62 3 is_stmt 1 view .LVU33
ARM GAS  /tmp/cc1iv9eN.s 			page 4


 111              		.loc 1 62 7 is_stmt 0 view .LVU34
 112 0050 01A9     		add	r1, sp, #4
 113 0052 0848     		ldr	r0, .L8
 114 0054 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 115              	.LVL4:
 116              		.loc 1 62 6 view .LVU35
 117 0058 0028     		cmp	r0, #0
 118 005a 07D1     		bne	.L7
 119              	.L1:
  63:Core/Src/tim.c ****   {
  64:Core/Src/tim.c ****     Error_Handler();
  65:Core/Src/tim.c ****   }
  66:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 2 */
  67:Core/Src/tim.c **** 
  68:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 2 */
  69:Core/Src/tim.c **** 
  70:Core/Src/tim.c **** }
 120              		.loc 1 70 1 view .LVU36
 121 005c 09B0     		add	sp, sp, #36
 122              		@ sp needed
 123 005e 00BD     		pop	{pc}
 124              	.L5:
  52:Core/Src/tim.c ****   }
 125              		.loc 1 52 5 is_stmt 1 view .LVU37
 126 0060 FFF7FEFF 		bl	Error_Handler
 127              	.LVL5:
 128 0064 E7E7     		b	.L2
 129              	.L6:
  57:Core/Src/tim.c ****   }
 130              		.loc 1 57 5 view .LVU38
 131 0066 FFF7FEFF 		bl	Error_Handler
 132              	.LVL6:
 133 006a EDE7     		b	.L3
 134              	.L7:
  64:Core/Src/tim.c ****   }
 135              		.loc 1 64 5 view .LVU39
 136 006c FFF7FEFF 		bl	Error_Handler
 137              	.LVL7:
 138              		.loc 1 70 1 is_stmt 0 view .LVU40
 139 0070 F4E7     		b	.L1
 140              	.L9:
 141 0072 C046     		.align	2
 142              	.L8:
 143 0074 00000000 		.word	.LANCHOR0
 144 0078 002C0140 		.word	1073818624
 145 007c FFFF0000 		.word	65535
 146              		.cfi_endproc
 147              	.LFE327:
 149              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 150              		.align	1
 151              		.global	HAL_TIM_Base_MspInit
 152              		.syntax unified
 153              		.code	16
 154              		.thumb_func
 156              	HAL_TIM_Base_MspInit:
 157              	.LVL8:
 158              	.LFB328:
ARM GAS  /tmp/cc1iv9eN.s 			page 5


  71:Core/Src/tim.c **** 
  72:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
  73:Core/Src/tim.c **** {
 159              		.loc 1 73 1 is_stmt 1 view -0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 56
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		.loc 1 73 1 is_stmt 0 view .LVU42
 164 0000 10B5     		push	{r4, lr}
 165              	.LCFI2:
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 4, -8
 168              		.cfi_offset 14, -4
 169 0002 8EB0     		sub	sp, sp, #56
 170              	.LCFI3:
 171              		.cfi_def_cfa_offset 64
 172 0004 0400     		movs	r4, r0
  74:Core/Src/tim.c **** 
  75:Core/Src/tim.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 173              		.loc 1 75 3 is_stmt 1 view .LVU43
 174              		.loc 1 75 28 is_stmt 0 view .LVU44
 175 0006 3422     		movs	r2, #52
 176 0008 0021     		movs	r1, #0
 177 000a 01A8     		add	r0, sp, #4
 178              	.LVL9:
 179              		.loc 1 75 28 view .LVU45
 180 000c FFF7FEFF 		bl	memset
 181              	.LVL10:
  76:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
 182              		.loc 1 76 3 is_stmt 1 view .LVU46
 183              		.loc 1 76 20 is_stmt 0 view .LVU47
 184 0010 2268     		ldr	r2, [r4]
 185              		.loc 1 76 5 view .LVU48
 186 0012 0D4B     		ldr	r3, .L15
 187 0014 9A42     		cmp	r2, r3
 188 0016 01D0     		beq	.L13
 189              	.L10:
  77:Core/Src/tim.c ****   {
  78:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
  79:Core/Src/tim.c **** 
  80:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 0 */
  81:Core/Src/tim.c **** 
  82:Core/Src/tim.c ****   /** Initializes the peripherals clocks
  83:Core/Src/tim.c ****   */
  84:Core/Src/tim.c ****     PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_TIM1;
  85:Core/Src/tim.c ****     PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLKSOURCE_PCLK1;
  86:Core/Src/tim.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
  87:Core/Src/tim.c ****     {
  88:Core/Src/tim.c ****       Error_Handler();
  89:Core/Src/tim.c ****     }
  90:Core/Src/tim.c **** 
  91:Core/Src/tim.c ****     /* TIM1 clock enable */
  92:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
  93:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  94:Core/Src/tim.c **** 
  95:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 1 */
  96:Core/Src/tim.c ****   }
ARM GAS  /tmp/cc1iv9eN.s 			page 6


  97:Core/Src/tim.c **** }
 190              		.loc 1 97 1 view .LVU49
 191 0018 0EB0     		add	sp, sp, #56
 192              		@ sp needed
 193              	.LVL11:
 194              		.loc 1 97 1 view .LVU50
 195 001a 10BD     		pop	{r4, pc}
 196              	.LVL12:
 197              	.L13:
  84:Core/Src/tim.c ****     PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLKSOURCE_PCLK1;
 198              		.loc 1 84 5 is_stmt 1 view .LVU51
  84:Core/Src/tim.c ****     PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLKSOURCE_PCLK1;
 199              		.loc 1 84 40 is_stmt 0 view .LVU52
 200 001c 8023     		movs	r3, #128
 201 001e 9B03     		lsls	r3, r3, #14
 202 0020 0193     		str	r3, [sp, #4]
  85:Core/Src/tim.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 203              		.loc 1 85 5 is_stmt 1 view .LVU53
  86:Core/Src/tim.c ****     {
 204              		.loc 1 86 5 view .LVU54
  86:Core/Src/tim.c ****     {
 205              		.loc 1 86 9 is_stmt 0 view .LVU55
 206 0022 01A8     		add	r0, sp, #4
 207 0024 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 208              	.LVL13:
  86:Core/Src/tim.c ****     {
 209              		.loc 1 86 8 view .LVU56
 210 0028 0028     		cmp	r0, #0
 211 002a 0AD1     		bne	.L14
 212              	.L12:
  92:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 213              		.loc 1 92 5 is_stmt 1 view .LVU57
 214              	.LBB2:
  92:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 215              		.loc 1 92 5 view .LVU58
  92:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 216              		.loc 1 92 5 view .LVU59
 217 002c 074A     		ldr	r2, .L15+4
 218 002e 116C     		ldr	r1, [r2, #64]
 219 0030 8020     		movs	r0, #128
 220 0032 0001     		lsls	r0, r0, #4
 221 0034 0143     		orrs	r1, r0
 222 0036 1164     		str	r1, [r2, #64]
  92:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 223              		.loc 1 92 5 view .LVU60
 224 0038 136C     		ldr	r3, [r2, #64]
 225 003a 0340     		ands	r3, r0
 226 003c 0093     		str	r3, [sp]
  92:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 227              		.loc 1 92 5 view .LVU61
 228 003e 009B     		ldr	r3, [sp]
 229              	.LBE2:
  92:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 230              		.loc 1 92 5 view .LVU62
 231              		.loc 1 97 1 is_stmt 0 view .LVU63
 232 0040 EAE7     		b	.L10
 233              	.L14:
ARM GAS  /tmp/cc1iv9eN.s 			page 7


  88:Core/Src/tim.c ****     }
 234              		.loc 1 88 7 is_stmt 1 view .LVU64
 235 0042 FFF7FEFF 		bl	Error_Handler
 236              	.LVL14:
 237 0046 F1E7     		b	.L12
 238              	.L16:
 239              		.align	2
 240              	.L15:
 241 0048 002C0140 		.word	1073818624
 242 004c 00100240 		.word	1073876992
 243              		.cfi_endproc
 244              	.LFE328:
 246              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 247              		.align	1
 248              		.global	HAL_TIM_Base_MspDeInit
 249              		.syntax unified
 250              		.code	16
 251              		.thumb_func
 253              	HAL_TIM_Base_MspDeInit:
 254              	.LVL15:
 255              	.LFB329:
  98:Core/Src/tim.c **** 
  99:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 100:Core/Src/tim.c **** {
 256              		.loc 1 100 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 101:Core/Src/tim.c **** 
 102:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
 261              		.loc 1 102 3 view .LVU66
 262              		.loc 1 102 20 is_stmt 0 view .LVU67
 263 0000 0268     		ldr	r2, [r0]
 264              		.loc 1 102 5 view .LVU68
 265 0002 054B     		ldr	r3, .L20
 266 0004 9A42     		cmp	r2, r3
 267 0006 00D0     		beq	.L19
 268              	.L17:
 103:Core/Src/tim.c ****   {
 104:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 105:Core/Src/tim.c **** 
 106:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 107:Core/Src/tim.c ****     /* Peripheral clock disable */
 108:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 109:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 110:Core/Src/tim.c **** 
 111:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 112:Core/Src/tim.c ****   }
 113:Core/Src/tim.c **** }
 269              		.loc 1 113 1 view .LVU69
 270              		@ sp needed
 271 0008 7047     		bx	lr
 272              	.L19:
 108:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 273              		.loc 1 108 5 is_stmt 1 view .LVU70
 274 000a 044A     		ldr	r2, .L20+4
ARM GAS  /tmp/cc1iv9eN.s 			page 8


 275 000c 136C     		ldr	r3, [r2, #64]
 276 000e 0449     		ldr	r1, .L20+8
 277 0010 0B40     		ands	r3, r1
 278 0012 1364     		str	r3, [r2, #64]
 279              		.loc 1 113 1 is_stmt 0 view .LVU71
 280 0014 F8E7     		b	.L17
 281              	.L21:
 282 0016 C046     		.align	2
 283              	.L20:
 284 0018 002C0140 		.word	1073818624
 285 001c 00100240 		.word	1073876992
 286 0020 FFF7FFFF 		.word	-2049
 287              		.cfi_endproc
 288              	.LFE329:
 290              		.global	htim1
 291              		.section	.bss.htim1,"aw",%nobits
 292              		.align	2
 293              		.set	.LANCHOR0,. + 0
 296              	htim1:
 297 0000 00000000 		.space	76
 297      00000000 
 297      00000000 
 297      00000000 
 297      00000000 
 298              		.text
 299              	.Letext0:
 300              		.file 2 "/home/yiyu/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 301              		.file 3 "/home/yiyu/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 302              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 303              		.file 5 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 304              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc_ex.h"
 305              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 306              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_tim.h"
 307              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
 308              		.file 10 "Core/Inc/main.h"
 309              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_tim_ex.h"
 310              		.file 12 "Core/Inc/tim.h"
 311              		.file 13 "<built-in>"
ARM GAS  /tmp/cc1iv9eN.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/cc1iv9eN.s:18     .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/cc1iv9eN.s:24     .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/cc1iv9eN.s:143    .text.MX_TIM1_Init:0000000000000074 $d
     /tmp/cc1iv9eN.s:150    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/cc1iv9eN.s:156    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/cc1iv9eN.s:241    .text.HAL_TIM_Base_MspInit:0000000000000048 $d
     /tmp/cc1iv9eN.s:247    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/cc1iv9eN.s:253    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/cc1iv9eN.s:284    .text.HAL_TIM_Base_MspDeInit:0000000000000018 $d
     /tmp/cc1iv9eN.s:296    .bss.htim1:0000000000000000 htim1
     /tmp/cc1iv9eN.s:292    .bss.htim1:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
Error_Handler
HAL_RCCEx_PeriphCLKConfig
